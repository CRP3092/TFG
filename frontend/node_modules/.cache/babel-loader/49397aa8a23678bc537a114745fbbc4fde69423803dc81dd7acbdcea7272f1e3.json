{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\BlockBuster\\\\frontend\\\\src\\\\pages\\\\Series.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport config from \"../utils/config\";\nimport \"../styles/styles.css\";\nimport Modal from \"../components/Modal\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { updateFavorites } from \"../utils/favorites\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Series = ({\n  setFavoriteMessage\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [seriesList, setSeriesList] = useState([]);\n  const [selectedSeries, setSelectedSeries] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Cargar la lista de series desde la API\n  useEffect(() => {\n    const fetchSeries = async () => {\n      try {\n        const response = await fetch(`${config.API_URL}/api/series`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setSeriesList(data);\n      } catch (error) {\n        console.error(\"❌ Error al cargar las series:\", error);\n      }\n    };\n    fetchSeries();\n  }, []);\n\n  // Al hacer clic en la tarjeta (excepto el ícono de favorito), se abre el modal\n  const handleClick = async seriesId => {\n    try {\n      const response = await fetch(`${config.API_URL}/api/series/${seriesId}`);\n      const data = await response.json();\n      setSelectedSeries({\n        ...data,\n        type: \"series\"\n      });\n      setIsModalOpen(true);\n    } catch (error) {\n      console.error(\"❌ Error al cargar la serie:\", error);\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedSeries(null);\n  };\n\n  // Subcomponente ContentCard para cada serie\n  const ContentCard = ({\n    item,\n    type\n  }) => {\n    _s();\n    const [isFavorite, setIsFavorite] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    // Determinar favoriteKey según si es película o serie\n    const favoriteKey = String(item.Id_Movie || item.Id_Series);\n\n    // Función para actualizar el estado de favoritos leyendo sessionStorage\n    const updateFavoriteState = () => {\n      const userStr = sessionStorage.getItem(\"user\");\n      if (userStr) {\n        const user = JSON.parse(userStr);\n        const favs = user.Favorites ? user.Favorites.split(\",\").map(fav => fav.trim()) : [];\n        setIsFavorite(favs.includes(favoriteKey));\n      }\n    };\n\n    // Al montar o al cambiar favoriteKey, se actualiza el estado\n    useEffect(() => {\n      updateFavoriteState();\n    }, [favoriteKey]);\n\n    // Además, escucha el evento global \"favoritesUpdated\" para refrescar el estado\n    useEffect(() => {\n      window.addEventListener(\"favoritesUpdated\", updateFavoriteState);\n      return () => {\n        window.removeEventListener(\"favoritesUpdated\", updateFavoriteState);\n      };\n    }, [favoriteKey]);\n    const handleFavoriteClick = async e => {\n      e.stopPropagation();\n      const newFavState = !isFavorite;\n      setIsFavorite(newFavState);\n      setFavoriteMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\n      setTimeout(() => setFavoriteMessage(\"\"), 2000);\n      setMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\n      setTimeout(() => setMessage(\"\"), 2000);\n\n      // Llamamos a la función utilitaria para actualizar favoritos\n      // (Esta función se encuentra en utils/favorites.js)\n      const success = await updateFavorites(favoriteKey, newFavState);\n      if (!success) {\n        console.error(\"❌ Error actualizando favoritos.\");\n      }\n      // La función updateFavorites actualiza sessionStorage y dispara \"favoritesUpdated\"\n      // así que aquí no es necesario volver a forzar el estado manualmente.\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-card\",\n      onClick: () => handleClick(favoriteKey, type),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image-container\",\n        style: {\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${config.API_URL}${item.Image}`,\n          alt: item.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favorite-icon\",\n          onClick: e => handleFavoriteClick(e),\n          style: {\n            position: \"absolute\",\n            top: \"10px\",\n            left: \"10px\",\n            cursor: \"pointer\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fa ${isFavorite ? \"fa-star\" : \"fa-star-o\"}`,\n            style: {\n              fontSize: \"24px\",\n              color: \"gold\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              top: \"0\",\n              left: \"40px\",\n              background: \"rgba(0,0,0,0.7)\",\n              padding: \"3px 8px\",\n              borderRadius: \"5px\",\n              color: \"white\",\n              fontSize: \"14px\"\n            },\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this);\n  };\n  _s(ContentCard, \"lRq9mzHkmJVd89Dz61fQo/fr8NU=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Series\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-carousel\",\n      children: seriesList.map(serie => /*#__PURE__*/_jsxDEV(ContentCard, {\n        item: serie\n      }, serie.Id_Series, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: closeModal,\n      data: selectedSeries,\n      setFavoriteMessage: setFavoriteMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s2(Series, \"XEP9/jrM7uaF6hq8uHB1jP0jNbI=\");\n_c = Series;\nexport default Series;\nvar _c;\n$RefreshReg$(_c, \"Series\");","map":{"version":3,"names":["React","useState","useEffect","config","Modal","updateFavorites","jsxDEV","_jsxDEV","Series","setFavoriteMessage","_s2","_s","$RefreshSig$","seriesList","setSeriesList","selectedSeries","setSelectedSeries","isModalOpen","setIsModalOpen","fetchSeries","response","fetch","API_URL","ok","Error","status","data","json","error","console","handleClick","seriesId","type","closeModal","ContentCard","item","isFavorite","setIsFavorite","message","setMessage","favoriteKey","String","Id_Movie","Id_Series","updateFavoriteState","userStr","sessionStorage","getItem","user","JSON","parse","favs","Favorites","split","map","fav","trim","includes","window","addEventListener","removeEventListener","handleFavoriteClick","e","stopPropagation","newFavState","setTimeout","success","className","onClick","children","style","position","src","Image","alt","Title","fileName","_jsxFileName","lineNumber","columnNumber","top","left","cursor","fontSize","color","background","padding","borderRadius","serie","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/wamp64/www/BlockBuster/frontend/src/pages/Series.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport config from \"../utils/config\";\r\nimport \"../styles/styles.css\";\r\nimport Modal from \"../components/Modal\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport { updateFavorites } from \"../utils/favorites\";\r\n\r\nconst Series = ({ setFavoriteMessage }) => {\r\n  const [seriesList, setSeriesList] = useState([]);\r\n  const [selectedSeries, setSelectedSeries] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  // Cargar la lista de series desde la API\r\n  useEffect(() => {\r\n    const fetchSeries = async () => {\r\n      try {\r\n        const response = await fetch(`${config.API_URL}/api/series`);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setSeriesList(data);\r\n      } catch (error) {\r\n        console.error(\"❌ Error al cargar las series:\", error);\r\n      }\r\n    };\r\n    fetchSeries();\r\n  }, []);\r\n\r\n  // Al hacer clic en la tarjeta (excepto el ícono de favorito), se abre el modal\r\n  const handleClick = async (seriesId) => {\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/series/${seriesId}`);\r\n      const data = await response.json();\r\n      setSelectedSeries({ ...data, type: \"series\" });\r\n      setIsModalOpen(true);\r\n    } catch (error) {\r\n      console.error(\"❌ Error al cargar la serie:\", error);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedSeries(null);\r\n  };\r\n\r\n  // Subcomponente ContentCard para cada serie\r\nconst ContentCard = ({ item, type }) => {\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  // Determinar favoriteKey según si es película o serie\r\n  const favoriteKey = String(item.Id_Movie || item.Id_Series);\r\n\r\n  // Función para actualizar el estado de favoritos leyendo sessionStorage\r\n  const updateFavoriteState = () => {\r\n    const userStr = sessionStorage.getItem(\"user\");\r\n    if (userStr) {\r\n      const user = JSON.parse(userStr);\r\n      const favs = user.Favorites\r\n        ? user.Favorites.split(\",\").map(fav => fav.trim())\r\n        : [];\r\n      setIsFavorite(favs.includes(favoriteKey));\r\n    }\r\n  };\r\n\r\n  // Al montar o al cambiar favoriteKey, se actualiza el estado\r\n  useEffect(() => {\r\n    updateFavoriteState();\r\n  }, [favoriteKey]);\r\n\r\n  // Además, escucha el evento global \"favoritesUpdated\" para refrescar el estado\r\n  useEffect(() => {\r\n    window.addEventListener(\"favoritesUpdated\", updateFavoriteState);\r\n    return () => {\r\n      window.removeEventListener(\"favoritesUpdated\", updateFavoriteState);\r\n    };\r\n  }, [favoriteKey]);\r\n\r\n  const handleFavoriteClick = async (e) => {\r\n    e.stopPropagation();\r\n    const newFavState = !isFavorite;\r\n    setIsFavorite(newFavState);\r\n    \r\n    setFavoriteMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\r\n    setTimeout(() => setFavoriteMessage(\"\"), 2000);\r\n    setMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\r\n    setTimeout(() => setMessage(\"\"), 2000);\r\n\r\n    // Llamamos a la función utilitaria para actualizar favoritos\r\n    // (Esta función se encuentra en utils/favorites.js)\r\n    const success = await updateFavorites(favoriteKey, newFavState);\r\n    if (!success) {\r\n      console.error(\"❌ Error actualizando favoritos.\");\r\n    }\r\n    // La función updateFavorites actualiza sessionStorage y dispara \"favoritesUpdated\"\r\n    // así que aquí no es necesario volver a forzar el estado manualmente.\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-card\" onClick={() => handleClick(favoriteKey, type)}>\r\n      <div className=\"card-image-container\" style={{ position: \"relative\" }}>\r\n        <img src={`${config.API_URL}${item.Image}`} alt={item.Title} />\r\n        <div\r\n          className=\"favorite-icon\"\r\n          onClick={(e) => handleFavoriteClick(e)}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"10px\",\r\n            left: \"10px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <i\r\n            className={`fa ${isFavorite ? \"fa-star\" : \"fa-star-o\"}`}\r\n            style={{ fontSize: \"24px\", color: \"gold\" }}\r\n          />\r\n          {message && (\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"0\",\r\n                left: \"40px\",\r\n                background: \"rgba(0,0,0,0.7)\",\r\n                padding: \"3px 8px\",\r\n                borderRadius: \"5px\",\r\n                color: \"white\",\r\n                fontSize: \"14px\",\r\n              }}\r\n            >\r\n              {message}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <p>{item.Title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n  return (\r\n    <div className=\"content-page\">\r\n      <h1>Series</h1>\r\n      <div className=\"content-carousel\">\r\n        {seriesList.map((serie) => (\r\n          <ContentCard key={serie.Id_Series} item={serie} />\r\n        ))}\r\n      </div>\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onClose={closeModal}\r\n        data={selectedSeries}\r\n        setFavoriteMessage={setFavoriteMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Series;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAO,sBAAsB;AAC7B,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,uCAAuC;AAC9C,SAASC,eAAe,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACzC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGlB,MAAM,CAACmB,OAAO,aAAa,CAAC;QAC5D,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBJ,QAAQ,CAACK,MAAM,EAAE,CAAC;QAC3D;QACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClCb,aAAa,CAACY,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IACDT,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMW,WAAW,GAAG,MAAOC,QAAQ,IAAK;IACtC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGlB,MAAM,CAACmB,OAAO,eAAeS,QAAQ,EAAE,CAAC;MACxE,MAAML,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCX,iBAAiB,CAAC;QAAE,GAAGU,IAAI;QAAEM,IAAI,EAAE;MAAS,CAAC,CAAC;MAC9Cd,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvBf,cAAc,CAAC,KAAK,CAAC;IACrBF,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;;EAED;EACF,MAAMkB,WAAW,GAAGA,CAAC;IAAEC,IAAI;IAAEH;EAAK,CAAC,KAAK;IAAArB,EAAA;IACtC,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;IACnD,MAAM,CAACqC,OAAO,EAAEC,UAAU,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;IAC1C;IACA,MAAMuC,WAAW,GAAGC,MAAM,CAACN,IAAI,CAACO,QAAQ,IAAIP,IAAI,CAACQ,SAAS,CAAC;;IAE3D;IACA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;MAChC,MAAMC,OAAO,GAAGC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;MAC9C,IAAIF,OAAO,EAAE;QACX,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC;QAChC,MAAMM,IAAI,GAAGH,IAAI,CAACI,SAAS,GACvBJ,IAAI,CAACI,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,GAChD,EAAE;QACNnB,aAAa,CAACc,IAAI,CAACM,QAAQ,CAACjB,WAAW,CAAC,CAAC;MAC3C;IACF,CAAC;;IAED;IACAtC,SAAS,CAAC,MAAM;MACd0C,mBAAmB,CAAC,CAAC;IACvB,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;;IAEjB;IACAtC,SAAS,CAAC,MAAM;MACdwD,MAAM,CAACC,gBAAgB,CAAC,kBAAkB,EAAEf,mBAAmB,CAAC;MAChE,OAAO,MAAM;QACXc,MAAM,CAACE,mBAAmB,CAAC,kBAAkB,EAAEhB,mBAAmB,CAAC;MACrE,CAAC;IACH,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;IAEjB,MAAMqB,mBAAmB,GAAG,MAAOC,CAAC,IAAK;MACvCA,CAAC,CAACC,eAAe,CAAC,CAAC;MACnB,MAAMC,WAAW,GAAG,CAAC5B,UAAU;MAC/BC,aAAa,CAAC2B,WAAW,CAAC;MAE1BvD,kBAAkB,CAACuD,WAAW,GAAG,qBAAqB,GAAG,wBAAwB,CAAC;MAClFC,UAAU,CAAC,MAAMxD,kBAAkB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9C8B,UAAU,CAACyB,WAAW,GAAG,qBAAqB,GAAG,wBAAwB,CAAC;MAC1EC,UAAU,CAAC,MAAM1B,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;;MAEtC;MACA;MACA,MAAM2B,OAAO,GAAG,MAAM7D,eAAe,CAACmC,WAAW,EAAEwB,WAAW,CAAC;MAC/D,IAAI,CAACE,OAAO,EAAE;QACZrC,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAC;MAClD;MACA;MACA;IACF,CAAC;IAED,oBACErB,OAAA;MAAK4D,SAAS,EAAC,cAAc;MAACC,OAAO,EAAEA,CAAA,KAAMtC,WAAW,CAACU,WAAW,EAAER,IAAI,CAAE;MAAAqC,QAAA,gBAC1E9D,OAAA;QAAK4D,SAAS,EAAC,sBAAsB;QAACG,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAW,CAAE;QAAAF,QAAA,gBACpE9D,OAAA;UAAKiE,GAAG,EAAE,GAAGrE,MAAM,CAACmB,OAAO,GAAGa,IAAI,CAACsC,KAAK,EAAG;UAACC,GAAG,EAAEvC,IAAI,CAACwC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/DxE,OAAA;UACE4D,SAAS,EAAC,eAAe;UACzBC,OAAO,EAAGN,CAAC,IAAKD,mBAAmB,CAACC,CAAC,CAAE;UACvCQ,KAAK,EAAE;YACLC,QAAQ,EAAE,UAAU;YACpBS,GAAG,EAAE,MAAM;YACXC,IAAI,EAAE,MAAM;YACZC,MAAM,EAAE;UACV,CAAE;UAAAb,QAAA,gBAEF9D,OAAA;YACE4D,SAAS,EAAE,MAAM/B,UAAU,GAAG,SAAS,GAAG,WAAW,EAAG;YACxDkC,KAAK,EAAE;cAAEa,QAAQ,EAAE,MAAM;cAAEC,KAAK,EAAE;YAAO;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC,EACDzC,OAAO,iBACN/B,OAAA;YACE+D,KAAK,EAAE;cACLC,QAAQ,EAAE,UAAU;cACpBS,GAAG,EAAE,GAAG;cACRC,IAAI,EAAE,MAAM;cACZI,UAAU,EAAE,iBAAiB;cAC7BC,OAAO,EAAE,SAAS;cAClBC,YAAY,EAAE,KAAK;cACnBH,KAAK,EAAE,OAAO;cACdD,QAAQ,EAAE;YACZ,CAAE;YAAAd,QAAA,EAED/B;UAAO;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNxE,OAAA;QAAA8D,QAAA,EAAIlC,IAAI,CAACwC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAEV,CAAC;EAACpE,EAAA,CA1FIuB,WAAW;EA4Ff,oBACE3B,OAAA;IAAK4D,SAAS,EAAC,cAAc;IAAAE,QAAA,gBAC3B9D,OAAA;MAAA8D,QAAA,EAAI;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfxE,OAAA;MAAK4D,SAAS,EAAC,kBAAkB;MAAAE,QAAA,EAC9BxD,UAAU,CAACyC,GAAG,CAAEkC,KAAK,iBACpBjF,OAAA,CAAC2B,WAAW;QAAuBC,IAAI,EAAEqD;MAAM,GAA7BA,KAAK,CAAC7C,SAAS;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxE,OAAA,CAACH,KAAK;MACJqF,MAAM,EAAExE,WAAY;MACpByE,OAAO,EAAEzD,UAAW;MACpBP,IAAI,EAAEX,cAAe;MACrBN,kBAAkB,EAAEA;IAAmB;MAAAmE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrE,GAAA,CApJIF,MAAM;AAAAmF,EAAA,GAANnF,MAAM;AAsJZ,eAAeA,MAAM;AAAC,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}