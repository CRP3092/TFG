{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\BlockBuster\\\\frontend\\\\src\\\\pages\\\\UserProfile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport config from \"../utils/config\";\nimport \"../styles/userProfile.css\";\nimport Modal from \"../components/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  // Si la URL trae el id, se usa; de lo contrario, se buscará en sessionStorage.\n  const {\n    id: paramId\n  } = useParams();\n\n  // Función auxiliar para obtener el ID del usuario\n  const getUserId = () => {\n    if (paramId) return paramId;\n    const userStr = sessionStorage.getItem(\"user\");\n    if (!userStr) return null;\n    const user = JSON.parse(userStr);\n    return user.id || user.Id_User || null;\n  };\n  const [userData, setUserData] = useState(null);\n  const [favoriteItems, setFavoriteItems] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [userRatings, setUserRatings] = useState([]);\n\n  // Mapeo de planes de suscripción\n  const planMapping = {\n    1: \"Mensual\",\n    2: \"Trimestral\",\n    3: \"Anual\"\n  };\n\n  // Función para obtener el perfil del usuario\n  const fetchUserProfile = async () => {\n    const userId = getUserId();\n    if (!userId) {\n      console.error(\"❌ No se encontró un ID de usuario válido.\");\n      return;\n    }\n    try {\n      const response = await fetch(`${config.API_URL}/api/usuario/${userId}`);\n      if (!response.ok) {\n        console.error(\"Respuesta no OK, status:\", response.status);\n        return;\n      }\n      const data = await response.json();\n      setUserData(data);\n    } catch (error) {\n      console.error(\"❌ Error al cargar perfil de usuario:\", error);\n    }\n  };\n\n  // Función para obtener las valoraciones realizadas por el usuario\n  const fetchUserRating = async () => {\n    if (!data) return;\n    const itemKey = getFavoriteId();\n    const userObj = JSON.parse(sessionStorage.getItem(\"user\") || \"{}\");\n    const userId = userObj.id || userObj.Id_User;\n    try {\n      const response = await fetch(`${config.API_URL}/api/usuario/${userId}/ratings`);\n      if (response.ok) {\n        const ratingsData = await response.json();\n        const userRatingEntry = ratingsData.find(r => r.item_key === String(itemKey));\n        if (userRatingEntry) {\n          setUserRating(userRatingEntry.rating);\n        } else {\n          setUserRating(null); // Si el usuario no ha calificado antes\n        }\n      }\n    } catch (error) {\n      console.error(\"❌ Error obteniendo la calificación del usuario:\", error);\n    }\n  };\n\n  // Se ejecuta al montar el componente o cuando varíe el parámetro (si fuera aplicable)\n  useEffect(() => {\n    fetchUserProfile();\n    fetchUserRatings();\n  }, [paramId]);\n\n  // Escucha el evento \"favoritesUpdated\" para refrescar el perfil\n  useEffect(() => {\n    const handleFavoritesUpdate = () => {\n      console.log(\"【UserProfile】Evento 'favoritesUpdated' recibido\");\n      fetchUserProfile();\n    };\n    window.addEventListener(\"favoritesUpdated\", handleFavoritesUpdate);\n    return () => {\n      window.removeEventListener(\"favoritesUpdated\", handleFavoritesUpdate);\n    };\n  }, [paramId]);\n\n  // Obtener la información de cada ítem favorito\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      if (!userData || !userData.Favorites) return;\n      const favIds = userData.Favorites.split(\",\").map(fav => fav.trim()).filter(fav => fav !== \"\" && fav !== \"undefined\");\n      const favPromises = favIds.map(async favId => {\n        let item = null;\n        // Intentar cargar como película primero\n        try {\n          const resMovie = await fetch(`${config.API_URL}/api/movies/${favId}`);\n          if (resMovie.ok) {\n            const dataMovie = await resMovie.json();\n            item = {\n              ...dataMovie,\n              type: \"movie\"\n            };\n          }\n        } catch (e) {\n          console.error(\"❌ Error al cargar favorito (movie) con ID\", favId, e);\n        }\n        if (!item) {\n          // Si no se encontró como película, intentar cargar como serie\n          try {\n            const resSeries = await fetch(`${config.API_URL}/api/series/${favId}`);\n            if (resSeries.ok) {\n              const dataSeries = await resSeries.json();\n              item = {\n                ...dataSeries,\n                type: \"series\"\n              };\n            }\n          } catch (e) {\n            console.error(\"❌ Error al cargar favorito (series) con ID\", favId, e);\n          }\n        }\n        return item;\n      });\n      const favResults = await Promise.all(favPromises);\n      const favorites = favResults.filter(item => item !== null);\n      // Ordenar alfabéticamente por título\n      favorites.sort((a, b) => (a.Title || \"\").localeCompare(b.Title || \"\"));\n      setFavoriteItems(favorites);\n    };\n    fetchFavorites();\n  }, [userData]);\n\n  // Función para abrir el modal con detalles de un ítem favorito\n  const handleFavoriteItemClick = async (favId, type) => {\n    try {\n      // Se asume que el endpoint correcto se compone según el tipo: \"movies\" o \"series\"\n      const endpoint = type === \"movie\" ? \"movies\" : \"series\";\n      const response = await fetch(`${config.API_URL}/api/${endpoint}/${favId}`);\n      if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n      const data = await response.json();\n      setSelectedItem({\n        ...data,\n        type\n      });\n      setIsModalOpen(true);\n    } catch (error) {\n      console.error(`❌ Error al cargar detalle de ${type} con ID ${favId}:`, error);\n    }\n  };\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Cargando perfil...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Actualiza la lógica del avatar:\n  // Actualización en la parte donde se define avatarSrc\n\n  const avatarValue = userData.Avatar && typeof userData.Avatar === \"string\" ? userData.Avatar : \"\";\n  const avatarSrc = avatarValue && avatarValue !== \"undefined\" ? avatarValue.startsWith(\"http\") ? avatarValue : `${config.API_URL}${avatarValue}` : `${config.API_URL}/uploads/avatars/7309681.jpg`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userProfile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userProfile-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"avatar\",\n        src: avatarSrc,\n        alt: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userData.Email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userProfile-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userProfile-section userProfile-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Detalles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Fecha de registro:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), \" \", userData.Date_Register]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Direcci\\xF3n:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), \" \", userData.Address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userProfile-section userProfile-subscription\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Suscripci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userData.id_subscription ? planMapping[userData.id_subscription] || \"Sin suscripción\" : \"Sin suscripción\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userProfile-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userProfile-section userProfile-favorites\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Favoritos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favorites-gallery\",\n          children: favoriteItems.length > 0 ? favoriteItems.map((fav, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"favorite-item\",\n            onClick: () => handleFavoriteItemClick(fav.Id_Movie || fav.Id_Series, fav.type),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${config.API_URL}${fav.Image}`,\n              alt: fav.Title || \"Favorito\",\n              className: \"favorite-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: fav.Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No tienes favoritos.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userProfile-section userProfile-ratings\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tus Puntuaciones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), userRatings.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No has realizado ninguna valoraci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"ratings-list\",\n          children: userRatings.map(rating => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Contenido: \", rating.item_key, \" - Puntuaci\\xF3n: \", rating.rating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this)\n          }, rating.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: () => {\n        setIsModalOpen(false);\n        setSelectedItem(null);\n      },\n      data: selectedItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"UDgT+/od3wz2ixcKOqqgnfTcoig=\", false, function () {\n  return [useParams];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","config","Modal","jsxDEV","_jsxDEV","UserProfile","_s","id","paramId","getUserId","userStr","sessionStorage","getItem","user","JSON","parse","Id_User","userData","setUserData","favoriteItems","setFavoriteItems","selectedItem","setSelectedItem","isModalOpen","setIsModalOpen","userRatings","setUserRatings","planMapping","fetchUserProfile","userId","console","error","response","fetch","API_URL","ok","status","data","json","fetchUserRating","itemKey","getFavoriteId","userObj","ratingsData","userRatingEntry","find","r","item_key","String","setUserRating","rating","fetchUserRatings","handleFavoritesUpdate","log","window","addEventListener","removeEventListener","fetchFavorites","Favorites","favIds","split","map","fav","trim","filter","favPromises","favId","item","resMovie","dataMovie","type","e","resSeries","dataSeries","favResults","Promise","all","favorites","sort","a","b","Title","localeCompare","handleFavoriteItemClick","endpoint","Error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","avatarValue","Avatar","avatarSrc","startsWith","src","alt","Name","Email","Date_Register","Address","id_subscription","length","index","onClick","Id_Movie","Id_Series","style","cursor","Image","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/wamp64/www/BlockBuster/frontend/src/pages/UserProfile.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport config from \"../utils/config\";\r\nimport \"../styles/userProfile.css\";\r\nimport Modal from \"../components/Modal\";\r\n\r\nconst UserProfile = () => {\r\n  // Si la URL trae el id, se usa; de lo contrario, se buscará en sessionStorage.\r\n  const { id: paramId } = useParams();\r\n\r\n  // Función auxiliar para obtener el ID del usuario\r\n  const getUserId = () => {\r\n    if (paramId) return paramId;\r\n    const userStr = sessionStorage.getItem(\"user\");\r\n    if (!userStr) return null;\r\n    const user = JSON.parse(userStr);\r\n    return user.id || user.Id_User || null;\r\n  };\r\n\r\n  const [userData, setUserData] = useState(null);\r\n  const [favoriteItems, setFavoriteItems] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [userRatings, setUserRatings] = useState([]);\r\n\r\n  // Mapeo de planes de suscripción\r\n  const planMapping = {\r\n    1: \"Mensual\",\r\n    2: \"Trimestral\",\r\n    3: \"Anual\",\r\n  };\r\n\r\n  // Función para obtener el perfil del usuario\r\n  const fetchUserProfile = async () => {\r\n    const userId = getUserId();\r\n    if (!userId) {\r\n      console.error(\"❌ No se encontró un ID de usuario válido.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/usuario/${userId}`);\r\n      if (!response.ok) {\r\n        console.error(\"Respuesta no OK, status:\", response.status);\r\n        return;\r\n      }\r\n      const data = await response.json();\r\n      setUserData(data);\r\n    } catch (error) {\r\n      console.error(\"❌ Error al cargar perfil de usuario:\", error);\r\n    }\r\n  };\r\n\r\n  // Función para obtener las valoraciones realizadas por el usuario\r\n  const fetchUserRating = async () => {\r\n    if (!data) return;\r\n    const itemKey = getFavoriteId();\r\n    const userObj = JSON.parse(sessionStorage.getItem(\"user\") || \"{}\");\r\n    const userId = userObj.id || userObj.Id_User;\r\n\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/usuario/${userId}/ratings`);\r\n      if (response.ok) {\r\n        const ratingsData = await response.json();\r\n        const userRatingEntry = ratingsData.find(r => r.item_key === String(itemKey));\r\n\r\n        if (userRatingEntry) {\r\n          setUserRating(userRatingEntry.rating);\r\n        } else {\r\n          setUserRating(null); // Si el usuario no ha calificado antes\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Error obteniendo la calificación del usuario:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  // Se ejecuta al montar el componente o cuando varíe el parámetro (si fuera aplicable)\r\n  useEffect(() => {\r\n    fetchUserProfile();\r\n    fetchUserRatings();\r\n  }, [paramId]);\r\n\r\n  // Escucha el evento \"favoritesUpdated\" para refrescar el perfil\r\n  useEffect(() => {\r\n    const handleFavoritesUpdate = () => {\r\n      console.log(\"【UserProfile】Evento 'favoritesUpdated' recibido\");\r\n      fetchUserProfile();\r\n    };\r\n    window.addEventListener(\"favoritesUpdated\", handleFavoritesUpdate);\r\n    return () => {\r\n      window.removeEventListener(\"favoritesUpdated\", handleFavoritesUpdate);\r\n    };\r\n  }, [paramId]);\r\n\r\n  // Obtener la información de cada ítem favorito\r\n  useEffect(() => {\r\n    const fetchFavorites = async () => {\r\n      if (!userData || !userData.Favorites) return;\r\n      const favIds = userData.Favorites\r\n        .split(\",\")\r\n        .map((fav) => fav.trim())\r\n        .filter((fav) => fav !== \"\" && fav !== \"undefined\");\r\n\r\n      const favPromises = favIds.map(async (favId) => {\r\n        let item = null;\r\n        // Intentar cargar como película primero\r\n        try {\r\n          const resMovie = await fetch(`${config.API_URL}/api/movies/${favId}`);\r\n          if (resMovie.ok) {\r\n            const dataMovie = await resMovie.json();\r\n            item = { ...dataMovie, type: \"movie\" };\r\n          }\r\n        } catch (e) {\r\n          console.error(\"❌ Error al cargar favorito (movie) con ID\", favId, e);\r\n        }\r\n        if (!item) {\r\n          // Si no se encontró como película, intentar cargar como serie\r\n          try {\r\n            const resSeries = await fetch(`${config.API_URL}/api/series/${favId}`);\r\n            if (resSeries.ok) {\r\n              const dataSeries = await resSeries.json();\r\n              item = { ...dataSeries, type: \"series\" };\r\n            }\r\n          } catch (e) {\r\n            console.error(\"❌ Error al cargar favorito (series) con ID\", favId, e);\r\n          }\r\n        }\r\n        return item;\r\n      });\r\n\r\n      const favResults = await Promise.all(favPromises);\r\n      const favorites = favResults.filter((item) => item !== null);\r\n      // Ordenar alfabéticamente por título\r\n      favorites.sort((a, b) => (a.Title || \"\").localeCompare(b.Title || \"\"));\r\n      setFavoriteItems(favorites);\r\n    };\r\n\r\n    fetchFavorites();\r\n  }, [userData]);\r\n\r\n  // Función para abrir el modal con detalles de un ítem favorito\r\n  const handleFavoriteItemClick = async (favId, type) => {\r\n    try {\r\n      // Se asume que el endpoint correcto se compone según el tipo: \"movies\" o \"series\"\r\n      const endpoint = type === \"movie\" ? \"movies\" : \"series\";\r\n      const response = await fetch(`${config.API_URL}/api/${endpoint}/${favId}`);\r\n      if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\r\n      const data = await response.json();\r\n      setSelectedItem({ ...data, type });\r\n      setIsModalOpen(true);\r\n    } catch (error) {\r\n      console.error(`❌ Error al cargar detalle de ${type} con ID ${favId}:`, error);\r\n    }\r\n  };\r\n\r\n  if (!userData) {\r\n    return <p className=\"loading\">Cargando perfil...</p>;\r\n  }\r\n\r\n  // Actualiza la lógica del avatar:\r\n  // Actualización en la parte donde se define avatarSrc\r\n\r\n  const avatarValue =\r\n    userData.Avatar && typeof userData.Avatar === \"string\"\r\n      ? userData.Avatar\r\n      : \"\";\r\n\r\n  const avatarSrc =\r\n    avatarValue && avatarValue !== \"undefined\"\r\n      ? avatarValue.startsWith(\"http\")\r\n        ? avatarValue\r\n        : `${config.API_URL}${avatarValue}`\r\n      : `${config.API_URL}/uploads/avatars/7309681.jpg`;\r\n\r\n\r\n  return (\r\n    <div className=\"userProfile-container\">\r\n      <div className=\"userProfile-header\">\r\n        <img className=\"avatar\" src={avatarSrc} alt=\"Avatar\" />\r\n        <h2>{userData.Name}</h2>\r\n        <p>{userData.Email}</p>\r\n      </div>\r\n\r\n      <div className=\"userProfile-main\">\r\n        <div className=\"userProfile-section userProfile-details\">\r\n          <h3>Detalles</h3>\r\n          <p>\r\n            <strong>Fecha de registro:</strong> {userData.Date_Register}\r\n          </p>\r\n          <p>\r\n            <strong>Dirección:</strong> {userData.Address}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"userProfile-section userProfile-subscription\">\r\n          <h3>Suscripción</h3>\r\n          <p>\r\n            {userData.id_subscription\r\n              ? planMapping[userData.id_subscription] || \"Sin suscripción\"\r\n              : \"Sin suscripción\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"userProfile-grid\">\r\n        <div className=\"userProfile-section userProfile-favorites\">\r\n          <h3>Favoritos</h3>\r\n          <div className=\"favorites-gallery\">\r\n            {favoriteItems.length > 0 ? (\r\n              favoriteItems.map((fav, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"favorite-item\"\r\n                  onClick={() =>\r\n                    handleFavoriteItemClick(fav.Id_Movie || fav.Id_Series, fav.type)\r\n                  }\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <img\r\n                    src={`${config.API_URL}${fav.Image}`}\r\n                    alt={fav.Title || \"Favorito\"}\r\n                    className=\"favorite-image\"\r\n                  />\r\n                  <p>{fav.Title}</p>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No tienes favoritos.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"userProfile-section userProfile-ratings\">\r\n          <h3>Tus Puntuaciones</h3>\r\n          {userRatings.length === 0 ? (\r\n            <p>No has realizado ninguna valoración</p>\r\n          ) : (\r\n            <ul className=\"ratings-list\">\r\n              {userRatings.map((rating) => (\r\n                <li key={rating.id}>\r\n                  <span>\r\n                    Contenido: {rating.item_key} - Puntuación: {rating.rating}\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onClose={() => {\r\n          setIsModalOpen(false);\r\n          setSelectedItem(null);\r\n        }}\r\n        data={selectedItem}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAO,2BAA2B;AAClC,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAM;IAAEC,EAAE,EAAEC;EAAQ,CAAC,GAAGR,SAAS,CAAC,CAAC;;EAEnC;EACA,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAID,OAAO,EAAE,OAAOA,OAAO;IAC3B,MAAME,OAAO,GAAGC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAI,CAACF,OAAO,EAAE,OAAO,IAAI;IACzB,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC;IAChC,OAAOG,IAAI,CAACN,EAAE,IAAIM,IAAI,CAACG,OAAO,IAAI,IAAI;EACxC,CAAC;EAED,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAM6B,WAAW,GAAG;IAClB,CAAC,EAAE,SAAS;IACZ,CAAC,EAAE,YAAY;IACf,CAAC,EAAE;EACL,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,MAAM,GAAGpB,SAAS,CAAC,CAAC;IAC1B,IAAI,CAACoB,MAAM,EAAE;MACXC,OAAO,CAACC,KAAK,CAAC,2CAA2C,CAAC;MAC1D;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGhC,MAAM,CAACiC,OAAO,gBAAgBL,MAAM,EAAE,CAAC;MACvE,IAAI,CAACG,QAAQ,CAACG,EAAE,EAAE;QAChBL,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEC,QAAQ,CAACI,MAAM,CAAC;QAC1D;MACF;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCpB,WAAW,CAACmB,IAAI,CAAC;IACnB,CAAC,CAAC,OAAON,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC9D;EACF,CAAC;;EAED;EACA,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACF,IAAI,EAAE;IACX,MAAMG,OAAO,GAAGC,aAAa,CAAC,CAAC;IAC/B,MAAMC,OAAO,GAAG5B,IAAI,CAACC,KAAK,CAACJ,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;IAClE,MAAMiB,MAAM,GAAGa,OAAO,CAACnC,EAAE,IAAImC,OAAO,CAAC1B,OAAO;IAE5C,IAAI;MACF,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGhC,MAAM,CAACiC,OAAO,gBAAgBL,MAAM,UAAU,CAAC;MAC/E,IAAIG,QAAQ,CAACG,EAAE,EAAE;QACf,MAAMQ,WAAW,GAAG,MAAMX,QAAQ,CAACM,IAAI,CAAC,CAAC;QACzC,MAAMM,eAAe,GAAGD,WAAW,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,KAAKC,MAAM,CAACR,OAAO,CAAC,CAAC;QAE7E,IAAII,eAAe,EAAE;UACnBK,aAAa,CAACL,eAAe,CAACM,MAAM,CAAC;QACvC,CAAC,MAAM;UACLD,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QACvB;MACF;IACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;IACzE;EACF,CAAC;;EAGD;EACAhC,SAAS,CAAC,MAAM;IACd6B,gBAAgB,CAAC,CAAC;IAClBuB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAAC3C,OAAO,CAAC,CAAC;;EAEb;EACAT,SAAS,CAAC,MAAM;IACd,MAAMqD,qBAAqB,GAAGA,CAAA,KAAM;MAClCtB,OAAO,CAACuB,GAAG,CAAC,iDAAiD,CAAC;MAC9DzB,gBAAgB,CAAC,CAAC;IACpB,CAAC;IACD0B,MAAM,CAACC,gBAAgB,CAAC,kBAAkB,EAAEH,qBAAqB,CAAC;IAClE,OAAO,MAAM;MACXE,MAAM,CAACE,mBAAmB,CAAC,kBAAkB,EAAEJ,qBAAqB,CAAC;IACvE,CAAC;EACH,CAAC,EAAE,CAAC5C,OAAO,CAAC,CAAC;;EAEb;EACAT,SAAS,CAAC,MAAM;IACd,MAAM0D,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI,CAACxC,QAAQ,IAAI,CAACA,QAAQ,CAACyC,SAAS,EAAE;MACtC,MAAMC,MAAM,GAAG1C,QAAQ,CAACyC,SAAS,CAC9BE,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACxBC,MAAM,CAAEF,GAAG,IAAKA,GAAG,KAAK,EAAE,IAAIA,GAAG,KAAK,WAAW,CAAC;MAErD,MAAMG,WAAW,GAAGN,MAAM,CAACE,GAAG,CAAC,MAAOK,KAAK,IAAK;QAC9C,IAAIC,IAAI,GAAG,IAAI;QACf;QACA,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMnC,KAAK,CAAC,GAAGhC,MAAM,CAACiC,OAAO,eAAegC,KAAK,EAAE,CAAC;UACrE,IAAIE,QAAQ,CAACjC,EAAE,EAAE;YACf,MAAMkC,SAAS,GAAG,MAAMD,QAAQ,CAAC9B,IAAI,CAAC,CAAC;YACvC6B,IAAI,GAAG;cAAE,GAAGE,SAAS;cAAEC,IAAI,EAAE;YAAQ,CAAC;UACxC;QACF,CAAC,CAAC,OAAOC,CAAC,EAAE;UACVzC,OAAO,CAACC,KAAK,CAAC,2CAA2C,EAAEmC,KAAK,EAAEK,CAAC,CAAC;QACtE;QACA,IAAI,CAACJ,IAAI,EAAE;UACT;UACA,IAAI;YACF,MAAMK,SAAS,GAAG,MAAMvC,KAAK,CAAC,GAAGhC,MAAM,CAACiC,OAAO,eAAegC,KAAK,EAAE,CAAC;YACtE,IAAIM,SAAS,CAACrC,EAAE,EAAE;cAChB,MAAMsC,UAAU,GAAG,MAAMD,SAAS,CAAClC,IAAI,CAAC,CAAC;cACzC6B,IAAI,GAAG;gBAAE,GAAGM,UAAU;gBAAEH,IAAI,EAAE;cAAS,CAAC;YAC1C;UACF,CAAC,CAAC,OAAOC,CAAC,EAAE;YACVzC,OAAO,CAACC,KAAK,CAAC,4CAA4C,EAAEmC,KAAK,EAAEK,CAAC,CAAC;UACvE;QACF;QACA,OAAOJ,IAAI;MACb,CAAC,CAAC;MAEF,MAAMO,UAAU,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACX,WAAW,CAAC;MACjD,MAAMY,SAAS,GAAGH,UAAU,CAACV,MAAM,CAAEG,IAAI,IAAKA,IAAI,KAAK,IAAI,CAAC;MAC5D;MACAU,SAAS,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,CAACD,CAAC,CAACE,KAAK,IAAI,EAAE,EAAEC,aAAa,CAACF,CAAC,CAACC,KAAK,IAAI,EAAE,CAAC,CAAC;MACtE7D,gBAAgB,CAACyD,SAAS,CAAC;IAC7B,CAAC;IAEDpB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACxC,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMkE,uBAAuB,GAAG,MAAAA,CAAOjB,KAAK,EAAEI,IAAI,KAAK;IACrD,IAAI;MACF;MACA,MAAMc,QAAQ,GAAGd,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAG,QAAQ;MACvD,MAAMtC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGhC,MAAM,CAACiC,OAAO,QAAQkD,QAAQ,IAAIlB,KAAK,EAAE,CAAC;MAC1E,IAAI,CAAClC,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIkD,KAAK,CAAC,uBAAuBrD,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3E,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClChB,eAAe,CAAC;QAAE,GAAGe,IAAI;QAAEiC;MAAK,CAAC,CAAC;MAClC9C,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,gCAAgCuC,IAAI,WAAWJ,KAAK,GAAG,EAAEnC,KAAK,CAAC;IAC/E;EACF,CAAC;EAED,IAAI,CAACd,QAAQ,EAAE;IACb,oBAAOb,OAAA;MAAGkF,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACtD;;EAEA;EACA;;EAEA,MAAMC,WAAW,GACf3E,QAAQ,CAAC4E,MAAM,IAAI,OAAO5E,QAAQ,CAAC4E,MAAM,KAAK,QAAQ,GAClD5E,QAAQ,CAAC4E,MAAM,GACf,EAAE;EAER,MAAMC,SAAS,GACbF,WAAW,IAAIA,WAAW,KAAK,WAAW,GACtCA,WAAW,CAACG,UAAU,CAAC,MAAM,CAAC,GAC5BH,WAAW,GACX,GAAG3F,MAAM,CAACiC,OAAO,GAAG0D,WAAW,EAAE,GACnC,GAAG3F,MAAM,CAACiC,OAAO,8BAA8B;EAGrD,oBACE9B,OAAA;IAAKkF,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCnF,OAAA;MAAKkF,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCnF,OAAA;QAAKkF,SAAS,EAAC,QAAQ;QAACU,GAAG,EAAEF,SAAU;QAACG,GAAG,EAAC;MAAQ;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvDvF,OAAA;QAAAmF,QAAA,EAAKtE,QAAQ,CAACiF;MAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBvF,OAAA;QAAAmF,QAAA,EAAItE,QAAQ,CAACkF;MAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eAENvF,OAAA;MAAKkF,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BnF,OAAA;QAAKkF,SAAS,EAAC,yCAAyC;QAAAC,QAAA,gBACtDnF,OAAA;UAAAmF,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjBvF,OAAA;UAAAmF,QAAA,gBACEnF,OAAA;YAAAmF,QAAA,EAAQ;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC1E,QAAQ,CAACmF,aAAa;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC,eACJvF,OAAA;UAAAmF,QAAA,gBACEnF,OAAA;YAAAmF,QAAA,EAAQ;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC1E,QAAQ,CAACoF,OAAO;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENvF,OAAA;QAAKkF,SAAS,EAAC,8CAA8C;QAAAC,QAAA,gBAC3DnF,OAAA;UAAAmF,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBvF,OAAA;UAAAmF,QAAA,EACGtE,QAAQ,CAACqF,eAAe,GACrB3E,WAAW,CAACV,QAAQ,CAACqF,eAAe,CAAC,IAAI,iBAAiB,GAC1D;QAAiB;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENvF,OAAA;MAAKkF,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BnF,OAAA;QAAKkF,SAAS,EAAC,2CAA2C;QAAAC,QAAA,gBACxDnF,OAAA;UAAAmF,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBvF,OAAA;UAAKkF,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAC/BpE,aAAa,CAACoF,MAAM,GAAG,CAAC,GACvBpF,aAAa,CAAC0C,GAAG,CAAC,CAACC,GAAG,EAAE0C,KAAK,kBAC3BpG,OAAA;YAEEkF,SAAS,EAAC,eAAe;YACzBmB,OAAO,EAAEA,CAAA,KACPtB,uBAAuB,CAACrB,GAAG,CAAC4C,QAAQ,IAAI5C,GAAG,CAAC6C,SAAS,EAAE7C,GAAG,CAACQ,IAAI,CAChE;YACDsC,KAAK,EAAE;cAAEC,MAAM,EAAE;YAAU,CAAE;YAAAtB,QAAA,gBAE7BnF,OAAA;cACE4F,GAAG,EAAE,GAAG/F,MAAM,CAACiC,OAAO,GAAG4B,GAAG,CAACgD,KAAK,EAAG;cACrCb,GAAG,EAAEnC,GAAG,CAACmB,KAAK,IAAI,UAAW;cAC7BK,SAAS,EAAC;YAAgB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC,eACFvF,OAAA;cAAAmF,QAAA,EAAIzB,GAAG,CAACmB;YAAK;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAZba,KAAK;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAaP,CACN,CAAC,gBAEFvF,OAAA;YAAAmF,QAAA,EAAG;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAC3B;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENvF,OAAA;QAAKkF,SAAS,EAAC,yCAAyC;QAAAC,QAAA,gBACtDnF,OAAA;UAAAmF,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACxBlE,WAAW,CAAC8E,MAAM,KAAK,CAAC,gBACvBnG,OAAA;UAAAmF,QAAA,EAAG;QAAmC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAE1CvF,OAAA;UAAIkF,SAAS,EAAC,cAAc;UAAAC,QAAA,EACzB9D,WAAW,CAACoC,GAAG,CAAEX,MAAM,iBACtB9C,OAAA;YAAAmF,QAAA,eACEnF,OAAA;cAAAmF,QAAA,GAAM,aACO,EAACrC,MAAM,CAACH,QAAQ,EAAC,oBAAe,EAACG,MAAM,CAACA,MAAM;YAAA;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrD;UAAC,GAHAzC,MAAM,CAAC3C,EAAE;YAAAiF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAId,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENvF,OAAA,CAACF,KAAK;MACJ6G,MAAM,EAAExF,WAAY;MACpByF,OAAO,EAAEA,CAAA,KAAM;QACbxF,cAAc,CAAC,KAAK,CAAC;QACrBF,eAAe,CAAC,IAAI,CAAC;MACvB,CAAE;MACFe,IAAI,EAAEhB;IAAa;MAAAmE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrF,EAAA,CAhQID,WAAW;EAAA,QAESL,SAAS;AAAA;AAAAiH,EAAA,GAF7B5G,WAAW;AAkQjB,eAAeA,WAAW;AAAC,IAAA4G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}