{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\BlockBuster\\\\frontend\\\\src\\\\pages\\\\AdminUsers.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport config from \"../utils/config\";\nimport \"../styles/styles.css\";\n\n/**\r\n * Componente AdminUsers\r\n * - Permite a los administradores gestionar usuarios (listar, modificar, eliminar).\r\n * - Incluye paginación y búsqueda de usuarios.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminUsers = () => {\n  _s();\n  const [users, setUsers] = useState([]); // Estado para almacenar la lista de usuarios\n  const [currentPage, setCurrentPage] = useState(1); // Estado para gestionar la paginación\n  const [usersPerPage, setUsersPerPage] = useState(5); // Número de usuarios por página\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Estado para almacenar el filtro de búsqueda\n  const [error, setError] = useState(\"\"); // Estado para gestionar errores en la carga de usuarios\n  const [selectedUser, setSelectedUser] = useState(null); // Estado para manejar la edición de usuarios\n  const [editData, setEditData] = useState({\n    name: \"\",\n    email: \"\",\n    role: \"\"\n  }); // Estado para almacenar datos modificados\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const accessToken = sessionStorage.getItem(\"accessToken\"); // Obtiene el token desde sessionStorage\n\n      if (!accessToken) {\n        setError(\"No hay token de autenticación. Inicia sesión nuevamente.\");\n        return;\n      }\n      try {\n        // Llama a la API para obtener usuarios\n        const response = await fetch(`${config.API_URL}/api/admin/users`, {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": `Bearer ${accessToken}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Error al obtener usuarios.\");\n        }\n        const data = await response.json();\n        setUsers(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchUsers();\n  }, []);\n\n  // Maneja la selección de usuario para editar\n  const handleEditClick = user => {\n    setSelectedUser(user);\n    setEditData({\n      name: user.name,\n      email: user.email,\n      role: user.role\n    });\n  };\n\n  // Maneja cambios en el formulario de edición\n  const handleInputChange = e => {\n    setEditData({\n      ...editData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Actualiza un usuario en la base de datos\n  const handleUpdate = async () => {\n    const accessToken = sessionStorage.getItem(\"accessToken\");\n    if (!accessToken) {\n      setError(\"No hay token de autenticación.\");\n      return;\n    }\n    try {\n      const response = await fetch(`${config.API_URL}/api/admin/users/${selectedUser.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Authorization\": `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(editData)\n      });\n      if (!response.ok) {\n        throw new Error(\"Error al actualizar usuario.\");\n      }\n\n      // Actualiza la lista de usuarios con los nuevos datos\n      setUsers(users.map(user => user.id === selectedUser.id ? {\n        ...user,\n        ...editData\n      } : user));\n      setSelectedUser(null);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  // Maneja la eliminación de un usuario\n  const handleDelete = async userId => {\n    const accessToken = sessionStorage.getItem(\"accessToken\");\n    if (!accessToken) {\n      setError(\"No hay token de autenticación.\");\n      return;\n    }\n    try {\n      const response = await fetch(`${config.API_URL}/api/admin/users/${userId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Authorization\": `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Error al eliminar usuario.\");\n      }\n\n      // Filtra la lista de usuarios eliminando el usuario eliminado\n      setUsers(users.filter(user => user.id !== userId));\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handlePageChange = newPage => setCurrentPage(newPage);\n  const handleUsersPerPageChange = e => {\n    setUsersPerPage(Number(e.target.value));\n    setCurrentPage(1); // Reinicia a la primera página al cambiar el tamaño\n  };\n  const handleSearchChange = e => setSearchQuery(e.target.value.toLowerCase());\n\n  // Filtra usuarios en base a la búsqueda\n  const filteredUsers = users.filter(user => user.name.toLowerCase().includes(searchQuery) || user.email.toLowerCase().includes(searchQuery));\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\n  const currentUsers = filteredUsers.slice(indexOfFirstUser, indexOfLastUser);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gestionar Usuarios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Buscar usuario...\",\n      onChange: handleSearchChange,\n      className: \"search-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"users-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Correo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Acciones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-btn\",\n              onClick: () => handleEditClick(user),\n              children: \"Modificar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => handleDelete(user.id),\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: Math.ceil(filteredUsers.length / usersPerPage)\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: currentPage === index + 1 ? \"active\" : \"\",\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleUsersPerPageChange,\n      value: usersPerPage,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"5\",\n        children: \"5 por p\\xE1gina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"10\",\n        children: \"10 por p\\xE1gina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"25\",\n        children: \"25 por p\\xE1gina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminUsers, \"Bf9Sy2KFjNzL0esQznmMwYHnW/I=\");\n_c = AdminUsers;\nexport default AdminUsers;\nvar _c;\n$RefreshReg$(_c, \"AdminUsers\");","map":{"version":3,"names":["useEffect","useState","config","jsxDEV","_jsxDEV","AdminUsers","_s","users","setUsers","currentPage","setCurrentPage","usersPerPage","setUsersPerPage","searchQuery","setSearchQuery","error","setError","selectedUser","setSelectedUser","editData","setEditData","name","email","role","fetchUsers","accessToken","sessionStorage","getItem","response","fetch","API_URL","method","headers","ok","Error","data","json","message","handleEditClick","user","handleInputChange","e","target","value","handleUpdate","id","body","JSON","stringify","map","handleDelete","userId","filter","handlePageChange","newPage","handleUsersPerPageChange","Number","handleSearchChange","toLowerCase","filteredUsers","includes","indexOfLastUser","indexOfFirstUser","currentUsers","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","Array","from","length","Math","ceil","_","index","_c","$RefreshReg$"],"sources":["C:/wamp64/www/BlockBuster/frontend/src/pages/AdminUsers.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport config from \"../utils/config\";\r\nimport \"../styles/styles.css\";\r\n\r\n/**\r\n * Componente AdminUsers\r\n * - Permite a los administradores gestionar usuarios (listar, modificar, eliminar).\r\n * - Incluye paginación y búsqueda de usuarios.\r\n */\r\nconst AdminUsers = () => {\r\n  const [users, setUsers] = useState([]); // Estado para almacenar la lista de usuarios\r\n  const [currentPage, setCurrentPage] = useState(1); // Estado para gestionar la paginación\r\n  const [usersPerPage, setUsersPerPage] = useState(5); // Número de usuarios por página\r\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Estado para almacenar el filtro de búsqueda\r\n  const [error, setError] = useState(\"\"); // Estado para gestionar errores en la carga de usuarios\r\n  const [selectedUser, setSelectedUser] = useState(null); // Estado para manejar la edición de usuarios\r\n  const [editData, setEditData] = useState({ name: \"\", email: \"\", role: \"\" }); // Estado para almacenar datos modificados\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const accessToken = sessionStorage.getItem(\"accessToken\"); // Obtiene el token desde sessionStorage\r\n\r\n      if (!accessToken) {\r\n        setError(\"No hay token de autenticación. Inicia sesión nuevamente.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Llama a la API para obtener usuarios\r\n        const response = await fetch(`${config.API_URL}/api/admin/users`, {\r\n          method: \"GET\",\r\n          headers: { \r\n            \"Authorization\": `Bearer ${accessToken}`,\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Error al obtener usuarios.\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setUsers(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Maneja la selección de usuario para editar\r\n  const handleEditClick = (user) => {\r\n    setSelectedUser(user);\r\n    setEditData({ name: user.name, email: user.email, role: user.role });\r\n  };\r\n\r\n  // Maneja cambios en el formulario de edición\r\n  const handleInputChange = (e) => {\r\n    setEditData({ ...editData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Actualiza un usuario en la base de datos\r\n  const handleUpdate = async () => {\r\n    const accessToken = sessionStorage.getItem(\"accessToken\");\r\n\r\n    if (!accessToken) {\r\n      setError(\"No hay token de autenticación.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/admin/users/${selectedUser.id}`, {\r\n        method: \"PUT\",\r\n        headers: { \r\n          \"Authorization\": `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(editData)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Error al actualizar usuario.\");\r\n      }\r\n\r\n      // Actualiza la lista de usuarios con los nuevos datos\r\n      setUsers(users.map(user => user.id === selectedUser.id ? { ...user, ...editData } : user));\r\n      setSelectedUser(null);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  // Maneja la eliminación de un usuario\r\n  const handleDelete = async (userId) => {\r\n    const accessToken = sessionStorage.getItem(\"accessToken\");\r\n\r\n    if (!accessToken) {\r\n      setError(\"No hay token de autenticación.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/admin/users/${userId}`, {\r\n        method: \"DELETE\",\r\n        headers: { \r\n          \"Authorization\": `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Error al eliminar usuario.\");\r\n      }\r\n\r\n      // Filtra la lista de usuarios eliminando el usuario eliminado\r\n      setUsers(users.filter(user => user.id !== userId));\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (newPage) => setCurrentPage(newPage);\r\n  const handleUsersPerPageChange = (e) => {\r\n    setUsersPerPage(Number(e.target.value));\r\n    setCurrentPage(1); // Reinicia a la primera página al cambiar el tamaño\r\n  };\r\n  const handleSearchChange = (e) => setSearchQuery(e.target.value.toLowerCase());\r\n\r\n  // Filtra usuarios en base a la búsqueda\r\n  const filteredUsers = users.filter(user =>\r\n    user.name.toLowerCase().includes(searchQuery) ||\r\n    user.email.toLowerCase().includes(searchQuery)\r\n  );\r\n\r\n  const indexOfLastUser = currentPage * usersPerPage;\r\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\r\n  const currentUsers = filteredUsers.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h1>Gestionar Usuarios</h1>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      {/* Buscador */}\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Buscar usuario...\" \r\n        onChange={handleSearchChange} \r\n        className=\"search-box\"\r\n      />\r\n\r\n      {/* Tabla de usuarios */}\r\n      <table className=\"users-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Nombre</th>\r\n            <th>Correo</th>\r\n            <th>Rol</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentUsers.map(user => (\r\n            <tr key={user.id}>\r\n              <td>{user.id}</td>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.role}</td>\r\n              <td>\r\n                <button className=\"edit-btn\" onClick={() => handleEditClick(user)}>Modificar</button>\r\n                <button className=\"delete-btn\" onClick={() => handleDelete(user.id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Botones de paginación */}\r\n      <div className=\"pagination\">\r\n        {Array.from({ length: Math.ceil(filteredUsers.length / usersPerPage) }, (_, index) => (\r\n          <button \r\n            key={index} \r\n            onClick={() => handlePageChange(index + 1)} \r\n            className={currentPage === index + 1 ? \"active\" : \"\"}\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Selector de cantidad de usuarios por página */}\r\n      <select onChange={handleUsersPerPageChange} value={usersPerPage}>\r\n        <option value=\"5\">5 por página</option>\r\n        <option value=\"10\">10 por página</option>\r\n        <option value=\"25\">25 por página</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminUsers;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}