{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\BlockBuster\\\\frontend\\\\src\\\\pages\\\\UserProfile.jsx\",\n  _s = $RefreshSig$();\n// UserProfile.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport config from \"../utils/config\";\nimport \"../styles/userProfile.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Se asume que id es el ID del usuario\n  const [userData, setUserData] = useState(null);\n  const [favoriteItems, setFavoriteItems] = useState([]);\n\n  // Cargar datos del usuario\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const response = await fetch(`${config.API_URL}/api/usuario/${id}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setUserData(data);\n      } catch (error) {\n        console.error(\"❌ Error al cargar perfil de usuario:\", error);\n      }\n    };\n    fetchUserProfile();\n  }, [id]);\n\n  // Una vez cargado el usuario, cargar los favoritos y obtener de cada endpoint la información completa\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      if (userData && userData.Favorites) {\n        const favIds = userData.Favorites.split(\",\").filter(id => id.trim() !== \"\");\n        const favPromises = favIds.map(async favId => {\n          let item = null;\n          // Primero intentamos obtener los datos desde películas\n          try {\n            const resMovie = await fetch(`${config.API_URL}/api/movies/${favId}`);\n            if (resMovie.ok) {\n              const dataMovie = await resMovie.json();\n              item = {\n                ...dataMovie,\n                type: \"movie\"\n              };\n            }\n          } catch (e) {\n            console.error(`Error al cargar favorito (movie) con ID ${favId}:`, e);\n          }\n          // Si no se encuentra en películas, se intenta con series\n          if (!item) {\n            try {\n              const resSeries = await fetch(`${config.API_URL}/api/series/${favId}`);\n              if (resSeries.ok) {\n                const dataSeries = await resSeries.json();\n                item = {\n                  ...dataSeries,\n                  type: \"series\"\n                };\n              }\n            } catch (e) {\n              console.error(`Error al cargar favorito (series) con ID ${favId}:`, e);\n            }\n          }\n          return item;\n        });\n        const favResults = await Promise.all(favPromises);\n        setFavoriteItems(favResults.filter(item => item !== null));\n      }\n    };\n    fetchFavorites();\n  }, [userData]);\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Cargando perfil...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userProfile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userProfile-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"avatar\",\n        src: `${config.API_URL}/uploads/avatars/${userData.Avatar}`,\n        alt: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userProfile-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: userData.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userData.Email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userProfile-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Fecha de registro:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), \" \", userData.Date_Register]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Direcci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), \" \", userData.Address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userProfile-favorites\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Favoritos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"favorites-gallery\",\n        children: favoriteItems.length > 0 ? favoriteItems.map((fav, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${config.API_URL}${fav.Image}`,\n          alt: fav.Title || \"Favorito\",\n          className: \"favorite-image\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No tienes favoritos.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"p4ac6gGpIJRdDNh4Tf1ulxF4qxE=\", false, function () {\n  return [useParams];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","config","jsxDEV","_jsxDEV","UserProfile","_s","id","userData","setUserData","favoriteItems","setFavoriteItems","fetchUserProfile","response","fetch","API_URL","ok","Error","status","data","json","error","console","fetchFavorites","Favorites","favIds","split","filter","trim","favPromises","map","favId","item","resMovie","dataMovie","type","e","resSeries","dataSeries","favResults","Promise","all","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","Avatar","alt","Name","Email","Date_Register","Address","length","fav","index","Image","Title","_c","$RefreshReg$"],"sources":["C:/wamp64/www/BlockBuster/frontend/src/pages/UserProfile.jsx"],"sourcesContent":["// UserProfile.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport config from \"../utils/config\";\r\nimport \"../styles/userProfile.css\";\r\n\r\nconst UserProfile = () => {\r\n  const { id } = useParams(); // Se asume que id es el ID del usuario\r\n  const [userData, setUserData] = useState(null);\r\n  const [favoriteItems, setFavoriteItems] = useState([]);\r\n\r\n  // Cargar datos del usuario\r\n  useEffect(() => {\r\n    const fetchUserProfile = async () => {\r\n      try {\r\n        const response = await fetch(`${config.API_URL}/api/usuario/${id}`);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setUserData(data);\r\n      } catch (error) {\r\n        console.error(\"❌ Error al cargar perfil de usuario:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserProfile();\r\n  }, [id]);\r\n\r\n  // Una vez cargado el usuario, cargar los favoritos y obtener de cada endpoint la información completa\r\n  useEffect(() => {\r\n    const fetchFavorites = async () => {\r\n      if (userData && userData.Favorites) {\r\n        const favIds = userData.Favorites.split(\",\").filter(id => id.trim() !== \"\");\r\n        const favPromises = favIds.map(async (favId) => {\r\n          let item = null;\r\n          // Primero intentamos obtener los datos desde películas\r\n          try {\r\n            const resMovie = await fetch(`${config.API_URL}/api/movies/${favId}`);\r\n            if (resMovie.ok) {\r\n              const dataMovie = await resMovie.json();\r\n              item = { ...dataMovie, type: \"movie\" };\r\n            }\r\n          } catch (e) {\r\n            console.error(`Error al cargar favorito (movie) con ID ${favId}:`, e);\r\n          }\r\n          // Si no se encuentra en películas, se intenta con series\r\n          if (!item) {\r\n            try {\r\n              const resSeries = await fetch(`${config.API_URL}/api/series/${favId}`);\r\n              if (resSeries.ok) {\r\n                const dataSeries = await resSeries.json();\r\n                item = { ...dataSeries, type: \"series\" };\r\n              }\r\n            } catch (e) {\r\n              console.error(`Error al cargar favorito (series) con ID ${favId}:`, e);\r\n            }\r\n          }\r\n          return item;\r\n        });\r\n        const favResults = await Promise.all(favPromises);\r\n        setFavoriteItems(favResults.filter(item => item !== null));\r\n      }\r\n    };\r\n\r\n    fetchFavorites();\r\n  }, [userData]);\r\n\r\n  if (!userData) {\r\n    return <p className=\"loading\">Cargando perfil...</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"userProfile-container\">\r\n      <div className=\"userProfile-header\">\r\n        <img\r\n          className=\"avatar\"\r\n          src={`${config.API_URL}/uploads/avatars/${userData.Avatar}`}\r\n          alt=\"Avatar\"\r\n        />\r\n        <div className=\"userProfile-info\">\r\n          <h2>{userData.Name}</h2>\r\n          <p>{userData.Email}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"userProfile-details\">\r\n        <p>\r\n          <strong>Fecha de registro:</strong> {userData.Date_Register}\r\n        </p>\r\n        <p>\r\n          <strong>Dirección:</strong> {userData.Address}\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"userProfile-favorites\">\r\n        <h3>Favoritos</h3>\r\n        <div className=\"favorites-gallery\">\r\n          {favoriteItems.length > 0 ? (\r\n            favoriteItems.map((fav, index) => (\r\n              <img\r\n                key={index}\r\n                src={`${config.API_URL}${fav.Image}`}\r\n                alt={fav.Title || \"Favorito\"}\r\n                className=\"favorite-image\"\r\n              />\r\n            ))\r\n          ) : (\r\n            <p>No tienes favoritos.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}