{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\BlockBuster\\\\frontend\\\\src\\\\pages\\\\AdminUsers.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport config from \"../utils/config\";\nimport \"../styles/styles.css\";\n\n/**\r\n * Componente AdminUsers\r\n * - Permite a los administradores gestionar usuarios (listar, modificar, eliminar).\r\n * - Incluye paginación, búsqueda de usuarios y edición en un modal interno.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminUsers = () => {\n  _s();\n  const [users, setUsers] = useState([]); // Estado de usuarios\n  const [currentPage, setCurrentPage] = useState(1); // Paginación\n  const [usersPerPage, setUsersPerPage] = useState(5); // Cantidad por página\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Filtro de búsqueda\n  const [error, setError] = useState(\"\"); // Manejo de errores\n  const [selectedUser, setSelectedUser] = useState(null); // Usuario seleccionado\n  const [editData, setEditData] = useState({\n    name: \"\",\n    email: \"\",\n    role: \"\"\n  }); // Datos de edición\n  const [isModalOpen, setIsModalOpen] = useState(false); // Estado del modal interno\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const accessToken = sessionStorage.getItem(\"accessToken\");\n      if (!accessToken) {\n        setError(\"No hay token de autenticación. Inicia sesión nuevamente.\");\n        return;\n      }\n      try {\n        const response = await fetch(`${config.API_URL}/api/admin/users`, {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": `Bearer ${accessToken}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Error al obtener usuarios.\");\n        }\n        const data = await response.json();\n        setUsers(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchUsers();\n  }, []);\n\n  // Maneja la selección de usuario para edición\n  const handleEditClick = user => {\n    setSelectedUser(user);\n    setEditData({\n      name: user.name,\n      email: user.email,\n      role: user.role\n    });\n    setIsModalOpen(true);\n  };\n\n  // Maneja cambios en el formulario de edición\n  const handleInputChange = e => {\n    setEditData({\n      ...editData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Actualiza un usuario en la base de datos\n  const handleUpdate = async () => {\n    const accessToken = sessionStorage.getItem(\"accessToken\");\n    if (!accessToken) {\n      setError(\"No hay token de autenticación.\");\n      return;\n    }\n    try {\n      const response = await fetch(`${config.API_URL}/api/admin/users/${selectedUser.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Authorization\": `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(editData)\n      });\n      if (!response.ok) {\n        throw new Error(\"Error al actualizar usuario.\");\n      }\n      setUsers(users.map(user => user.id === selectedUser.id ? {\n        ...user,\n        ...editData\n      } : user));\n      setIsModalOpen(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  // Maneja la eliminación de un usuario, evitando que el admin se elimine a sí mismo\n  const handleDelete = async userId => {\n    const currentUser = JSON.parse(sessionStorage.getItem(\"user\") || \"{}\");\n    const currentUserId = currentUser.id || currentUser.Id_User;\n    if (userId === currentUserId) {\n      alert(\"❌ No puedes eliminar tu propia cuenta.\");\n      return;\n    }\n    const accessToken = sessionStorage.getItem(\"accessToken\");\n    if (!accessToken) {\n      setError(\"No hay token de autenticación.\");\n      return;\n    }\n    try {\n      const response = await fetch(`${config.API_URL}/api/admin/users/${userId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Authorization\": `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Error al eliminar usuario.\");\n      }\n      setUsers(users.filter(user => user.id !== userId));\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handlePageChange = newPage => setCurrentPage(newPage);\n  const handleUsersPerPageChange = e => {\n    setUsersPerPage(Number(e.target.value));\n    setCurrentPage(1);\n  };\n  const handleSearchChange = e => setSearchQuery(e.target.value.toLowerCase());\n\n  // Filtra usuarios en base a la búsqueda\n  const filteredUsers = users.filter(user => user.name.toLowerCase().includes(searchQuery) || user.email.toLowerCase().includes(searchQuery));\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\n  const currentUsers = filteredUsers.slice(indexOfFirstUser, indexOfLastUser);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gestionar Usuarios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Buscar usuario...\",\n      onChange: handleSearchChange,\n      className: \"search-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"users-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Correo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Acciones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-btn\",\n              onClick: () => handleEditClick(user),\n              children: \"Modificar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => handleDelete(user.id),\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: Math.ceil(filteredUsers.length / usersPerPage)\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: currentPage === index + 1 ? \"active\" : \"\",\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleUsersPerPageChange,\n      value: usersPerPage,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"5\",\n        children: \"5 por p\\xE1gina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"10\",\n        children: \"10 por p\\xE1gina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"25\",\n        children: \"25 por p\\xE1gina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), isModalOpen && selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Editar Usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: editData.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: editData.email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"role\",\n          value: editData.role,\n          onChange: handleInputChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"user\",\n            children: \"Usuario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Administrador\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdate,\n          children: \"Guardar Cambios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-btn\",\n          onClick: () => setIsModalOpen(false),\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminUsers, \"VHx88w45ZeF4wK9VMMxrV+AMeUo=\");\n_c = AdminUsers;\nexport default AdminUsers;\nvar _c;\n$RefreshReg$(_c, \"AdminUsers\");","map":{"version":3,"names":["useEffect","useState","config","jsxDEV","_jsxDEV","AdminUsers","_s","users","setUsers","currentPage","setCurrentPage","usersPerPage","setUsersPerPage","searchQuery","setSearchQuery","error","setError","selectedUser","setSelectedUser","editData","setEditData","name","email","role","isModalOpen","setIsModalOpen","fetchUsers","accessToken","sessionStorage","getItem","response","fetch","API_URL","method","headers","ok","Error","data","json","message","handleEditClick","user","handleInputChange","e","target","value","handleUpdate","id","body","JSON","stringify","map","handleDelete","userId","currentUser","parse","currentUserId","Id_User","alert","filter","handlePageChange","newPage","handleUsersPerPageChange","Number","handleSearchChange","toLowerCase","filteredUsers","includes","indexOfLastUser","indexOfFirstUser","currentUsers","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","Array","from","length","Math","ceil","_","index","_c","$RefreshReg$"],"sources":["C:/wamp64/www/BlockBuster/frontend/src/pages/AdminUsers.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport config from \"../utils/config\";\r\nimport \"../styles/styles.css\";\r\n\r\n/**\r\n * Componente AdminUsers\r\n * - Permite a los administradores gestionar usuarios (listar, modificar, eliminar).\r\n * - Incluye paginación, búsqueda de usuarios y edición en un modal interno.\r\n */\r\nconst AdminUsers = () => {\r\n  const [users, setUsers] = useState([]); // Estado de usuarios\r\n  const [currentPage, setCurrentPage] = useState(1); // Paginación\r\n  const [usersPerPage, setUsersPerPage] = useState(5); // Cantidad por página\r\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Filtro de búsqueda\r\n  const [error, setError] = useState(\"\"); // Manejo de errores\r\n  const [selectedUser, setSelectedUser] = useState(null); // Usuario seleccionado\r\n  const [editData, setEditData] = useState({ name: \"\", email: \"\", role: \"\" }); // Datos de edición\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // Estado del modal interno\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const accessToken = sessionStorage.getItem(\"accessToken\");\r\n\r\n      if (!accessToken) {\r\n        setError(\"No hay token de autenticación. Inicia sesión nuevamente.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(`${config.API_URL}/api/admin/users`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Authorization\": `Bearer ${accessToken}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Error al obtener usuarios.\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setUsers(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Maneja la selección de usuario para edición\r\n  const handleEditClick = (user) => {\r\n    setSelectedUser(user);\r\n    setEditData({ name: user.name, email: user.email, role: user.role });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Maneja cambios en el formulario de edición\r\n  const handleInputChange = (e) => {\r\n    setEditData({ ...editData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Actualiza un usuario en la base de datos\r\n  const handleUpdate = async () => {\r\n    const accessToken = sessionStorage.getItem(\"accessToken\");\r\n\r\n    if (!accessToken) {\r\n      setError(\"No hay token de autenticación.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/admin/users/${selectedUser.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Authorization\": `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(editData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Error al actualizar usuario.\");\r\n      }\r\n\r\n      setUsers(users.map(user => user.id === selectedUser.id ? { ...user, ...editData } : user));\r\n      setIsModalOpen(false);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  // Maneja la eliminación de un usuario, evitando que el admin se elimine a sí mismo\r\n  const handleDelete = async (userId) => {\r\n    const currentUser = JSON.parse(sessionStorage.getItem(\"user\") || \"{}\");\r\n    const currentUserId = currentUser.id || currentUser.Id_User;\r\n\r\n    if (userId === currentUserId) {\r\n      alert(\"❌ No puedes eliminar tu propia cuenta.\");\r\n      return;\r\n    }\r\n\r\n    const accessToken = sessionStorage.getItem(\"accessToken\");\r\n    if (!accessToken) {\r\n      setError(\"No hay token de autenticación.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/admin/users/${userId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Authorization\": `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Error al eliminar usuario.\");\r\n      }\r\n\r\n      setUsers(users.filter(user => user.id !== userId));\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (newPage) => setCurrentPage(newPage);\r\n  const handleUsersPerPageChange = (e) => {\r\n    setUsersPerPage(Number(e.target.value));\r\n    setCurrentPage(1);\r\n  };\r\n  const handleSearchChange = (e) => setSearchQuery(e.target.value.toLowerCase());\r\n\r\n  // Filtra usuarios en base a la búsqueda\r\n  const filteredUsers = users.filter(user =>\r\n    user.name.toLowerCase().includes(searchQuery) ||\r\n    user.email.toLowerCase().includes(searchQuery)\r\n  );\r\n\r\n  const indexOfLastUser = currentPage * usersPerPage;\r\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\r\n  const currentUsers = filteredUsers.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h1>Gestionar Usuarios</h1>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      <input type=\"text\" placeholder=\"Buscar usuario...\" onChange={handleSearchChange} className=\"search-box\" />\r\n\r\n      <table className=\"users-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Nombre</th>\r\n            <th>Correo</th>\r\n            <th>Rol</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentUsers.map(user => (\r\n            <tr key={user.id}>\r\n              <td>{user.id}</td>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.role}</td>\r\n              <td>\r\n                <button className=\"edit-btn\" onClick={() => handleEditClick(user)}>Modificar</button>\r\n                <button className=\"delete-btn\" onClick={() => handleDelete(user.id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"pagination\">\r\n        {Array.from({ length: Math.ceil(filteredUsers.length / usersPerPage) }, (_, index) => (\r\n          <button key={index} onClick={() => handlePageChange(index + 1)} className={currentPage === index + 1 ? \"active\" : \"\"}>\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <select onChange={handleUsersPerPageChange} value={usersPerPage}>\r\n        <option value=\"5\">5 por página</option>\r\n        <option value=\"10\">10 por página</option>\r\n        <option value=\"25\">25 por página</option>\r\n      </select>\r\n\r\n      {isModalOpen && selectedUser && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h2>Editar Usuario</h2>\r\n            <input type=\"text\" name=\"name\" value={editData.name} onChange={handleInputChange} />\r\n            <input type=\"email\" name=\"email\" value={editData.email} onChange={handleInputChange} />\r\n            <select name=\"role\" value={editData.role} onChange={handleInputChange}>\r\n              <option value=\"user\">Usuario</option>\r\n              <option value=\"admin\">Administrador</option>\r\n            </select>\r\n            <button onClick={handleUpdate}>Guardar Cambios</button>\r\n            <button className=\"cancel-btn\" onClick={() => setIsModalOpen(false)}>Cancelar</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminUsers;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}