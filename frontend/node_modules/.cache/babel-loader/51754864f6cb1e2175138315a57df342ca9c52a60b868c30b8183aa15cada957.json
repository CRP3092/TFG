{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\BlockBuster\\\\frontend\\\\src\\\\pages\\\\Movies.jsx\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport config from \"../utils/config\";\nimport \"../styles/styles.css\";\nimport Modal from \"../components/Modal\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { updateFavorites } from \"../utils/favorites\";\n\n/**\r\n * Componente Movies\r\n * - Muestra la lista de películas disponibles en la aplicación.\r\n * - Permite marcar películas como favoritas y visualizar detalles en el modal.\r\n * - Gestiona la actualización de favoritos en `sessionStorage`.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = ({\n  setFavoriteMessage\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [moviesList, setMoviesList] = useState([]); // Estado para almacenar películas\n  const [selectedMovie, setSelectedMovie] = useState(null); // Estado para el contenido seleccionado en el modal\n  const [isModalOpen, setIsModalOpen] = useState(false); // Estado para abrir/cerrar modal\n\n  // Cargar la lista de películas desde la API\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch(`${config.API_URL}/api/movies`);\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n        const data = await response.json();\n        setMoviesList(data);\n      } catch (error) {\n        console.error(\"Error al cargar películas:\", error);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  // Maneja la apertura del modal con los detalles de una película\n  const handleClick = async movieId => {\n    try {\n      const response = await fetch(`${config.API_URL}/api/movies/${movieId}`);\n      const data = await response.json();\n      setSelectedMovie({\n        ...data,\n        type: \"movies\"\n      });\n      setIsModalOpen(true);\n    } catch (error) {\n      console.error(\"Error al cargar la película:\", error);\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedMovie(null);\n  };\n\n  /**\r\n   * Componente ContentCard\r\n   * - Representa una tarjeta para cada película.\r\n   * - Permite marcar como favorito y visualizar detalles en el modal.\r\n   */\n  const ContentCard = ({\n    item\n  }) => {\n    _s();\n    const [isFavorite, setIsFavorite] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const favoriteKey = String(item.Id_Movie); // Obtiene el identificador de la película\n\n    // Actualiza el estado de favoritos al montar\n    useEffect(() => {\n      const userStr = sessionStorage.getItem(\"user\");\n      if (userStr) {\n        const user = JSON.parse(userStr);\n        const favs = user.Favorites ? user.Favorites.split(\",\").map(fav => fav.trim()) : [];\n        setIsFavorite(favs.includes(favoriteKey));\n      }\n    }, [favoriteKey]);\n\n    // Escucha el evento global \"favoritesUpdated\" para refrescar el estado\n    useEffect(() => {\n      window.addEventListener(\"favoritesUpdated\", () => {\n        const userStr = sessionStorage.getItem(\"user\");\n        if (userStr) {\n          const user = JSON.parse(userStr);\n          const favs = user.Favorites ? user.Favorites.split(\",\").map(fav => fav.trim()) : [];\n          setIsFavorite(favs.includes(favoriteKey));\n        }\n      });\n      return () => {\n        window.removeEventListener(\"favoritesUpdated\", updateFavoriteState);\n      };\n    }, [favoriteKey]);\n\n    // Maneja la actualización de favoritos\n    const handleFavoriteClick = async e => {\n      e.stopPropagation();\n      const newFavState = !isFavorite;\n      setIsFavorite(newFavState);\n      setFavoriteMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\n      setTimeout(() => setFavoriteMessage(\"\"), 2000);\n      setMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\n      setTimeout(() => setMessage(\"\"), 2000);\n      const success = await updateFavorites(favoriteKey, newFavState);\n      if (!success) {\n        console.error(\"Error actualizando favoritos.\");\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-card\",\n      onClick: () => handleClick(favoriteKey),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${config.API_URL}${item.Image}`,\n          alt: item.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favorite-icon\",\n          onClick: handleFavoriteClick,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fa ${isFavorite ? \"fa-star\" : \"fa-star-o\"}`,\n            style: {\n              fontSize: \"24px\",\n              color: \"gold\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"favorite-message\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  };\n  _s(ContentCard, \"lRq9mzHkmJVd89Dz61fQo/fr8NU=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pel\\xEDculas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-carousel\",\n      children: moviesList.map(movie => /*#__PURE__*/_jsxDEV(ContentCard, {\n        item: movie\n      }, movie.Id_Movie, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: closeModal,\n      data: selectedMovie,\n      setFavoriteMessage: setFavoriteMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s2(Movies, \"jThUFeuIv+R0vNsWSFW+d+Kz/GA=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["useState","useEffect","config","Modal","updateFavorites","jsxDEV","_jsxDEV","Movies","setFavoriteMessage","_s2","_s","$RefreshSig$","moviesList","setMoviesList","selectedMovie","setSelectedMovie","isModalOpen","setIsModalOpen","fetchMovies","response","fetch","API_URL","ok","Error","status","data","json","error","console","handleClick","movieId","type","closeModal","ContentCard","item","isFavorite","setIsFavorite","message","setMessage","favoriteKey","String","Id_Movie","userStr","sessionStorage","getItem","user","JSON","parse","favs","Favorites","split","map","fav","trim","includes","window","addEventListener","removeEventListener","updateFavoriteState","handleFavoriteClick","e","stopPropagation","newFavState","setTimeout","success","className","onClick","children","src","Image","alt","Title","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","color","movie","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/wamp64/www/BlockBuster/frontend/src/pages/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport config from \"../utils/config\";\r\nimport \"../styles/styles.css\";\r\nimport Modal from \"../components/Modal\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport { updateFavorites } from \"../utils/favorites\";\r\n\r\n/**\r\n * Componente Movies\r\n * - Muestra la lista de películas disponibles en la aplicación.\r\n * - Permite marcar películas como favoritas y visualizar detalles en el modal.\r\n * - Gestiona la actualización de favoritos en `sessionStorage`.\r\n */\r\nconst Movies = ({ setFavoriteMessage }) => {\r\n  const [moviesList, setMoviesList] = useState([]); // Estado para almacenar películas\r\n  const [selectedMovie, setSelectedMovie] = useState(null); // Estado para el contenido seleccionado en el modal\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // Estado para abrir/cerrar modal\r\n\r\n  // Cargar la lista de películas desde la API\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await fetch(`${config.API_URL}/api/movies`);\r\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\r\n        const data = await response.json();\r\n        setMoviesList(data);\r\n      } catch (error) {\r\n        console.error(\"Error al cargar películas:\", error);\r\n      }\r\n    };\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  // Maneja la apertura del modal con los detalles de una película\r\n  const handleClick = async (movieId) => {\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/movies/${movieId}`);\r\n      const data = await response.json();\r\n      setSelectedMovie({ ...data, type: \"movies\" });\r\n      setIsModalOpen(true);\r\n    } catch (error) {\r\n      console.error(\"Error al cargar la película:\", error);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedMovie(null);\r\n  };\r\n\r\n  /**\r\n   * Componente ContentCard\r\n   * - Representa una tarjeta para cada película.\r\n   * - Permite marcar como favorito y visualizar detalles en el modal.\r\n   */\r\n  const ContentCard = ({ item }) => {\r\n    const [isFavorite, setIsFavorite] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const favoriteKey = String(item.Id_Movie); // Obtiene el identificador de la película\r\n\r\n    // Actualiza el estado de favoritos al montar\r\n    useEffect(() => {\r\n      const userStr = sessionStorage.getItem(\"user\");\r\n      if (userStr) {\r\n        const user = JSON.parse(userStr);\r\n        const favs = user.Favorites ? user.Favorites.split(\",\").map(fav => fav.trim()) : [];\r\n        setIsFavorite(favs.includes(favoriteKey));\r\n      }\r\n    }, [favoriteKey]);\r\n\r\n    // Escucha el evento global \"favoritesUpdated\" para refrescar el estado\r\n    useEffect(() => {\r\n      window.addEventListener(\"favoritesUpdated\", () => {\r\n        const userStr = sessionStorage.getItem(\"user\");\r\n        if (userStr) {\r\n          const user = JSON.parse(userStr);\r\n          const favs = user.Favorites ? user.Favorites.split(\",\").map(fav => fav.trim()) : [];\r\n          setIsFavorite(favs.includes(favoriteKey));\r\n        }\r\n      });\r\n      return () => {\r\n        window.removeEventListener(\"favoritesUpdated\", updateFavoriteState);\r\n      };\r\n    }, [favoriteKey]);\r\n\r\n    // Maneja la actualización de favoritos\r\n    const handleFavoriteClick = async (e) => {\r\n      e.stopPropagation();\r\n      const newFavState = !isFavorite;\r\n      setIsFavorite(newFavState);\r\n      setFavoriteMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\r\n      setTimeout(() => setFavoriteMessage(\"\"), 2000);\r\n      setMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\r\n      setTimeout(() => setMessage(\"\"), 2000);\r\n\r\n      const success = await updateFavorites(favoriteKey, newFavState);\r\n      if (!success) {\r\n        console.error(\"Error actualizando favoritos.\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"content-card\" onClick={() => handleClick(favoriteKey)}>\r\n        <div className=\"card-image-container\">\r\n          <img src={`${config.API_URL}${item.Image}`} alt={item.Title} />\r\n          <div className=\"favorite-icon\" onClick={handleFavoriteClick}>\r\n            <i className={`fa ${isFavorite ? \"fa-star\" : \"fa-star-o\"}`} style={{ fontSize: \"24px\", color: \"gold\" }} />\r\n            {message && <div className=\"favorite-message\">{message}</div>}\r\n          </div>\r\n        </div>\r\n        <p>{item.Title}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-page\">\r\n      <h1>Películas</h1>\r\n      <div className=\"content-carousel\">\r\n        {moviesList.map((movie) => (\r\n          <ContentCard key={movie.Id_Movie} item={movie} />\r\n        ))}\r\n      </div>\r\n      <Modal isOpen={isModalOpen} onClose={closeModal} data={selectedMovie} setFavoriteMessage={setFavoriteMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}