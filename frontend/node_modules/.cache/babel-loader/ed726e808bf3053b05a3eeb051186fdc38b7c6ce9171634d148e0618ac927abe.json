{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\BlockBuster\\\\frontend\\\\src\\\\pages\\\\UserProfile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport config from \"../utils/config\";\nimport \"../styles/userProfile.css\";\nimport Modal from \"../components/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const {\n    id: paramId\n  } = useParams();\n  const [userData, setUserData] = useState(null);\n  const [favoriteItems, setFavoriteItems] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [userRatings, setUserRatings] = useState([]);\n\n  // Obtener el ID del usuario desde sessionStorage si paramId es undefined\n  const getUserId = () => {\n    if (paramId) return paramId;\n    const userStr = sessionStorage.getItem(\"user\");\n    if (!userStr) return null;\n    const user = JSON.parse(userStr);\n    return user.id || user.Id_User || null;\n  };\n\n  // Función para obtener el perfil del usuario\n  const fetchUserProfile = async () => {\n    const userId = getUserId();\n    if (!userId) {\n      console.error(\"❌ No se encontró un ID de usuario válido.\");\n      return;\n    }\n    try {\n      const response = await fetch(`${config.API_URL}/api/usuario/${userId}`);\n      if (!response.ok) {\n        console.error(\"Respuesta no OK, status:\", response.status);\n        return;\n      }\n      const data = await response.json();\n      setUserData(data);\n    } catch (error) {\n      console.error(\"❌ Error al cargar perfil de usuario:\", error);\n    }\n  };\n\n  // Función para obtener las valoraciones del usuario\n  const fetchUserRatings = async () => {\n    const userId = getUserId();\n    if (!userId) return;\n    try {\n      const response = await fetch(`${config.API_URL}/api/usuario/${userId}/ratings`);\n      if (response.ok) {\n        const data = await response.json();\n        setUserRatings(data);\n      } else {\n        console.error(\"❌ Error fetching user ratings, status:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"❌ Error fetching user ratings:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchUserProfile();\n    fetchUserRatings();\n  }, []);\n\n  // Actualizar el perfil cuando se actualicen favoritos\n  useEffect(() => {\n    const handleFavoritesUpdate = () => {\n      console.log(\"【UserProfile】Evento 'favoritesUpdated' recibido\");\n      fetchUserProfile();\n    };\n    window.addEventListener(\"favoritesUpdated\", handleFavoritesUpdate);\n    return () => {\n      window.removeEventListener(\"favoritesUpdated\", handleFavoritesUpdate);\n    };\n  }, []);\n\n  // Obtener la información de cada ítem favorito\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      if (!userData || !userData.Favorites) return;\n      const favIds = userData.Favorites.split(\",\").map(fav => fav.trim()).filter(fav => fav !== \"\" && fav !== \"undefined\");\n      const favPromises = favIds.map(async favId => {\n        let item = null;\n\n        // Intentar cargar como película primero\n        try {\n          const resMovie = await fetch(`${config.API_URL}/api/movies/${favId}`);\n          if (resMovie.ok) {\n            const dataMovie = await resMovie.json();\n            item = {\n              ...dataMovie,\n              type: \"movie\"\n            };\n          }\n        } catch (e) {\n          console.error(\"❌ Error al cargar favorito (movie) con ID\", favId, e);\n        }\n        if (!item) {\n          // Intentar cargar como serie\n          try {\n            const resSeries = await fetch(`${config.API_URL}/api/series/${favId}`);\n            if (resSeries.ok) {\n              const dataSeries = await resSeries.json();\n              item = {\n                ...dataSeries,\n                type: \"series\"\n              };\n            }\n          } catch (e) {\n            console.error(\"❌ Error al cargar favorito (series) con ID\", favId, e);\n          }\n        }\n        return item;\n      });\n      const favResults = await Promise.all(favPromises);\n      const favorites = favResults.filter(item => item !== null);\n      favorites.sort((a, b) => (a.Title || \"\").localeCompare(b.Title || \"\"));\n      setFavoriteItems(favorites);\n    };\n    fetchFavorites();\n  }, [userData]);\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Cargando perfil...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userProfile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userProfile-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"avatar\",\n        src: userData.Avatar ? `${config.API_URL}/uploads/avatars/${userData.Avatar}` : `${config.API_URL}/uploads/avatars/default.jpg`,\n        alt: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userData.Email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userProfile-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userProfile-section userProfile-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Detalles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Fecha de registro:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 14\n          }, this), \" \", userData.Date_Register]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Direcci\\xF3n:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 14\n          }, this), \" \", userData.Address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userProfile-section userProfile-subscription\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Suscripci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userData.id_subscription ? planMapping[userData.id_subscription] || \"Sin suscripción\" : \"Sin suscripción\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userProfile-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userProfile-section userProfile-favorites\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Favoritos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favorites-gallery\",\n          children: favoriteItems.length > 0 ? favoriteItems.map((fav, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"favorite-item\",\n            style: {\n              cursor: \"pointer\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${config.API_URL}${fav.Image}`,\n              alt: fav.Title || \"Favorito\",\n              className: \"favorite-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: fav.Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No tienes favoritos.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: () => {\n        setIsModalOpen(false);\n        setSelectedItem(null);\n      },\n      data: selectedItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"UDgT+/od3wz2ixcKOqqgnfTcoig=\", false, function () {\n  return [useParams];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","config","Modal","jsxDEV","_jsxDEV","UserProfile","_s","id","paramId","userData","setUserData","favoriteItems","setFavoriteItems","selectedItem","setSelectedItem","isModalOpen","setIsModalOpen","userRatings","setUserRatings","getUserId","userStr","sessionStorage","getItem","user","JSON","parse","Id_User","fetchUserProfile","userId","console","error","response","fetch","API_URL","ok","status","data","json","fetchUserRatings","handleFavoritesUpdate","log","window","addEventListener","removeEventListener","fetchFavorites","Favorites","favIds","split","map","fav","trim","filter","favPromises","favId","item","resMovie","dataMovie","type","e","resSeries","dataSeries","favResults","Promise","all","favorites","sort","a","b","Title","localeCompare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","Avatar","alt","Name","Email","Date_Register","Address","id_subscription","planMapping","length","index","style","cursor","Image","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/wamp64/www/BlockBuster/frontend/src/pages/UserProfile.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport config from \"../utils/config\";\r\nimport \"../styles/userProfile.css\";\r\nimport Modal from \"../components/Modal\";\r\n\r\nconst UserProfile = () => {\r\n  const { id: paramId } = useParams();\r\n  const [userData, setUserData] = useState(null);\r\n  const [favoriteItems, setFavoriteItems] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [userRatings, setUserRatings] = useState([]);\r\n\r\n  // Obtener el ID del usuario desde sessionStorage si paramId es undefined\r\n  const getUserId = () => {\r\n    if (paramId) return paramId;\r\n    const userStr = sessionStorage.getItem(\"user\");\r\n    if (!userStr) return null;\r\n    const user = JSON.parse(userStr);\r\n    return user.id || user.Id_User || null;\r\n  };\r\n\r\n  // Función para obtener el perfil del usuario\r\n  const fetchUserProfile = async () => {\r\n    const userId = getUserId();\r\n    if (!userId) {\r\n      console.error(\"❌ No se encontró un ID de usuario válido.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/usuario/${userId}`);\r\n      if (!response.ok) {\r\n        console.error(\"Respuesta no OK, status:\", response.status);\r\n        return;\r\n      }\r\n      const data = await response.json();\r\n      setUserData(data);\r\n    } catch (error) {\r\n      console.error(\"❌ Error al cargar perfil de usuario:\", error);\r\n    }\r\n  };\r\n\r\n  // Función para obtener las valoraciones del usuario\r\n  const fetchUserRatings = async () => {\r\n    const userId = getUserId();\r\n    if (!userId) return;\r\n\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/usuario/${userId}/ratings`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setUserRatings(data);\r\n      } else {\r\n        console.error(\"❌ Error fetching user ratings, status:\", response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Error fetching user ratings:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserProfile();\r\n    fetchUserRatings();\r\n  }, []);\r\n\r\n  // Actualizar el perfil cuando se actualicen favoritos\r\n  useEffect(() => {\r\n    const handleFavoritesUpdate = () => {\r\n      console.log(\"【UserProfile】Evento 'favoritesUpdated' recibido\");\r\n      fetchUserProfile();\r\n    };\r\n    window.addEventListener(\"favoritesUpdated\", handleFavoritesUpdate);\r\n    return () => {\r\n      window.removeEventListener(\"favoritesUpdated\", handleFavoritesUpdate);\r\n    };\r\n  }, []);\r\n\r\n  // Obtener la información de cada ítem favorito\r\n  useEffect(() => {\r\n    const fetchFavorites = async () => {\r\n      if (!userData || !userData.Favorites) return;\r\n\r\n      const favIds = userData.Favorites.split(\",\").map(fav => fav.trim()).filter(fav => fav !== \"\" && fav !== \"undefined\");\r\n      const favPromises = favIds.map(async (favId) => {\r\n        let item = null;\r\n\r\n        // Intentar cargar como película primero\r\n        try {\r\n          const resMovie = await fetch(`${config.API_URL}/api/movies/${favId}`);\r\n          if (resMovie.ok) {\r\n            const dataMovie = await resMovie.json();\r\n            item = { ...dataMovie, type: \"movie\" };\r\n          }\r\n        } catch (e) {\r\n          console.error(\"❌ Error al cargar favorito (movie) con ID\", favId, e);\r\n        }\r\n\r\n        if (!item) {\r\n          // Intentar cargar como serie\r\n          try {\r\n            const resSeries = await fetch(`${config.API_URL}/api/series/${favId}`);\r\n            if (resSeries.ok) {\r\n              const dataSeries = await resSeries.json();\r\n              item = { ...dataSeries, type: \"series\" };\r\n            }\r\n          } catch (e) {\r\n            console.error(\"❌ Error al cargar favorito (series) con ID\", favId, e);\r\n          }\r\n        }\r\n        return item;\r\n      });\r\n\r\n      const favResults = await Promise.all(favPromises);\r\n      const favorites = favResults.filter(item => item !== null);\r\n      favorites.sort((a, b) => (a.Title || \"\").localeCompare(b.Title || \"\"));\r\n      setFavoriteItems(favorites);\r\n    };\r\n\r\n    fetchFavorites();\r\n  }, [userData]);\r\n\r\n  if (!userData) {\r\n    return <p className=\"loading\">Cargando perfil...</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"userProfile-container\">\r\n      <div className=\"userProfile-header\">\r\n        <img\r\n          className=\"avatar\"\r\n          src={\r\n            userData.Avatar\r\n              ? `${config.API_URL}/uploads/avatars/${userData.Avatar}`\r\n              : `${config.API_URL}/uploads/avatars/default.jpg`\r\n          }\r\n          alt=\"Avatar\"\r\n        />\r\n        <h2>{userData.Name}</h2>\r\n        <p>{userData.Email}</p>\r\n      </div>\r\n\r\n      <div className=\"userProfile-main\">\r\n        <div className=\"userProfile-section userProfile-details\">\r\n          <h3>Detalles</h3>\r\n          <p><strong>Fecha de registro:</strong> {userData.Date_Register}</p>\r\n          <p><strong>Dirección:</strong> {userData.Address}</p>\r\n        </div>\r\n\r\n        <div className=\"userProfile-section userProfile-subscription\">\r\n          <h3>Suscripción</h3>\r\n          <p>{userData.id_subscription ? planMapping[userData.id_subscription] || \"Sin suscripción\" : \"Sin suscripción\"}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"userProfile-grid\">\r\n        <div className=\"userProfile-section userProfile-favorites\">\r\n          <h3>Favoritos</h3>\r\n          <div className=\"favorites-gallery\">\r\n            {favoriteItems.length > 0 ? (\r\n              favoriteItems.map((fav, index) => (\r\n                <div key={index} className=\"favorite-item\" style={{ cursor: \"pointer\" }}>\r\n                  <img src={`${config.API_URL}${fav.Image}`} alt={fav.Title || \"Favorito\"} className=\"favorite-image\" />\r\n                  <p>{fav.Title}</p>\r\n                </div>\r\n              ))\r\n            ) : <p>No tienes favoritos.</p>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onClose={() => {\r\n          setIsModalOpen(false);\r\n          setSelectedItem(null);\r\n        }}\r\n        data={selectedItem}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}