{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\BlockBuster\\\\frontend\\\\src\\\\pages\\\\AdminPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport config from \"../utils/config\";\nimport \"../styles/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [series, setSeries] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isAdding, setIsAdding] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editItem, setEditItem] = useState(null);\n  // newItem tendrá diferentes campos según el tipo (\"movies\" o \"series\")\n  const [newItem, setNewItem] = useState({\n    title: \"\",\n    genreId: \"\",\n    releaseYear: \"\",\n    // Para películas se usa \"duration\"; para series, \"seasons\"\n    duration: \"\",\n    seasons: \"\",\n    language: \"\",\n    type: \"movies\"\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const accessToken = sessionStorage.getItem(\"accessToken\");\n      if (!accessToken) {\n        setError(\"❌ No hay token de autenticación.\");\n        return;\n      }\n      try {\n        const [moviesResponse, seriesResponse, genresResponse] = await Promise.all([fetch(`${config.API_URL}/api/admin/movies`, {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": `Bearer ${accessToken}`,\n            \"Content-Type\": \"application/json\"\n          }\n        }), fetch(`${config.API_URL}/api/admin/series`, {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": `Bearer ${accessToken}`,\n            \"Content-Type\": \"application/json\"\n          }\n        }), fetch(`${config.API_URL}/api/admin/genres`, {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": `Bearer ${accessToken}`,\n            \"Content-Type\": \"application/json\"\n          }\n        })]);\n        if (!moviesResponse.ok || !seriesResponse.ok || !genresResponse.ok) {\n          throw new Error(\"Error al obtener datos.\");\n        }\n        setMovies(await moviesResponse.json());\n        setSeries(await seriesResponse.json());\n        setGenres(await genresResponse.json());\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleCreate = async () => {\n    const accessToken = sessionStorage.getItem(\"accessToken\");\n    if (!accessToken) {\n      setError(\"❌ No hay token de autenticación.\");\n      return;\n    }\n    try {\n      const response = await fetch(`${config.API_URL}/api/admin/${newItem.type}`, {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newItem)\n      });\n      if (!response.ok) {\n        throw new Error(\"Error al crear contenido.\");\n      }\n      const createdItem = await response.json();\n      if (newItem.type === \"movies\") {\n        setMovies([...movies, createdItem]);\n      } else {\n        setSeries([...series, createdItem]);\n      }\n      setIsAdding(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handleDelete = async (type, id) => {\n    const accessToken = sessionStorage.getItem(\"accessToken\");\n    try {\n      const response = await fetch(`${config.API_URL}/api/admin/${type}/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Authorization\": `Bearer ${accessToken}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Error al eliminar contenido.\");\n      }\n\n      // Actualizamos el estado eliminando el ítem correspondiente\n      if (type === \"movies\") {\n        setMovies(movies.filter(movie => movie.id !== id));\n      } else {\n        setSeries(series.filter(serie => serie.id !== id));\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handleEdit = item => {\n    setEditItem(item);\n    setIsEditing(true);\n  };\n  const handleUpdate = async () => {\n    const accessToken = sessionStorage.getItem(\"accessToken\");\n    try {\n      const response = await fetch(`${config.API_URL}/api/admin/${editItem.type}/${editItem.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Authorization\": `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(editItem)\n      });\n      if (!response.ok) {\n        throw new Error(\"Error al actualizar contenido.\");\n      }\n\n      // Actualizamos los estados locales según el tipo\n      if (editItem.type === \"movies\") {\n        setMovies(movies.map(movie => movie.id === editItem.id ? editItem : movie));\n      } else {\n        setSeries(series.map(serie => serie.id === editItem.id ? editItem : serie));\n      }\n      setIsEditing(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Panel de Administraci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Buscar t\\xEDtulo...\",\n      onChange: e => setSearchQuery(e.target.value.toLowerCase()),\n      className: \"search-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pel\\xEDculas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: () => {\n        setIsAdding(true);\n        // Configuración para Películas\n        setNewItem({\n          title: \"\",\n          genreId: \"\",\n          releaseYear: \"\",\n          duration: \"\",\n          language: \"\",\n          type: \"movies\"\n        });\n      },\n      children: \"A\\xF1adir Pel\\xEDcula\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: movies.filter(movie => movie.Title && movie.Title.toLowerCase().includes(searchQuery)).map(movie => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: movie.genreId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: movie.releaseYear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: movie.duration ? `${movie.duration} min` : \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: movie.language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(movie),\n              children: \"Modificar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(\"movies\", movie.id),\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Series\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: () => {\n        setIsAdding(true);\n        // Configuración para Series (donde se usa \"seasons\" en lugar de \"duration\")\n        setNewItem({\n          title: \"\",\n          genreId: \"\",\n          releaseYear: \"\",\n          seasons: \"\",\n          language: \"\",\n          type: \"series\"\n        });\n      },\n      children: \"A\\xF1adir Serie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: series.filter(serie => serie.Title && serie.Title.toLowerCase().includes(searchQuery)).map(serie => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: serie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: serie.genreId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: serie.releaseYear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: serie.seasons ? serie.seasons : \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: serie.language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(serie),\n              children: \"Modificar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(\"series\", serie.id),\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this)]\n        }, serie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Editar \", editItem.type === \"movies\" ? \"Película\" : \"Serie\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editItem.Title,\n        onChange: e => setEditItem({\n          ...editItem,\n          Title: e.target.value\n        }),\n        placeholder: \"T\\xEDtulo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        children: \"Actualizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(false),\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this), isAdding && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"A\\xF1adir \", newItem.type === \"movies\" ? \"Película\" : \"Serie\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newItem.title,\n        onChange: e => setNewItem({\n          ...newItem,\n          title: e.target.value\n        }),\n        placeholder: \"T\\xEDtulo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"genreId\",\n        value: newItem.genreId,\n        onChange: e => setNewItem({\n          ...newItem,\n          genreId: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Seleccionar g\\xE9nero...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.Id_Genre,\n          children: genre.Name\n        }, genre.Id_Genre, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newItem.releaseYear,\n        onChange: e => setNewItem({\n          ...newItem,\n          releaseYear: e.target.value\n        }),\n        placeholder: \"A\\xF1o de estreno\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), newItem.type === \"movies\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newItem.duration,\n        onChange: e => setNewItem({\n          ...newItem,\n          duration: e.target.value\n        }),\n        placeholder: \"Duraci\\xF3n en minutos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newItem.seasons,\n        onChange: e => setNewItem({\n          ...newItem,\n          seasons: e.target.value\n        }),\n        placeholder: \"N\\xFAmero de temporadas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newItem.language,\n        onChange: e => setNewItem({\n          ...newItem,\n          language: e.target.value\n        }),\n        placeholder: \"Idioma\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreate,\n        children: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsAdding(false),\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"E2IhD6FlTFFtm865tVe1A76AGn0=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useEffect","useState","config","jsxDEV","_jsxDEV","AdminPanel","_s","movies","setMovies","series","setSeries","genres","setGenres","searchQuery","setSearchQuery","error","setError","isAdding","setIsAdding","isEditing","setIsEditing","editItem","setEditItem","newItem","setNewItem","title","genreId","releaseYear","duration","seasons","language","type","fetchData","accessToken","sessionStorage","getItem","moviesResponse","seriesResponse","genresResponse","Promise","all","fetch","API_URL","method","headers","ok","Error","json","message","handleCreate","response","body","JSON","stringify","createdItem","handleDelete","id","filter","movie","serie","handleEdit","item","handleUpdate","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","value","toLowerCase","onClick","Title","includes","name","genre","Id_Genre","Name","_c","$RefreshReg$"],"sources":["C:/wamp64/www/BlockBuster/frontend/src/pages/AdminPanel.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport config from \"../utils/config\";\r\nimport \"../styles/styles.css\";\r\n\r\nconst AdminPanel = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [series, setSeries] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editItem, setEditItem] = useState(null);\r\n  // newItem tendrá diferentes campos según el tipo (\"movies\" o \"series\")\r\n  const [newItem, setNewItem] = useState({\r\n    title: \"\",\r\n    genreId: \"\",\r\n    releaseYear: \"\",\r\n    // Para películas se usa \"duration\"; para series, \"seasons\"\r\n    duration: \"\",\r\n    seasons: \"\",\r\n    language: \"\",\r\n    type: \"movies\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const accessToken = sessionStorage.getItem(\"accessToken\");\r\n\r\n      if (!accessToken) {\r\n        setError(\"❌ No hay token de autenticación.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const [moviesResponse, seriesResponse, genresResponse] = await Promise.all([\r\n          fetch(`${config.API_URL}/api/admin/movies`, {\r\n            method: \"GET\",\r\n            headers: { \r\n              \"Authorization\": `Bearer ${accessToken}`,\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          }),\r\n          fetch(`${config.API_URL}/api/admin/series`, {\r\n            method: \"GET\",\r\n            headers: { \r\n              \"Authorization\": `Bearer ${accessToken}`,\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          }),\r\n          fetch(`${config.API_URL}/api/admin/genres`, {\r\n            method: \"GET\",\r\n            headers: { \r\n              \"Authorization\": `Bearer ${accessToken}`,\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          })\r\n        ]);\r\n\r\n        if (!moviesResponse.ok || !seriesResponse.ok || !genresResponse.ok) {\r\n          throw new Error(\"Error al obtener datos.\");\r\n        }\r\n\r\n        setMovies(await moviesResponse.json());\r\n        setSeries(await seriesResponse.json());\r\n        setGenres(await genresResponse.json());\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleCreate = async () => {\r\n    const accessToken = sessionStorage.getItem(\"accessToken\");\r\n\r\n    if (!accessToken) {\r\n      setError(\"❌ No hay token de autenticación.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/admin/${newItem.type}`, {\r\n        method: \"POST\",\r\n        headers: { \r\n          \"Authorization\": `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(newItem)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Error al crear contenido.\");\r\n      }\r\n\r\n      const createdItem = await response.json();\r\n\r\n      if (newItem.type === \"movies\") {\r\n        setMovies([...movies, createdItem]);\r\n      } else {\r\n        setSeries([...series, createdItem]);\r\n      }\r\n\r\n      setIsAdding(false);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (type, id) => {\r\n    const accessToken = sessionStorage.getItem(\"accessToken\");\r\n\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/admin/${type}/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: { \"Authorization\": `Bearer ${accessToken}` }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Error al eliminar contenido.\");\r\n      }\r\n\r\n      // Actualizamos el estado eliminando el ítem correspondiente\r\n      if (type === \"movies\") {\r\n        setMovies(movies.filter(movie => movie.id !== id));\r\n      } else {\r\n        setSeries(series.filter(serie => serie.id !== id));\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (item) => {\r\n    setEditItem(item);\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    const accessToken = sessionStorage.getItem(\"accessToken\");\r\n\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/admin/${editItem.type}/${editItem.id}`, {\r\n        method: \"PUT\",\r\n        headers: { \r\n          \"Authorization\": `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(editItem)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Error al actualizar contenido.\");\r\n      }\r\n\r\n      // Actualizamos los estados locales según el tipo\r\n      if (editItem.type === \"movies\") {\r\n        setMovies(movies.map(movie => movie.id === editItem.id ? editItem : movie));\r\n      } else {\r\n        setSeries(series.map(serie => serie.id === editItem.id ? editItem : serie));\r\n      }\r\n      setIsEditing(false);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h1>Panel de Administración</h1>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      <input \r\n        type=\"text\"\r\n        placeholder=\"Buscar título...\"\r\n        onChange={(e) => setSearchQuery(e.target.value.toLowerCase())}\r\n        className=\"search-box\"\r\n      />\r\n\r\n      <h2>Películas</h2>\r\n      <button className=\"add-btn\" onClick={() => {\r\n        setIsAdding(true);\r\n        // Configuración para Películas\r\n        setNewItem({ title: \"\", genreId: \"\", releaseYear: \"\", duration: \"\", language: \"\", type: \"movies\" });\r\n      }}>\r\n        Añadir Película\r\n      </button>\r\n      <table>\r\n        <tbody>\r\n          {movies\r\n            .filter(movie => movie.Title && movie.Title.toLowerCase().includes(searchQuery))\r\n            .map(movie => (\r\n              <tr key={movie.id}>\r\n                <td>{movie.Title}</td>\r\n                <td>{movie.genreId}</td>\r\n                <td>{movie.releaseYear}</td>\r\n                <td>{movie.duration ? `${movie.duration} min` : \"N/A\"}</td>\r\n                <td>{movie.language}</td>\r\n                <td>\r\n                  <button onClick={() => handleEdit(movie)}>Modificar</button>\r\n                  <button onClick={() => handleDelete(\"movies\", movie.id)}>Eliminar</button>\r\n                </td>\r\n              </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <h2>Series</h2>\r\n      <button className=\"add-btn\" onClick={() => {\r\n        setIsAdding(true);\r\n        // Configuración para Series (donde se usa \"seasons\" en lugar de \"duration\")\r\n        setNewItem({ title: \"\", genreId: \"\", releaseYear: \"\", seasons: \"\", language: \"\", type: \"series\" });\r\n      }}>\r\n        Añadir Serie\r\n      </button>\r\n      <table>\r\n        <tbody>\r\n          {series\r\n            .filter(serie => serie.Title && serie.Title.toLowerCase().includes(searchQuery))\r\n            .map(serie => (\r\n              <tr key={serie.id}>\r\n                <td>{serie.Title}</td>\r\n                <td>{serie.genreId}</td>\r\n                <td>{serie.releaseYear}</td>\r\n                <td>{serie.seasons ? serie.seasons : \"N/A\"}</td>\r\n                <td>{serie.language}</td>\r\n                <td>\r\n                  <button onClick={() => handleEdit(serie)}>Modificar</button>\r\n                  <button onClick={() => handleDelete(\"series\", serie.id)}>Eliminar</button>\r\n                </td>\r\n              </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Modal de edición */}\r\n      {isEditing && (\r\n        <div className=\"modal\">\r\n          <h3>Editar {editItem.type === \"movies\" ? \"Película\" : \"Serie\"}</h3>\r\n          <input \r\n            type=\"text\"\r\n            value={editItem.Title} \r\n            onChange={(e) => setEditItem({ ...editItem, Title: e.target.value })}\r\n            placeholder=\"Título\"\r\n          />\r\n          {/* Aquí podrías agregar más campos si lo requieres: por ejemplo, para editar genreId, releaseYear, etc. */}\r\n          <button onClick={handleUpdate}>Actualizar</button>\r\n          <button onClick={() => setIsEditing(false)}>Cancelar</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal de creación */}\r\n      {isAdding && (\r\n        <div className=\"modal\">\r\n          <h3>Añadir {newItem.type === \"movies\" ? \"Película\" : \"Serie\"}</h3>\r\n          <input \r\n            type=\"text\"\r\n            value={newItem.title} \r\n            onChange={(e) => setNewItem({ ...newItem, title: e.target.value })}\r\n            placeholder=\"Título\"\r\n          />\r\n          <select \r\n            name=\"genreId\" \r\n            value={newItem.genreId} \r\n            onChange={(e) => setNewItem({ ...newItem, genreId: e.target.value })}\r\n          >\r\n            <option value=\"\">Seleccionar género...</option>\r\n            {genres.map(genre => (\r\n              <option key={genre.Id_Genre} value={genre.Id_Genre}>\r\n                {genre.Name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <input \r\n            type=\"number\"\r\n            value={newItem.releaseYear} \r\n            onChange={(e) => setNewItem({ ...newItem, releaseYear: e.target.value })}\r\n            placeholder=\"Año de estreno\"\r\n          />\r\n          {newItem.type === \"movies\" ? (\r\n            <input \r\n              type=\"number\"\r\n              value={newItem.duration} \r\n              onChange={(e) => setNewItem({ ...newItem, duration: e.target.value })}\r\n              placeholder=\"Duración en minutos\"\r\n            />\r\n          ) : (\r\n            <input \r\n              type=\"number\"\r\n              value={newItem.seasons} \r\n              onChange={(e) => setNewItem({ ...newItem, seasons: e.target.value })}\r\n              placeholder=\"Número de temporadas\"\r\n            />\r\n          )}\r\n          <input \r\n            type=\"text\"\r\n            value={newItem.language} \r\n            onChange={(e) => setNewItem({ ...newItem, language: e.target.value })}\r\n            placeholder=\"Idioma\"\r\n          />\r\n          <button onClick={handleCreate}>Guardar</button>\r\n          <button onClick={() => setIsAdding(false)}>Cancelar</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}