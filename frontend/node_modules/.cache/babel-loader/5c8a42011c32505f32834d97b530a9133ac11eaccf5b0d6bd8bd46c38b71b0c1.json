{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\BlockBuster\\\\frontend\\\\src\\\\pages\\\\AdminPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport config from \"../utils/config\";\nimport \"../styles/styles.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [series, setSeries] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isAdding, setIsAdding] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editItem, setEditItem] = useState(null);\n\n  // Objeto para la creación\n  const [newItem, setNewItem] = useState({\n    Title: \"\",\n    genreId: \"\",\n    releaseYear: \"\",\n    duration: \"\",\n    // Para películas\n    seasons: \"\",\n    // Para series\n    language: \"\",\n    type: \"movies\" // \"movies\" o \"series\"\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const accessToken = sessionStorage.getItem(\"accessToken\");\n      if (!accessToken) {\n        setError(\"❌ No hay token de autenticación.\");\n        return;\n      }\n      try {\n        const [moviesResponse, seriesResponse, genresResponse] = await Promise.all([fetch(`${config.API_URL}/api/admin/movies`, {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": `Bearer ${accessToken}`,\n            \"Content-Type\": \"application/json\"\n          }\n        }), fetch(`${config.API_URL}/api/admin/series`, {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": `Bearer ${accessToken}`,\n            \"Content-Type\": \"application/json\"\n          }\n        }), fetch(`${config.API_URL}/api/admin/genres`, {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": `Bearer ${accessToken}`,\n            \"Content-Type\": \"application/json\"\n          }\n        })]);\n        if (!moviesResponse.ok || !seriesResponse.ok || !genresResponse.ok) {\n          throw new Error(\"Error al obtener datos.\");\n        }\n        const moviesData = await moviesResponse.json();\n        const seriesData = await seriesResponse.json();\n        const genresData = await genresResponse.json();\n        console.log(\"📌 Películas recibidas:\", JSON.stringify(moviesData, null, 2));\n        console.log(\"📌 Series recibidas:\", JSON.stringify(seriesData, null, 2));\n        console.log(\"📌 Géneros recibidos:\", JSON.stringify(genresData, null, 2));\n        setMovies(moviesData);\n        setSeries(seriesData);\n        setGenres(genresData);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Función para crear un elemento (película o serie)\n  const handleCreate = async () => {\n    const accessToken = sessionStorage.getItem(\"accessToken\");\n    if (!accessToken) {\n      setError(\"❌ No hay token de autenticación.\");\n      return;\n    }\n    try {\n      const response = await fetch(`${config.API_URL}/api/admin/${newItem.type}`, {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          Title: newItem.Title,\n          genreId: newItem.genreId,\n          releaseYear: parseInt(newItem.releaseYear, 10),\n          duration: newItem.type === \"movies\" ? parseInt(newItem.duration, 10) : undefined,\n          seasons: newItem.type === \"series\" ? parseInt(newItem.seasons, 10) : undefined,\n          language: newItem.language\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Error al crear contenido.\");\n      }\n      const createdItem = await response.json();\n      if (newItem.type === \"movies\") {\n        setMovies([...movies, createdItem]);\n      } else {\n        setSeries([...series, createdItem]);\n      }\n      setIsAdding(false);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Función para eliminar contenido\n  const handleDelete = async (type, id) => {\n    const accessToken = sessionStorage.getItem(\"accessToken\");\n    try {\n      const response = await fetch(`${config.API_URL}/api/admin/${type}/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Authorization\": `Bearer ${accessToken}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Error al eliminar contenido.\");\n      }\n      if (type === \"movies\") {\n        setMovies(movies.filter(movie => movie.Id_Movie !== id && movie.id !== id));\n      } else {\n        setSeries(series.filter(serie => serie.Id_Series !== id && serie.id !== id));\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Función para iniciar la edición\n  const handleEdit = item => {\n    const resolvedType = item.type;\n    let id, genreId, releaseYear, field, language;\n    if (resolvedType === \"movies\") {\n      id = item.id || item.Id_Movie;\n      // Si el valor viene como 0, lo convertimos a cadena vacía:\n      genreId = item.genreId || item.Genre;\n      if (Number(genreId) === 0) {\n        genreId = \"\";\n      } else {\n        genreId = String(genreId);\n      }\n      releaseYear = item.releaseYear || item.Release_Year || \"\";\n      field = item.duration || item.Duration || \"\";\n      language = item.language || item.Language || \"\";\n    } else if (resolvedType === \"series\") {\n      id = item.id || item.Id_Series;\n      genreId = item.genreId || item.Genre;\n      if (Number(genreId) === 0) {\n        genreId = \"\";\n      } else {\n        genreId = String(genreId);\n      }\n      releaseYear = item.releaseYear || item.Release_Year || \"\";\n      field = item.seasons || item.Seasons || \"\";\n      language = item.language || item.Language || \"\";\n    }\n    const newEditItem = {\n      ...item,\n      id,\n      type: resolvedType,\n      genreId,\n      // Aquí, si el valor era 0, ahora es \"\"\n      releaseYear,\n      language\n    };\n    if (resolvedType === \"movies\") {\n      newEditItem.duration = field;\n    } else if (resolvedType === \"series\") {\n      newEditItem.seasons = field;\n    }\n    console.log(\"handleEdit, newEditItem:\", newEditItem);\n    setEditItem(newEditItem);\n    setIsEditing(true);\n  };\n\n  // Captura de cambios en el modal de edición\n  const handleEditInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditItem({\n      ...editItem,\n      [name]: value\n    });\n  };\n\n  // Función para actualizar en el backend\n  const handleUpdate = async () => {\n    const accessToken = sessionStorage.getItem(\"accessToken\");\n\n    // Sanitizar y convertir los campos numéricos:\n    const title = String(editItem.Title || \"\").trim();\n    const language = String(editItem.language || \"\").trim();\n    const genreStr = String(editItem.genreId || \"\").trim();\n    const releaseYearStr = String(editItem.releaseYear || \"\").trim();\n    const sanitizedGenre = parseInt(genreStr, 10);\n    const sanitizedReleaseYear = parseInt(releaseYearStr, 10);\n    let sanitizedField;\n    if (editItem.type === \"movies\") {\n      sanitizedField = parseInt(String(editItem.duration || \"\").trim(), 10);\n    } else if (editItem.type === \"series\") {\n      sanitizedField = parseInt(String(editItem.seasons || \"\").trim(), 10);\n    }\n\n    // Depuración: imprimir los valores\n    console.log(\"Title:\", title);\n    console.log(\"genreStr:\", genreStr);\n    console.log(\"releaseYearStr:\", releaseYearStr);\n    console.log(\"Language:\", language);\n    console.log(\"sanitizedGenre:\", sanitizedGenre);\n    console.log(\"sanitizedReleaseYear:\", sanitizedReleaseYear);\n    console.log(\"sanitizedField:\", sanitizedField);\n\n    // Validar que cada campo tenga un valor válido\n    if (!title || !genreStr || !releaseYearStr || !language || isNaN(sanitizedGenre) || isNaN(sanitizedReleaseYear) || editItem.type === \"movies\" && isNaN(sanitizedField) || editItem.type === \"series\" && isNaN(sanitizedField)) {\n      setError(\"Por favor, complete todos los campos obligatorios con valores válidos.\");\n      return;\n    }\n\n    // Construir el objeto de actualización usando las mismas claves que en la creación\n    let updatedData;\n    if (editItem.type === \"movies\") {\n      updatedData = {\n        Title: title,\n        genreId: sanitizedGenre,\n        releaseYear: sanitizedReleaseYear,\n        duration: sanitizedField,\n        language: language\n      };\n    } else if (editItem.type === \"series\") {\n      updatedData = {\n        Title: title,\n        genreId: sanitizedGenre,\n        releaseYear: sanitizedReleaseYear,\n        seasons: sanitizedField,\n        language: language\n      };\n    }\n    console.log(\"📌 Datos enviados al backend:\", updatedData);\n    try {\n      const response = await fetch(`${config.API_URL}/api/admin/${editItem.type}/${editItem.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Authorization\": `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedData)\n      });\n      if (!response.ok) {\n        const errorDetail = await response.text();\n        throw new Error(`Error al actualizar contenido: ${errorDetail}`);\n      }\n      const updatedItem = await response.json();\n      if (editItem.type === \"movies\") {\n        setMovies(prevMovies => prevMovies.map(movie => movie.id === editItem.id || movie.Id_Movie === editItem.id ? updatedItem : movie));\n      } else if (editItem.type === \"series\") {\n        setSeries(prevSeries => prevSeries.map(serie => serie.id === editItem.id || serie.Id_Series === editItem.id ? updatedItem : serie));\n      }\n      setIsEditing(false);\n    } catch (error) {\n      console.error(\"❌ Error en actualización:\", error);\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Panel de Administraci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Buscar t\\xEDtulo...\",\n      onChange: e => setSearchQuery(e.target.value.toLowerCase()),\n      className: \"search-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pel\\xEDculas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: () => {\n        setIsAdding(true);\n        setNewItem({\n          Title: \"\",\n          genreId: \"\",\n          releaseYear: \"\",\n          duration: \"\",\n          language: \"\",\n          type: \"movies\"\n        });\n      },\n      children: \"A\\xF1adir Pel\\xEDcula\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"users-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"T\\xEDtulo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"G\\xE9nero\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"A\\xF1o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Duraci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Idioma\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Acciones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: movies.filter(movie => movie.Title && movie.Title.toLowerCase().includes(searchQuery)).map(movie => {\n          var _genres$find;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: movie.id || movie.Id_Movie\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: movie.Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (genres === null || genres === void 0 ? void 0 : genres.length) > 0 ? ((_genres$find = genres.find(g => Number(g.Id_Genre) === Number(movie.Genre))) === null || _genres$find === void 0 ? void 0 : _genres$find.Name) || \"Sin género\" : \"Cargando...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: movie.Release_Year ? movie.Release_Year : \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: movie.Duration ? `${movie.Duration} min` : \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: movie.Language ? movie.Language : \"No definido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit({\n                  ...movie,\n                  type: \"movies\"\n                }),\n                children: \"Modificar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(\"movies\", movie.id || movie.Id_Movie),\n                children: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this)]\n          }, movie.id || movie.Id_Movie, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Series\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: () => {\n        setIsAdding(true);\n        setNewItem({\n          Title: \"\",\n          genreId: \"\",\n          releaseYear: \"\",\n          seasons: \"\",\n          language: \"\",\n          type: \"series\"\n        });\n      },\n      children: \"A\\xF1adir Serie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"users-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"T\\xEDtulo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"G\\xE9nero\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"A\\xF1o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Temporadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Idioma\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Acciones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: series.filter(serie => serie.Title && serie.Title.toLowerCase().includes(searchQuery)).map(serie => {\n          var _genres$find2;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: serie.id || serie.Id_Series\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: serie.Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (genres === null || genres === void 0 ? void 0 : genres.length) > 0 ? ((_genres$find2 = genres.find(g => Number(g.Id_Genre) === Number(serie.Genre))) === null || _genres$find2 === void 0 ? void 0 : _genres$find2.Name) || \"Sin género\" : \"Cargando...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: serie.Release_Year ? serie.Release_Year : \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: serie.Seasons ? serie.Seasons : \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: serie.Language ? serie.Language : \"No definido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit({\n                  ...serie,\n                  type: \"series\"\n                }),\n                children: \"Modificar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(\"series\", serie.id || serie.Id_Series),\n                children: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this)]\n          }, serie.id || serie.Id_Series, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this), isEditing && editItem && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Editar \", editItem.type === \"movies\" ? \"Película\" : \"Serie\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"T\\xEDtulo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Title\",\n          value: editItem.Title || \"\",\n          onChange: handleEditInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"G\\xE9nero:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"genreId\",\n          value: editItem.genreId || \"\",\n          onChange: handleEditInputChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccionar g\\xE9nero...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: String(genre.Id_Genre),\n            children: genre.Name\n          }, genre.Id_Genre, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"A\\xF1o de estreno:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"releaseYear\",\n          value: editItem.releaseYear || \"\",\n          onChange: handleEditInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this), editItem.type === \"movies\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Duraci\\xF3n (min):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"duration\",\n            value: editItem.duration || \"\",\n            onChange: handleEditInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Temporadas:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"seasons\",\n            value: editItem.seasons || \"\",\n            onChange: handleEditInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Idioma:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"language\",\n          value: editItem.language || \"\",\n          onChange: handleEditInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"update-btn\",\n          onClick: handleUpdate,\n          children: \"Guardar Cambios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-btn\",\n          onClick: () => setIsEditing(false),\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 9\n    }, this), isAdding && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"A\\xF1adir \", newItem.type === \"movies\" ? \"Película\" : \"Serie\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Title\",\n          value: newItem.Title,\n          onChange: e => setNewItem({\n            ...newItem,\n            Title: e.target.value\n          }),\n          placeholder: \"T\\xEDtulo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"genreId\",\n          value: newItem.genreId,\n          onChange: e => setNewItem({\n            ...newItem,\n            genreId: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccionar g\\xE9nero...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 15\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre.Id_Genre,\n            children: genre.Name\n          }, genre.Id_Genre, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"releaseYear\",\n          value: newItem.releaseYear,\n          onChange: e => setNewItem({\n            ...newItem,\n            releaseYear: e.target.value\n          }),\n          placeholder: \"A\\xF1o de estreno\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, this), newItem.type === \"movies\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"duration\",\n          value: newItem.duration,\n          onChange: e => setNewItem({\n            ...newItem,\n            duration: e.target.value\n          }),\n          placeholder: \"Duraci\\xF3n en minutos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"seasons\",\n          value: newItem.seasons,\n          onChange: e => setNewItem({\n            ...newItem,\n            seasons: e.target.value\n          }),\n          placeholder: \"N\\xFAmero de temporadas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"language\",\n          value: newItem.language,\n          onChange: e => setNewItem({\n            ...newItem,\n            language: e.target.value\n          }),\n          placeholder: \"Idioma\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreate,\n          children: \"Guardar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAdding(false),\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"pajJnVgcf733UcOoaUaajGYIy/s=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useEffect","useState","config","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPanel","_s","movies","setMovies","series","setSeries","genres","setGenres","searchQuery","setSearchQuery","error","setError","isAdding","setIsAdding","isEditing","setIsEditing","editItem","setEditItem","newItem","setNewItem","Title","genreId","releaseYear","duration","seasons","language","type","fetchData","accessToken","sessionStorage","getItem","moviesResponse","seriesResponse","genresResponse","Promise","all","fetch","API_URL","method","headers","ok","Error","moviesData","json","seriesData","genresData","console","log","JSON","stringify","message","handleCreate","response","body","parseInt","undefined","createdItem","err","handleDelete","id","filter","movie","Id_Movie","serie","Id_Series","handleEdit","item","resolvedType","field","Genre","Number","String","Release_Year","Duration","Language","Seasons","newEditItem","handleEditInputChange","e","name","value","target","handleUpdate","title","trim","genreStr","releaseYearStr","sanitizedGenre","sanitizedReleaseYear","sanitizedField","isNaN","updatedData","errorDetail","text","updatedItem","prevMovies","map","prevSeries","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","toLowerCase","onClick","includes","_genres$find","length","find","g","Id_Genre","Name","_genres$find2","genre","_c","$RefreshReg$"],"sources":["C:/wamp64/www/BlockBuster/frontend/src/pages/AdminPanel.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport config from \"../utils/config\";\r\nimport \"../styles/styles.css\";\r\n\r\nconst AdminPanel = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [series, setSeries] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editItem, setEditItem] = useState(null);\r\n\r\n  // Objeto para la creación\r\n  const [newItem, setNewItem] = useState({\r\n    Title: \"\",\r\n    genreId: \"\",\r\n    releaseYear: \"\",\r\n    duration: \"\", // Para películas\r\n    seasons: \"\", // Para series\r\n    language: \"\",\r\n    type: \"movies\", // \"movies\" o \"series\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const accessToken = sessionStorage.getItem(\"accessToken\");\r\n      if (!accessToken) {\r\n        setError(\"❌ No hay token de autenticación.\");\r\n        return;\r\n      }\r\n      try {\r\n        const [moviesResponse, seriesResponse, genresResponse] = await Promise.all([\r\n          fetch(`${config.API_URL}/api/admin/movies`, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Authorization\": `Bearer ${accessToken}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }),\r\n          fetch(`${config.API_URL}/api/admin/series`, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Authorization\": `Bearer ${accessToken}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }),\r\n          fetch(`${config.API_URL}/api/admin/genres`, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Authorization\": `Bearer ${accessToken}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }),\r\n        ]);\r\n\r\n        if (!moviesResponse.ok || !seriesResponse.ok || !genresResponse.ok) {\r\n          throw new Error(\"Error al obtener datos.\");\r\n        }\r\n\r\n        const moviesData = await moviesResponse.json();\r\n        const seriesData = await seriesResponse.json();\r\n        const genresData = await genresResponse.json();\r\n\r\n        console.log(\"📌 Películas recibidas:\", JSON.stringify(moviesData, null, 2));\r\n        console.log(\"📌 Series recibidas:\", JSON.stringify(seriesData, null, 2));\r\n        console.log(\"📌 Géneros recibidos:\", JSON.stringify(genresData, null, 2));\r\n\r\n        setMovies(moviesData);\r\n        setSeries(seriesData);\r\n        setGenres(genresData);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Función para crear un elemento (película o serie)\r\n  const handleCreate = async () => {\r\n    const accessToken = sessionStorage.getItem(\"accessToken\");\r\n    if (!accessToken) {\r\n      setError(\"❌ No hay token de autenticación.\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/admin/${newItem.type}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Authorization\": `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          Title: newItem.Title,\r\n          genreId: newItem.genreId,\r\n          releaseYear: parseInt(newItem.releaseYear, 10),\r\n          duration: newItem.type === \"movies\" ? parseInt(newItem.duration, 10) : undefined,\r\n          seasons: newItem.type === \"series\" ? parseInt(newItem.seasons, 10) : undefined,\r\n          language: newItem.language,\r\n        }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Error al crear contenido.\");\r\n      }\r\n      const createdItem = await response.json();\r\n      if (newItem.type === \"movies\") {\r\n        setMovies([...movies, createdItem]);\r\n      } else {\r\n        setSeries([...series, createdItem]);\r\n      }\r\n      setIsAdding(false);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // Función para eliminar contenido\r\n  const handleDelete = async (type, id) => {\r\n    const accessToken = sessionStorage.getItem(\"accessToken\");\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/admin/${type}/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: { \"Authorization\": `Bearer ${accessToken}` },\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Error al eliminar contenido.\");\r\n      }\r\n      if (type === \"movies\") {\r\n        setMovies(movies.filter((movie) => movie.Id_Movie !== id && movie.id !== id));\r\n      } else {\r\n        setSeries(series.filter((serie) => serie.Id_Series !== id && serie.id !== id));\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // Función para iniciar la edición\r\n    const handleEdit = (item) => {\r\n    const resolvedType = item.type;\r\n    let id, genreId, releaseYear, field, language;\r\n  \r\n    if (resolvedType === \"movies\") {\r\n      id = item.id || item.Id_Movie;\r\n      // Si el valor viene como 0, lo convertimos a cadena vacía:\r\n      genreId = item.genreId || item.Genre;\r\n      if (Number(genreId) === 0) {\r\n        genreId = \"\";\r\n      } else {\r\n        genreId = String(genreId);\r\n      }\r\n      releaseYear = item.releaseYear || item.Release_Year || \"\";\r\n      field = item.duration || item.Duration || \"\";\r\n      language = item.language || item.Language || \"\";\r\n    } else if (resolvedType === \"series\") {\r\n      id = item.id || item.Id_Series;\r\n      genreId = item.genreId || item.Genre;\r\n      if (Number(genreId) === 0) {\r\n        genreId = \"\";\r\n      } else {\r\n        genreId = String(genreId);\r\n      }\r\n      releaseYear = item.releaseYear || item.Release_Year || \"\";\r\n      field = item.seasons || item.Seasons || \"\";\r\n      language = item.language || item.Language || \"\";\r\n    }\r\n  \r\n    const newEditItem = {\r\n      ...item,\r\n      id,\r\n      type: resolvedType,\r\n      genreId,       // Aquí, si el valor era 0, ahora es \"\"\r\n      releaseYear,\r\n      language,\r\n    };\r\n  \r\n    if (resolvedType === \"movies\") {\r\n      newEditItem.duration = field;\r\n    } else if (resolvedType === \"series\") {\r\n      newEditItem.seasons = field;\r\n    }\r\n  \r\n    console.log(\"handleEdit, newEditItem:\", newEditItem);\r\n    setEditItem(newEditItem);\r\n    setIsEditing(true);\r\n  };\r\n   \r\n  // Captura de cambios en el modal de edición\r\n  const handleEditInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditItem({ ...editItem, [name]: value });\r\n  };\r\n\r\n  // Función para actualizar en el backend\r\n    const handleUpdate = async () => {\r\n    const accessToken = sessionStorage.getItem(\"accessToken\");\r\n  \r\n    // Sanitizar y convertir los campos numéricos:\r\n    const title = String(editItem.Title || \"\").trim();\r\n    const language = String(editItem.language || \"\").trim();\r\n    const genreStr = String(editItem.genreId || \"\").trim();\r\n    const releaseYearStr = String(editItem.releaseYear || \"\").trim();\r\n  \r\n    const sanitizedGenre = parseInt(genreStr, 10);\r\n    const sanitizedReleaseYear = parseInt(releaseYearStr, 10);\r\n  \r\n    let sanitizedField;\r\n    if (editItem.type === \"movies\") {\r\n      sanitizedField = parseInt(String(editItem.duration || \"\").trim(), 10);\r\n    } else if (editItem.type === \"series\") {\r\n      sanitizedField = parseInt(String(editItem.seasons || \"\").trim(), 10);\r\n    }\r\n  \r\n    // Depuración: imprimir los valores\r\n    console.log(\"Title:\", title);\r\n    console.log(\"genreStr:\", genreStr);\r\n    console.log(\"releaseYearStr:\", releaseYearStr);\r\n    console.log(\"Language:\", language);\r\n    console.log(\"sanitizedGenre:\", sanitizedGenre);\r\n    console.log(\"sanitizedReleaseYear:\", sanitizedReleaseYear);\r\n    console.log(\"sanitizedField:\", sanitizedField);\r\n  \r\n    // Validar que cada campo tenga un valor válido\r\n    if (\r\n      !title ||\r\n      !genreStr ||\r\n      !releaseYearStr ||\r\n      !language ||\r\n      isNaN(sanitizedGenre) ||\r\n      isNaN(sanitizedReleaseYear) ||\r\n      (editItem.type === \"movies\" && isNaN(sanitizedField)) ||\r\n      (editItem.type === \"series\" && isNaN(sanitizedField))\r\n    ) {\r\n      setError(\"Por favor, complete todos los campos obligatorios con valores válidos.\");\r\n      return;\r\n    }\r\n  \r\n    // Construir el objeto de actualización usando las mismas claves que en la creación\r\n    let updatedData;\r\n    if (editItem.type === \"movies\") {\r\n      updatedData = {\r\n        Title: title,\r\n        genreId: sanitizedGenre,\r\n        releaseYear: sanitizedReleaseYear,\r\n        duration: sanitizedField,\r\n        language: language,\r\n      };\r\n    } else if (editItem.type === \"series\") {\r\n      updatedData = {\r\n        Title: title,\r\n        genreId: sanitizedGenre,\r\n        releaseYear: sanitizedReleaseYear,\r\n        seasons: sanitizedField,\r\n        language: language,\r\n      };\r\n    }\r\n  \r\n    console.log(\"📌 Datos enviados al backend:\", updatedData);\r\n  \r\n    try {\r\n      const response = await fetch(\r\n        `${config.API_URL}/api/admin/${editItem.type}/${editItem.id}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Authorization\": `Bearer ${accessToken}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(updatedData),\r\n        }\r\n      );\r\n  \r\n      if (!response.ok) {\r\n        const errorDetail = await response.text();\r\n        throw new Error(`Error al actualizar contenido: ${errorDetail}`);\r\n      }\r\n  \r\n      const updatedItem = await response.json();\r\n  \r\n      if (editItem.type === \"movies\") {\r\n        setMovies(prevMovies =>\r\n          prevMovies.map(movie =>\r\n            (movie.id === editItem.id || movie.Id_Movie === editItem.id)\r\n              ? updatedItem\r\n              : movie\r\n          )\r\n        );\r\n      } else if (editItem.type === \"series\") {\r\n        setSeries(prevSeries =>\r\n          prevSeries.map(serie =>\r\n            (serie.id === editItem.id || serie.Id_Series === editItem.id)\r\n              ? updatedItem\r\n              : serie\r\n          )\r\n        );\r\n      }\r\n  \r\n      setIsEditing(false);\r\n    } catch (error) {\r\n      console.error(\"❌ Error en actualización:\", error);\r\n      setError(error.message);\r\n    }\r\n  };  \r\n  \r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h1>Panel de Administración</h1>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Buscar título...\"\r\n        onChange={(e) => setSearchQuery(e.target.value.toLowerCase())}\r\n        className=\"search-box\"\r\n      />\r\n\r\n      {/* Sección de Películas */}\r\n      <h2>Películas</h2>\r\n      <button\r\n        className=\"add-btn\"\r\n        onClick={() => {\r\n          setIsAdding(true);\r\n          setNewItem({\r\n            Title: \"\",\r\n            genreId: \"\",\r\n            releaseYear: \"\",\r\n            duration: \"\",\r\n            language: \"\",\r\n            type: \"movies\",\r\n          });\r\n        }}\r\n      >\r\n        Añadir Película\r\n      </button>\r\n      <table className=\"users-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Título</th>\r\n            <th>Género</th>\r\n            <th>Año</th>\r\n            <th>Duración</th>\r\n            <th>Idioma</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {movies\r\n            .filter(\r\n              (movie) =>\r\n                movie.Title &&\r\n                movie.Title.toLowerCase().includes(searchQuery)\r\n            )\r\n            .map((movie) => (\r\n              <tr key={movie.id || movie.Id_Movie}>\r\n                <td>{movie.id || movie.Id_Movie}</td>\r\n                <td>{movie.Title}</td>\r\n                <td>\r\n                  {genres?.length > 0\r\n                    ? genres.find(\r\n                        (g) => Number(g.Id_Genre) === Number(movie.Genre)\r\n                      )?.Name || \"Sin género\"\r\n                    : \"Cargando...\"}\r\n                </td>\r\n                <td>{movie.Release_Year ? movie.Release_Year : \"N/A\"}</td>\r\n                <td>{movie.Duration ? `${movie.Duration} min` : \"N/A\"}</td>\r\n                <td>{movie.Language ? movie.Language : \"No definido\"}</td>\r\n                <td>\r\n                <button onClick={() => handleEdit({ ...movie, type: \"movies\" })}>Modificar</button>\r\n                <button onClick={() => handleDelete(\"movies\", movie.id || movie.Id_Movie)}>\r\n                    Eliminar\r\n                </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Sección de Series */}\r\n      <h2>Series</h2>\r\n      <button\r\n        className=\"add-btn\"\r\n        onClick={() => {\r\n          setIsAdding(true);\r\n          setNewItem({\r\n            Title: \"\",\r\n            genreId: \"\",\r\n            releaseYear: \"\",\r\n            seasons: \"\",\r\n            language: \"\",\r\n            type: \"series\",\r\n          });\r\n        }}\r\n      >\r\n        Añadir Serie\r\n      </button>\r\n      <table className=\"users-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Título</th>\r\n            <th>Género</th>\r\n            <th>Año</th>\r\n            <th>Temporadas</th>\r\n            <th>Idioma</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {series\r\n            .filter(\r\n              (serie) =>\r\n                serie.Title &&\r\n                serie.Title.toLowerCase().includes(searchQuery)\r\n            )\r\n            .map((serie) => (\r\n              <tr key={serie.id || serie.Id_Series}>\r\n                <td>{serie.id || serie.Id_Series}</td>\r\n                <td>{serie.Title}</td>\r\n                <td>\r\n                  {genres?.length > 0\r\n                    ? genres.find(\r\n                        (g) => Number(g.Id_Genre) === Number(serie.Genre)\r\n                      )?.Name || \"Sin género\"\r\n                    : \"Cargando...\"}\r\n                </td>\r\n                <td>{serie.Release_Year ? serie.Release_Year : \"N/A\"}</td>\r\n                <td>{serie.Seasons ? serie.Seasons : \"N/A\"}</td>\r\n                <td>{serie.Language ? serie.Language : \"No definido\"}</td>\r\n                <td>\r\n                <button onClick={() => handleEdit({ ...serie, type: \"series\" })}>Modificar</button>\r\n                <button onClick={() => handleDelete(\"series\", serie.id || serie.Id_Series)}>\r\n                    Eliminar\r\n                </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Modal de Edición / Modificar */}\r\n      {isEditing && editItem && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h2>\r\n              Editar {editItem.type === \"movies\" ? \"Película\" : \"Serie\"}\r\n            </h2>\r\n            <label>Título:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Title\"\r\n              value={editItem.Title || \"\"}\r\n              onChange={handleEditInputChange}\r\n            />\r\n\r\n            <label>Género:</label>\r\n            <select \r\n            name=\"genreId\" \r\n            value={editItem.genreId || \"\"}\r\n            onChange={handleEditInputChange}\r\n            >\r\n            <option value=\"\">Seleccionar género...</option>\r\n            {genres.map((genre) => (\r\n                <option key={genre.Id_Genre} value={String(genre.Id_Genre)}>\r\n                {genre.Name}\r\n                </option>\r\n            ))}\r\n            </select>\r\n\r\n            <label>Año de estreno:</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"releaseYear\"\r\n              value={editItem.releaseYear || \"\"}\r\n              onChange={handleEditInputChange}\r\n            />\r\n\r\n            {editItem.type === \"movies\" ? (\r\n              <>\r\n                <label>Duración (min):</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"duration\"\r\n                  value={editItem.duration || \"\"}\r\n                  onChange={handleEditInputChange}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <label>Temporadas:</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"seasons\"\r\n                  value={editItem.seasons || \"\"}\r\n                  onChange={handleEditInputChange}\r\n                />\r\n              </>\r\n            )}\r\n\r\n            <label>Idioma:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"language\"\r\n              value={editItem.language || \"\"}\r\n              onChange={handleEditInputChange}\r\n            />\r\n\r\n            <button className=\"update-btn\" onClick={handleUpdate}>\r\n              Guardar Cambios\r\n            </button>\r\n            <button className=\"cancel-btn\" onClick={() => setIsEditing(false)}>\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal de Creación */}\r\n      {isAdding && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h2>\r\n              Añadir {newItem.type === \"movies\" ? \"Película\" : \"Serie\"}\r\n            </h2>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Title\"\r\n              value={newItem.Title}\r\n              onChange={(e) => setNewItem({ ...newItem, Title: e.target.value })}\r\n              placeholder=\"Título\"\r\n            />\r\n            <select\r\n              name=\"genreId\"\r\n              value={newItem.genreId}\r\n              onChange={(e) =>\r\n                setNewItem({ ...newItem, genreId: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"\">Seleccionar género...</option>\r\n              {genres.map((genre) => (\r\n                <option key={genre.Id_Genre} value={genre.Id_Genre}>\r\n                  {genre.Name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <input\r\n              type=\"number\"\r\n              name=\"releaseYear\"\r\n              value={newItem.releaseYear}\r\n              onChange={(e) =>\r\n                setNewItem({ ...newItem, releaseYear: e.target.value })\r\n              }\r\n              placeholder=\"Año de estreno\"\r\n            />\r\n            {newItem.type === \"movies\" ? (\r\n              <input\r\n                type=\"number\"\r\n                name=\"duration\"\r\n                value={newItem.duration}\r\n                onChange={(e) =>\r\n                  setNewItem({ ...newItem, duration: e.target.value })\r\n                }\r\n                placeholder=\"Duración en minutos\"\r\n              />\r\n            ) : (\r\n              <input\r\n                type=\"number\"\r\n                name=\"seasons\"\r\n                value={newItem.seasons}\r\n                onChange={(e) =>\r\n                  setNewItem({ ...newItem, seasons: e.target.value })\r\n                }\r\n                placeholder=\"Número de temporadas\"\r\n              />\r\n            )}\r\n            <input\r\n              type=\"text\"\r\n              name=\"language\"\r\n              value={newItem.language}\r\n              onChange={(e) =>\r\n                setNewItem({ ...newItem, language: e.target.value })\r\n              }\r\n              placeholder=\"Idioma\"\r\n            />\r\n            <button onClick={handleCreate}>Guardar</button>\r\n            <button onClick={() => setIsAdding(false)}>Cancelar</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}