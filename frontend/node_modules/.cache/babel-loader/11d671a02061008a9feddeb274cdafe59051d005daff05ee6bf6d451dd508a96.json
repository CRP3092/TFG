{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\BlockBuster\\\\frontend\\\\src\\\\pages\\\\Index.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport config from \"../utils/config\";\nimport \"../styles/styles.css\";\nimport Modal from \"../components/Modal\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = ({\n  setFavoriteMessage\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [moviesList, setMoviesList] = useState([]);\n  const [seriesList, setSeriesList] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Fetch películas y series\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch(`${config.API_URL}/api/movies`);\n        const data = await response.json();\n        setMoviesList(data);\n      } catch (error) {\n        console.error(\"❌ Error al cargar películas:\", error);\n      }\n    };\n    const fetchSeries = async () => {\n      try {\n        const response = await fetch(`${config.API_URL}/api/series`);\n        const data = await response.json();\n        setSeriesList(data);\n      } catch (error) {\n        console.error(\"❌ Error al cargar series:\", error);\n      }\n    };\n    fetchMovies();\n    fetchSeries();\n  }, []);\n\n  // Función para mostrar el modal con detalles\n  const handleClick = async (id, type) => {\n    try {\n      const response = await fetch(`${config.API_URL}/api/${type}/${id}`);\n      const data = await response.json();\n      setSelectedItem({\n        ...data,\n        type\n      });\n      setIsModalOpen(true);\n    } catch (error) {\n      console.error(`❌ Error al cargar ${type}:`, error);\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedItem(null);\n  };\n\n  // Función para manejar favoritos\n  const handleFavoriteClick = async e => {\n    e.stopPropagation();\n    const newFavState = !isFavorite;\n    setIsFavorite(newFavState);\n    console.log(\"📌 Antes de modificar favoritos:\", sessionStorage.getItem(\"user\"));\n\n    // Establecer mensaje flotante global y local\n    setFavoriteMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\n    setTimeout(() => setFavoriteMessage(\"\"), 2000);\n    setMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\n    setTimeout(() => setMessage(\"\"), 2000);\n\n    // Actualizar sessionStorage (limpiando el campo Favorites si contiene 'undefined')\n    const userStr = sessionStorage.getItem(\"user\");\n    if (userStr) {\n      const user = JSON.parse(userStr);\n      // Si Favorites contiene \"undefined\", se reinicia a cadena vacía.\n      if (!user.Favorites || user.Favorites === \"undefined\") {\n        user.Favorites = \"\";\n      }\n      let favs = user.Favorites ? user.Favorites.split(\",\").map(f => f.trim()).filter(f => f !== \"\" && f !== \"undefined\") : [];\n      if (newFavState) {\n        if (!favs.includes(favoriteKey)) {\n          favs.push(favoriteKey);\n        }\n      } else {\n        favs = favs.filter(f => f !== favoriteKey);\n      }\n      user.Favorites = favs.join(\",\");\n      sessionStorage.setItem(\"user\", JSON.stringify(user));\n      console.log(\"📌 Después de modificar favoritos:\", JSON.parse(sessionStorage.getItem(\"user\")));\n    }\n\n    // Enviar actualización al backend usando la propiedad Id_User en lugar de id\n    try {\n      const userObj = JSON.parse(sessionStorage.getItem(\"user\"));\n      const requestBody = {\n        userId: userObj.Id_User,\n        // Cambiado de userObj.id a userObj.Id_User\n        itemKey: favoriteKey,\n        isFavorite: newFavState\n      };\n      console.log(\"📤 Datos enviados al backend:\", requestBody);\n      const response = await fetch(`${config.API_URL}/api/usuario/favorites`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        throw new Error(`Error actualizando favoritos (Código: ${response.status})`);\n      }\n      const responseData = await response.json();\n      console.log(\"✅ Respuesta del backend:\", responseData);\n\n      // Recargar usuario desde el backend para sincronizar sessionStorage\n      const updatedUserResponse = await fetch(`${config.API_URL}/api/usuario/${userObj.Id_User}`);\n      if (updatedUserResponse.ok) {\n        const updatedUserData = await updatedUserResponse.json();\n        sessionStorage.setItem(\"user\", JSON.stringify(updatedUserData));\n        console.log(\"🔄 sessionStorage actualizado después del PUT:\", updatedUserData);\n      } else {\n        console.error(\"❌ Error recargando usuario desde el backend\");\n      }\n    } catch (error) {\n      console.error(\"❌ Error actualizando favoritos:\", error);\n    }\n  };\n\n  // Subcomponente para cada tarjeta con el ícono de favoritos\n  const ContentCard = ({\n    item,\n    type\n  }) => {\n    _s();\n    const [isFavorite, setIsFavorite] = useState(false);\n    useEffect(() => {\n      const userStr = sessionStorage.getItem(\"user\");\n      if (userStr) {\n        const user = JSON.parse(userStr);\n        const itemId = item.Id_Movie || item.Id_Series;\n        if (user.Favorites) {\n          const favs = user.Favorites.split(\",\").map(fav => fav.trim());\n          setIsFavorite(favs.includes(String(itemId)));\n        }\n      }\n    }, [item]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-card\",\n      onClick: () => handleClick(item.Id_Movie || item.Id_Series, type),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image-container\",\n        style: {\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${config.API_URL}${item.Image}`,\n          alt: item.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favorite-icon\",\n          onClick: e => {\n            e.stopPropagation();\n            handleFavoriteClick(item.Id_Movie || item.Id_Series, type);\n            setIsFavorite(!isFavorite);\n          },\n          style: {\n            position: \"absolute\",\n            top: \"10px\",\n            left: \"10px\",\n            cursor: \"pointer\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fa ${isFavorite ? \"fa-star\" : \"fa-star-o\"}`,\n            style: {\n              fontSize: \"24px\",\n              color: \"gold\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  };\n  _s(ContentCard, \"lh6fxD9+vLbuebOO0x4Y5WwBqk4=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"index-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bienvenido a Blockbuster\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Explora nuestras series y pel\\xEDculas.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Series Populares\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-carousel\",\n        children: seriesList.map(series => /*#__PURE__*/_jsxDEV(ContentCard, {\n          item: series,\n          type: \"series\"\n        }, series.Id_Series, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pel\\xEDculas Destacadas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-carousel\",\n        children: moviesList.map(movie => /*#__PURE__*/_jsxDEV(ContentCard, {\n          item: movie,\n          type: \"movies\"\n        }, movie.Id_Movie, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: closeModal,\n      data: selectedItem,\n      setFavoriteMessage: setFavoriteMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s2(Index, \"XWB4BXirls9FN76QCgqAHHX5Lwk=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","useEffect","config","Modal","jsxDEV","_jsxDEV","Index","setFavoriteMessage","_s2","_s","$RefreshSig$","moviesList","setMoviesList","seriesList","setSeriesList","selectedItem","setSelectedItem","isModalOpen","setIsModalOpen","fetchMovies","response","fetch","API_URL","data","json","error","console","fetchSeries","handleClick","id","type","closeModal","handleFavoriteClick","e","stopPropagation","newFavState","isFavorite","setIsFavorite","log","sessionStorage","getItem","setTimeout","setMessage","userStr","user","JSON","parse","Favorites","favs","split","map","f","trim","filter","includes","favoriteKey","push","join","setItem","stringify","userObj","requestBody","userId","Id_User","itemKey","method","headers","body","ok","Error","status","responseData","updatedUserResponse","updatedUserData","ContentCard","item","itemId","Id_Movie","Id_Series","fav","String","className","onClick","children","style","position","src","Image","alt","Title","fileName","_jsxFileName","lineNumber","columnNumber","top","left","cursor","fontSize","color","series","movie","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/wamp64/www/BlockBuster/frontend/src/pages/Index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport config from \"../utils/config\";\r\nimport \"../styles/styles.css\";\r\nimport Modal from \"../components/Modal\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nconst Index = ({ setFavoriteMessage }) => {\r\n  const [moviesList, setMoviesList] = useState([]);\r\n  const [seriesList, setSeriesList] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  // Fetch películas y series\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await fetch(`${config.API_URL}/api/movies`);\r\n        const data = await response.json();\r\n        setMoviesList(data);\r\n      } catch (error) {\r\n        console.error(\"❌ Error al cargar películas:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchSeries = async () => {\r\n      try {\r\n        const response = await fetch(`${config.API_URL}/api/series`);\r\n        const data = await response.json();\r\n        setSeriesList(data);\r\n      } catch (error) {\r\n        console.error(\"❌ Error al cargar series:\", error);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n    fetchSeries();\r\n  }, []);\r\n\r\n  // Función para mostrar el modal con detalles\r\n  const handleClick = async (id, type) => {\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/${type}/${id}`);\r\n      const data = await response.json();\r\n      setSelectedItem({ ...data, type });\r\n      setIsModalOpen(true);\r\n    } catch (error) {\r\n      console.error(`❌ Error al cargar ${type}:`, error);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedItem(null);\r\n  };\r\n\r\n  // Función para manejar favoritos\r\nconst handleFavoriteClick = async (e) => {\r\n    e.stopPropagation();\r\n    const newFavState = !isFavorite;\r\n    setIsFavorite(newFavState);\r\n\r\n    console.log(\"📌 Antes de modificar favoritos:\", sessionStorage.getItem(\"user\"));\r\n\r\n    // Establecer mensaje flotante global y local\r\n    setFavoriteMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\r\n    setTimeout(() => setFavoriteMessage(\"\"), 2000);\r\n    setMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\r\n    setTimeout(() => setMessage(\"\"), 2000);\r\n\r\n    // Actualizar sessionStorage (limpiando el campo Favorites si contiene 'undefined')\r\n    const userStr = sessionStorage.getItem(\"user\");\r\n    if (userStr) {\r\n      const user = JSON.parse(userStr);\r\n      // Si Favorites contiene \"undefined\", se reinicia a cadena vacía.\r\n      if (!user.Favorites || user.Favorites === \"undefined\") {\r\n        user.Favorites = \"\";\r\n      }\r\n      let favs = user.Favorites\r\n        ? user.Favorites.split(\",\").map((f) => f.trim()).filter((f) => f !== \"\" && f !== \"undefined\")\r\n        : [];\r\n      if (newFavState) {\r\n        if (!favs.includes(favoriteKey)) {\r\n          favs.push(favoriteKey);\r\n        }\r\n      } else {\r\n        favs = favs.filter((f) => f !== favoriteKey);\r\n      }\r\n      user.Favorites = favs.join(\",\");\r\n      sessionStorage.setItem(\"user\", JSON.stringify(user));\r\n      console.log(\"📌 Después de modificar favoritos:\", JSON.parse(sessionStorage.getItem(\"user\")));\r\n    }\r\n\r\n    // Enviar actualización al backend usando la propiedad Id_User en lugar de id\r\n    try {\r\n      const userObj = JSON.parse(sessionStorage.getItem(\"user\"));\r\n      const requestBody = {\r\n        userId: userObj.Id_User,  // Cambiado de userObj.id a userObj.Id_User\r\n        itemKey: favoriteKey,\r\n        isFavorite: newFavState,\r\n      };\r\n\r\n      console.log(\"📤 Datos enviados al backend:\", requestBody);\r\n\r\n      const response = await fetch(`${config.API_URL}/api/usuario/favorites`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error actualizando favoritos (Código: ${response.status})`);\r\n      }\r\n\r\n      const responseData = await response.json();\r\n      console.log(\"✅ Respuesta del backend:\", responseData);\r\n\r\n      // Recargar usuario desde el backend para sincronizar sessionStorage\r\n      const updatedUserResponse = await fetch(`${config.API_URL}/api/usuario/${userObj.Id_User}`);\r\n      if (updatedUserResponse.ok) {\r\n        const updatedUserData = await updatedUserResponse.json();\r\n        sessionStorage.setItem(\"user\", JSON.stringify(updatedUserData));\r\n        console.log(\"🔄 sessionStorage actualizado después del PUT:\", updatedUserData);\r\n      } else {\r\n        console.error(\"❌ Error recargando usuario desde el backend\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Error actualizando favoritos:\", error);\r\n    }\r\n  };\r\n\r\n  // Subcomponente para cada tarjeta con el ícono de favoritos\r\n  const ContentCard = ({ item, type }) => {\r\n    const [isFavorite, setIsFavorite] = useState(false);\r\n\r\n    useEffect(() => {\r\n      const userStr = sessionStorage.getItem(\"user\");\r\n      if (userStr) {\r\n        const user = JSON.parse(userStr);\r\n        const itemId = item.Id_Movie || item.Id_Series;\r\n        if (user.Favorites) {\r\n          const favs = user.Favorites.split(\",\").map(fav => fav.trim());\r\n          setIsFavorite(favs.includes(String(itemId)));\r\n        }\r\n      }\r\n    }, [item]);\r\n\r\n    return (\r\n      <div\r\n        className=\"content-card\"\r\n        onClick={() => handleClick(item.Id_Movie || item.Id_Series, type)}\r\n      >\r\n        <div className=\"card-image-container\" style={{ position: \"relative\" }}>\r\n          <img src={`${config.API_URL}${item.Image}`} alt={item.Title} />\r\n          <div\r\n            className=\"favorite-icon\"\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleFavoriteClick(item.Id_Movie || item.Id_Series, type);\r\n              setIsFavorite(!isFavorite);\r\n            }}\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"10px\",\r\n              left: \"10px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <i\r\n              className={`fa ${isFavorite ? \"fa-star\" : \"fa-star-o\"}`}\r\n              style={{ fontSize: \"24px\", color: \"gold\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <p>{item.Title}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"index-container\">\r\n      <h1>Bienvenido a Blockbuster</h1>\r\n      <p>Explora nuestras series y películas.</p>\r\n\r\n      <div className=\"content-section\">\r\n        <h2>Series Populares</h2>\r\n        <div className=\"content-carousel\">\r\n          {seriesList.map((series) => (\r\n            <ContentCard key={series.Id_Series} item={series} type=\"series\" />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content-section\">\r\n        <h2>Películas Destacadas</h2>\r\n        <div className=\"content-carousel\">\r\n          {moviesList.map((movie) => (\r\n            <ContentCard key={movie.Id_Movie} item={movie} type=\"movies\" />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal para mostrar detalles de películas o series */}\r\n      <Modal isOpen={isModalOpen} onClose={closeModal} data={selectedItem} setFavoriteMessage={setFavoriteMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}