{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\BlockBuster\\\\frontend\\\\src\\\\pages\\\\UserProfile.jsx\",\n  _s = $RefreshSig$();\n// UserProfile.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport config from \"../utils/config\";\nimport \"../styles/userProfile.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  var _userData$Watching_Hi;\n  const {\n    id\n  } = useParams();\n  const [userData, setUserData] = useState(null);\n  const [favoriteItems, setFavoriteItems] = useState([]);\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const response = await fetch(`${config.API_URL}/api/usuario/${id}`);\n        if (!response.ok) {\n          console.error(\"Respuesta no OK, status:\", response.status);\n        }\n        const data = await response.json();\n        setUserData(data);\n      } catch (error) {\n        console.error(\"❌ Error al cargar perfil de usuario:\", error);\n      }\n    };\n    fetchUserProfile();\n  }, [id]);\n\n  // Cuando ya se tenga userData y exista el campo Favorites, se separan los IDs y se obtiene la información completa de cada ítem.\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      if (userData && userData.Favorites) {\n        const favIds = userData.Favorites.split(\",\").filter(fav => fav.trim() !== \"\");\n        const favPromises = favIds.map(async favId => {\n          let item = null;\n          // Primero se intenta obtener la información desde la ruta de películas\n          try {\n            const resMovie = await fetch(`${config.API_URL}/api/movies/${favId}`);\n            if (resMovie.ok) {\n              const dataMovie = await resMovie.json();\n              item = {\n                ...dataMovie,\n                type: \"movie\"\n              };\n            }\n          } catch (e) {\n            console.error(\"Error al cargar favorito (movie) con ID\", favId, e);\n          }\n          // Si no se obtuvo la info de películas, se intenta con series\n          if (!item) {\n            try {\n              const resSeries = await fetch(`${config.API_URL}/api/series/${favId}`);\n              if (resSeries.ok) {\n                const dataSeries = await resSeries.json();\n                item = {\n                  ...dataSeries,\n                  type: \"series\"\n                };\n              }\n            } catch (e) {\n              console.error(\"Error al cargar favorito (series) con ID\", favId, e);\n            }\n          }\n          return item;\n        });\n        const favResults = await Promise.all(favPromises);\n        setFavoriteItems(favResults.filter(item => item !== null));\n      }\n    };\n    fetchFavorites();\n  }, [userData]);\n\n  // Mapeo de planes para mostrar suscripción\n  const planMapping = {\n    1: \"Mensual\",\n    2: \"Trimestral\",\n    3: \"Anual\"\n  };\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Cargando perfil...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userProfile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userProfile-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"avatar\",\n        src: userData.Avatar ? `${config.API_URL}/uploads/avatars/${userData.Avatar}` : `${config.API_URL}/uploads/avatars/default.jpg`,\n        alt: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userData.Email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userProfile-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userProfile-section userProfile-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Detalles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Fecha de registro:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), \" \", userData.Date_Register]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Direcci\\xF3n:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), \" \", userData.Address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userProfile-section userProfile-subscription\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Suscripci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userData.id_subscription ? planMapping[userData.id_subscription] || \"Sin suscripción\" : \"Sin suscripción\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userProfile-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userProfile-section userProfile-history\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Historial de Visualizaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: (_userData$Watching_Hi = userData.Watching_History) === null || _userData$Watching_Hi === void 0 ? void 0 : _userData$Watching_Hi.split(\",\").map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userProfile-section userProfile-favorites\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Favoritos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favorites-gallery\",\n          children: favoriteItems.length > 0 ? favoriteItems.map((fav, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${config.API_URL}${fav.Image}`,\n            alt: fav.Title || \"Favorito\",\n            className: \"favorite-image\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No tienes favoritos.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"p4ac6gGpIJRdDNh4Tf1ulxF4qxE=\", false, function () {\n  return [useParams];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","config","jsxDEV","_jsxDEV","UserProfile","_s","_userData$Watching_Hi","id","userData","setUserData","favoriteItems","setFavoriteItems","fetchUserProfile","response","fetch","API_URL","ok","console","error","status","data","json","fetchFavorites","Favorites","favIds","split","filter","fav","trim","favPromises","map","favId","item","resMovie","dataMovie","type","e","resSeries","dataSeries","favResults","Promise","all","planMapping","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","Avatar","alt","Name","Email","Date_Register","Address","id_subscription","Watching_History","index","length","Image","Title","_c","$RefreshReg$"],"sources":["C:/wamp64/www/BlockBuster/frontend/src/pages/UserProfile.jsx"],"sourcesContent":["// UserProfile.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport config from \"../utils/config\";\r\nimport \"../styles/userProfile.css\";\r\n\r\nconst UserProfile = () => {\r\n  const { id } = useParams();\r\n  const [userData, setUserData] = useState(null);\r\n  const [favoriteItems, setFavoriteItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchUserProfile = async () => {\r\n      try {\r\n        const response = await fetch(`${config.API_URL}/api/usuario/${id}`);\r\n        if (!response.ok) {\r\n          console.error(\"Respuesta no OK, status:\", response.status);\r\n        }\r\n        const data = await response.json();\r\n        setUserData(data);\r\n      } catch (error) {\r\n        console.error(\"❌ Error al cargar perfil de usuario:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserProfile();\r\n  }, [id]);\r\n\r\n  // Cuando ya se tenga userData y exista el campo Favorites, se separan los IDs y se obtiene la información completa de cada ítem.\r\n  useEffect(() => {\r\n    const fetchFavorites = async () => {\r\n      if (userData && userData.Favorites) {\r\n        const favIds = userData.Favorites.split(\",\").filter(\r\n          (fav) => fav.trim() !== \"\"\r\n        );\r\n        const favPromises = favIds.map(async (favId) => {\r\n          let item = null;\r\n          // Primero se intenta obtener la información desde la ruta de películas\r\n          try {\r\n            const resMovie = await fetch(\r\n              `${config.API_URL}/api/movies/${favId}`\r\n            );\r\n            if (resMovie.ok) {\r\n              const dataMovie = await resMovie.json();\r\n              item = { ...dataMovie, type: \"movie\" };\r\n            }\r\n          } catch (e) {\r\n            console.error(\"Error al cargar favorito (movie) con ID\", favId, e);\r\n          }\r\n          // Si no se obtuvo la info de películas, se intenta con series\r\n          if (!item) {\r\n            try {\r\n              const resSeries = await fetch(\r\n                `${config.API_URL}/api/series/${favId}`\r\n              );\r\n              if (resSeries.ok) {\r\n                const dataSeries = await resSeries.json();\r\n                item = { ...dataSeries, type: \"series\" };\r\n              }\r\n            } catch (e) {\r\n              console.error(\"Error al cargar favorito (series) con ID\", favId, e);\r\n            }\r\n          }\r\n          return item;\r\n        });\r\n        const favResults = await Promise.all(favPromises);\r\n        setFavoriteItems(favResults.filter((item) => item !== null));\r\n      }\r\n    };\r\n\r\n    fetchFavorites();\r\n  }, [userData]);\r\n\r\n  // Mapeo de planes para mostrar suscripción\r\n  const planMapping = {\r\n    1: \"Mensual\",\r\n    2: \"Trimestral\",\r\n    3: \"Anual\",\r\n  };\r\n\r\n  if (!userData) {\r\n    return <p className=\"loading\">Cargando perfil...</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"userProfile-container\">\r\n      <div className=\"userProfile-header\">\r\n        <img\r\n          className=\"avatar\"\r\n          src={\r\n            userData.Avatar\r\n              ? `${config.API_URL}/uploads/avatars/${userData.Avatar}`\r\n              : `${config.API_URL}/uploads/avatars/default.jpg`\r\n          }\r\n          alt=\"Avatar\"\r\n        />\r\n        <h2>{userData.Name}</h2>\r\n        <p>{userData.Email}</p>\r\n      </div>\r\n\r\n      {/* Sección principal con dos columnas: detalles y suscripción */}\r\n      <div className=\"userProfile-main\">\r\n        <div className=\"userProfile-section userProfile-details\">\r\n          <h3>Detalles</h3>\r\n          <p>\r\n            <strong>Fecha de registro:</strong> {userData.Date_Register}\r\n          </p>\r\n          <p>\r\n            <strong>Dirección:</strong> {userData.Address}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"userProfile-section userProfile-subscription\">\r\n          <h3>Suscripción</h3>\r\n          <p>\r\n            {userData.id_subscription\r\n              ? planMapping[userData.id_subscription] || \"Sin suscripción\"\r\n              : \"Sin suscripción\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Sección de Historial y Favoritos, organizados en columnas */}\r\n      <div className=\"userProfile-grid\">\r\n        <div className=\"userProfile-section userProfile-history\">\r\n          <h3>Historial de Visualización</h3>\r\n          <ul>\r\n            {userData.Watching_History?.split(\",\").map((item, index) => (\r\n              <li key={index}>{item}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"userProfile-section userProfile-favorites\">\r\n          <h3>Favoritos</h3>\r\n          <div className=\"favorites-gallery\">\r\n            {favoriteItems.length > 0 ? (\r\n              favoriteItems.map((fav, index) => (\r\n                <img\r\n                  key={index}\r\n                  src={`${config.API_URL}${fav.Image}`}\r\n                  alt={fav.Title || \"Favorito\"}\r\n                  className=\"favorite-image\"\r\n                />\r\n              ))\r\n            ) : (\r\n              <p>No tienes favoritos.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}