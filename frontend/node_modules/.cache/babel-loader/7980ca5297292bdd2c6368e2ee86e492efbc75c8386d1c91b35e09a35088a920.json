{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\BlockBuster\\\\frontend\\\\src\\\\pages\\\\Index.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport config from \"../utils/config\";\nimport \"../styles/styles.css\";\nimport Modal from \"../components/Modal\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = ({\n  setFavoriteMessage\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [moviesList, setMoviesList] = useState([]);\n  const [seriesList, setSeriesList] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Fetch películas y series\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch(`${config.API_URL}/api/movies`);\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n        const data = await response.json();\n        setMoviesList(data);\n      } catch (error) {\n        console.error(\"❌ Error al cargar películas:\", error);\n      }\n    };\n    const fetchSeries = async () => {\n      try {\n        const response = await fetch(`${config.API_URL}/api/series`);\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n        const data = await response.json();\n        setSeriesList(data);\n      } catch (error) {\n        console.error(\"❌ Error al cargar series:\", error);\n      }\n    };\n    fetchMovies();\n    fetchSeries();\n  }, []);\n\n  // Función para mostrar el modal con detalles\n  const handleClick = async (id, type) => {\n    try {\n      const response = await fetch(`${config.API_URL}/api/${type}/${id}`);\n      const data = await response.json();\n      setSelectedItem({\n        ...data,\n        type\n      });\n      setIsModalOpen(true);\n    } catch (error) {\n      console.error(`❌ Error al cargar ${type}:`, error);\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedItem(null);\n  };\n\n  // Subcomponente para cada tarjeta (película o serie)\n  const ContentCard = ({\n    item,\n    type\n  }) => {\n    _s();\n    const [isFavorite, setIsFavorite] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    // Definir favoriteKey según si es película o serie\n    const favoriteKey = String(item.Id_Movie || item.Id_Series);\n    useEffect(() => {\n      const userStr = sessionStorage.getItem(\"user\");\n      if (userStr) {\n        const user = JSON.parse(userStr);\n        if (user.Favorites) {\n          const favs = user.Favorites.split(\",\").map(fav => fav.trim());\n          setIsFavorite(favs.includes(favoriteKey));\n        }\n      }\n    }, [item, favoriteKey]);\n\n    // Esta función se declara aquí para usar los estados del ContentCard\n    const handleFavoriteClick = async e => {\n      e.stopPropagation();\n      const newFavState = !isFavorite;\n      setIsFavorite(newFavState);\n\n      // Mostrar mensaje al usuario\n      setFavoriteMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\n      setTimeout(() => setFavoriteMessage(\"\"), 2000);\n      setMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\n      setTimeout(() => setMessage(\"\"), 2000);\n\n      // Actualizar sessionStorage\n      const userStr = sessionStorage.getItem(\"user\");\n      if (userStr) {\n        const user = JSON.parse(userStr);\n        let favs = user.Favorites ? user.Favorites.split(\",\").map(f => f.trim()).filter(f => f !== \"\") : [];\n        if (newFavState) {\n          if (!favs.includes(favoriteKey)) favs.push(favoriteKey);\n        } else {\n          favs = favs.filter(f => f !== favoriteKey);\n        }\n        user.Favorites = favs.join(\",\");\n        sessionStorage.setItem(\"user\", JSON.stringify(user));\n      }\n\n      // Enviar actualización al backend usando la propiedad Id_User\n      try {\n        const userObj = JSON.parse(sessionStorage.getItem(\"user\"));\n        const requestBody = {\n          userId: userObj.Id_User,\n          // Usamos Id_User; asegúrate de que en sessionStorage venga así.\n          itemKey: favoriteKey,\n          isFavorite: newFavState\n        };\n        console.log(\"📤 Datos enviados al backend:\", requestBody);\n        const response = await fetch(`${config.API_URL}/api/usuario/favorites`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(requestBody)\n        });\n        if (!response.ok) {\n          throw new Error(`Error actualizando favoritos (Código: ${response.status})`);\n        }\n        const responseData = await response.json();\n        console.log(\"✅ Respuesta del backend:\", responseData);\n\n        // Recargar el usuario desde el backend para actualizar sessionStorage\n        const updatedUserResponse = await fetch(`${config.API_URL}/api/usuario/${userObj.Id_User}`);\n        if (updatedUserResponse.ok) {\n          const updatedUserData = await updatedUserResponse.json();\n          sessionStorage.setItem(\"user\", JSON.stringify(updatedUserData));\n          window.dispatchEvent(new CustomEvent(\"favoritesUpdated\"));\n        } else {\n          console.error(\"❌ Error recargando usuario desde el backend\");\n        }\n      } catch (error) {\n        console.error(\"❌ Error actualizando favoritos:\", error);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-card\",\n      onClick: () => handleClick(favoriteKey, type),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image-container\",\n        style: {\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${config.API_URL}${item.Image}`,\n          alt: item.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favorite-icon\",\n          onClick: e => handleFavoriteClick(e),\n          style: {\n            position: \"absolute\",\n            top: \"10px\",\n            left: \"10px\",\n            cursor: \"pointer\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fa ${isFavorite ? \"fa-star\" : \"fa-star-o\"}`,\n            style: {\n              fontSize: \"24px\",\n              color: \"gold\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              top: \"0\",\n              left: \"40px\",\n              background: \"rgba(0,0,0,0.7)\",\n              padding: \"3px 8px\",\n              borderRadius: \"5px\",\n              color: \"white\",\n              fontSize: \"14px\"\n            },\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  };\n  _s(ContentCard, \"g26eIYp9P9II3H7vq3EXOhzky4g=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"index-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bienvenido a Blockbuster\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Explora nuestras series y pel\\xEDculas.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Series Populares\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-carousel\",\n        children: seriesList.map(series => /*#__PURE__*/_jsxDEV(ContentCard, {\n          item: series,\n          type: \"series\"\n        }, series.Id_Series, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pel\\xEDculas Destacadas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-carousel\",\n        children: moviesList.map(movie => /*#__PURE__*/_jsxDEV(ContentCard, {\n          item: movie,\n          type: \"movies\"\n        }, movie.Id_Movie, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: closeModal,\n      data: selectedItem,\n      setFavoriteMessage: setFavoriteMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s2(Index, \"XWB4BXirls9FN76QCgqAHHX5Lwk=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","useEffect","config","Modal","jsxDEV","_jsxDEV","Index","setFavoriteMessage","_s2","_s","$RefreshSig$","moviesList","setMoviesList","seriesList","setSeriesList","selectedItem","setSelectedItem","isModalOpen","setIsModalOpen","fetchMovies","response","fetch","API_URL","ok","Error","status","data","json","error","console","fetchSeries","handleClick","id","type","closeModal","ContentCard","item","isFavorite","setIsFavorite","message","setMessage","favoriteKey","String","Id_Movie","Id_Series","userStr","sessionStorage","getItem","user","JSON","parse","Favorites","favs","split","map","fav","trim","includes","handleFavoriteClick","e","stopPropagation","newFavState","setTimeout","f","filter","push","join","setItem","stringify","userObj","requestBody","userId","Id_User","itemKey","log","method","headers","body","responseData","updatedUserResponse","updatedUserData","window","dispatchEvent","CustomEvent","className","onClick","children","style","position","src","Image","alt","Title","fileName","_jsxFileName","lineNumber","columnNumber","top","left","cursor","fontSize","color","background","padding","borderRadius","series","movie","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/wamp64/www/BlockBuster/frontend/src/pages/Index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport config from \"../utils/config\";\r\nimport \"../styles/styles.css\";\r\nimport Modal from \"../components/Modal\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\nconst Index = ({ setFavoriteMessage }) => {\r\n  const [moviesList, setMoviesList] = useState([]);\r\n  const [seriesList, setSeriesList] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  // Fetch películas y series\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await fetch(`${config.API_URL}/api/movies`);\r\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\r\n        const data = await response.json();\r\n        setMoviesList(data);\r\n      } catch (error) {\r\n        console.error(\"❌ Error al cargar películas:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchSeries = async () => {\r\n      try {\r\n        const response = await fetch(`${config.API_URL}/api/series`);\r\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\r\n        const data = await response.json();\r\n        setSeriesList(data);\r\n      } catch (error) {\r\n        console.error(\"❌ Error al cargar series:\", error);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n    fetchSeries();\r\n  }, []);\r\n\r\n  // Función para mostrar el modal con detalles\r\n  const handleClick = async (id, type) => {\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/${type}/${id}`);\r\n      const data = await response.json();\r\n      setSelectedItem({ ...data, type });\r\n      setIsModalOpen(true);\r\n    } catch (error) {\r\n      console.error(`❌ Error al cargar ${type}:`, error);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedItem(null);\r\n  };\r\n\r\n  // Subcomponente para cada tarjeta (película o serie)\r\n  const ContentCard = ({ item, type }) => {\r\n    const [isFavorite, setIsFavorite] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    // Definir favoriteKey según si es película o serie\r\n    const favoriteKey = String(item.Id_Movie || item.Id_Series);\r\n\r\n    useEffect(() => {\r\n      const userStr = sessionStorage.getItem(\"user\");\r\n      if (userStr) {\r\n        const user = JSON.parse(userStr);\r\n        if (user.Favorites) {\r\n          const favs = user.Favorites.split(\",\").map(fav => fav.trim());\r\n          setIsFavorite(favs.includes(favoriteKey));\r\n        }\r\n      }\r\n    }, [item, favoriteKey]);\r\n\r\n    // Esta función se declara aquí para usar los estados del ContentCard\r\n    const handleFavoriteClick = async (e) => {\r\n      e.stopPropagation();\r\n      const newFavState = !isFavorite;\r\n      setIsFavorite(newFavState);\r\n\r\n      // Mostrar mensaje al usuario\r\n      setFavoriteMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\r\n      setTimeout(() => setFavoriteMessage(\"\"), 2000);\r\n      setMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\r\n      setTimeout(() => setMessage(\"\"), 2000);\r\n\r\n      // Actualizar sessionStorage\r\n      const userStr = sessionStorage.getItem(\"user\");\r\n      if (userStr) {\r\n        const user = JSON.parse(userStr);\r\n        let favs = user.Favorites \r\n          ? user.Favorites.split(\",\").map(f => f.trim()).filter(f => f !== \"\")\r\n          : [];\r\n        if (newFavState) {\r\n          if (!favs.includes(favoriteKey)) favs.push(favoriteKey);\r\n        } else {\r\n          favs = favs.filter(f => f !== favoriteKey);\r\n        }\r\n        user.Favorites = favs.join(\",\");\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user));\r\n      }\r\n\r\n      // Enviar actualización al backend usando la propiedad Id_User\r\n      try {\r\n        const userObj = JSON.parse(sessionStorage.getItem(\"user\"));\r\n        const requestBody = {\r\n          userId: userObj.Id_User, // Usamos Id_User; asegúrate de que en sessionStorage venga así.\r\n          itemKey: favoriteKey,\r\n          isFavorite: newFavState,\r\n        };\r\n\r\n        console.log(\"📤 Datos enviados al backend:\", requestBody);\r\n\r\n        const response = await fetch(`${config.API_URL}/api/usuario/favorites`, {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(requestBody),\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error(`Error actualizando favoritos (Código: ${response.status})`);\r\n        }\r\n        const responseData = await response.json();\r\n        console.log(\"✅ Respuesta del backend:\", responseData);\r\n\r\n        // Recargar el usuario desde el backend para actualizar sessionStorage\r\n        const updatedUserResponse = await fetch(`${config.API_URL}/api/usuario/${userObj.Id_User}`);\r\n        if (updatedUserResponse.ok) {\r\n          const updatedUserData = await updatedUserResponse.json();\r\n          sessionStorage.setItem(\"user\", JSON.stringify(updatedUserData));\r\n          window.dispatchEvent(new CustomEvent(\"favoritesUpdated\"));\r\n        } else {\r\n          console.error(\"❌ Error recargando usuario desde el backend\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"❌ Error actualizando favoritos:\", error);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className=\"content-card\"\r\n        onClick={() => handleClick(favoriteKey, type)}\r\n      >\r\n        <div className=\"card-image-container\" style={{ position: \"relative\" }}>\r\n          <img src={`${config.API_URL}${item.Image}`} alt={item.Title} />\r\n          <div\r\n            className=\"favorite-icon\"\r\n            onClick={(e) => handleFavoriteClick(e)}\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"10px\",\r\n              left: \"10px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <i\r\n              className={`fa ${isFavorite ? \"fa-star\" : \"fa-star-o\"}`}\r\n              style={{ fontSize: \"24px\", color: \"gold\" }}\r\n            />\r\n            {message && (\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"0\",\r\n                  left: \"40px\",\r\n                  background: \"rgba(0,0,0,0.7)\",\r\n                  padding: \"3px 8px\",\r\n                  borderRadius: \"5px\",\r\n                  color: \"white\",\r\n                  fontSize: \"14px\",\r\n                }}\r\n              >\r\n                {message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <p>{item.Title}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"index-container\">\r\n      <h1>Bienvenido a Blockbuster</h1>\r\n      <p>Explora nuestras series y películas.</p>\r\n\r\n      <div className=\"content-section\">\r\n        <h2>Series Populares</h2>\r\n        <div className=\"content-carousel\">\r\n          {seriesList.map((series) => (\r\n            <ContentCard key={series.Id_Series} item={series} type=\"series\" />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content-section\">\r\n        <h2>Películas Destacadas</h2>\r\n        <div className=\"content-carousel\">\r\n          {moviesList.map((movie) => (\r\n            <ContentCard key={movie.Id_Movie} item={movie} type=\"movies\" />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onClose={closeModal}\r\n        data={selectedItem}\r\n        setFavoriteMessage={setFavoriteMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAO,sBAAsB;AAC7B,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACxC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGnB,MAAM,CAACoB,OAAO,aAAa,CAAC;QAC5D,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuBJ,QAAQ,CAACK,MAAM,EAAE,CAAC;QAC3E,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClCf,aAAa,CAACc,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGnB,MAAM,CAACoB,OAAO,aAAa,CAAC;QAC5D,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuBJ,QAAQ,CAACK,MAAM,EAAE,CAAC;QAC3E,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClCb,aAAa,CAACY,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDT,WAAW,CAAC,CAAC;IACbW,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,WAAW,GAAG,MAAAA,CAAOC,EAAE,EAAEC,IAAI,KAAK;IACtC,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGnB,MAAM,CAACoB,OAAO,QAAQW,IAAI,IAAID,EAAE,EAAE,CAAC;MACnE,MAAMN,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCX,eAAe,CAAC;QAAE,GAAGU,IAAI;QAAEO;MAAK,CAAC,CAAC;MAClCf,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqBK,IAAI,GAAG,EAAEL,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAMM,UAAU,GAAGA,CAAA,KAAM;IACvBhB,cAAc,CAAC,KAAK,CAAC;IACrBF,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;;EAED;EACA,MAAMmB,WAAW,GAAGA,CAAC;IAAEC,IAAI;IAAEH;EAAK,CAAC,KAAK;IAAAxB,EAAA;IACtC,MAAM,CAAC4B,UAAU,EAAEC,aAAa,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;IACnD,MAAM,CAACuC,OAAO,EAAEC,UAAU,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;IAC1C;IACA,MAAMyC,WAAW,GAAGC,MAAM,CAACN,IAAI,CAACO,QAAQ,IAAIP,IAAI,CAACQ,SAAS,CAAC;IAE3D3C,SAAS,CAAC,MAAM;MACd,MAAM4C,OAAO,GAAGC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;MAC9C,IAAIF,OAAO,EAAE;QACX,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC;QAChC,IAAIG,IAAI,CAACG,SAAS,EAAE;UAClB,MAAMC,IAAI,GAAGJ,IAAI,CAACG,SAAS,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;UAC7DlB,aAAa,CAACc,IAAI,CAACK,QAAQ,CAAChB,WAAW,CAAC,CAAC;QAC3C;MACF;IACF,CAAC,EAAE,CAACL,IAAI,EAAEK,WAAW,CAAC,CAAC;;IAEvB;IACA,MAAMiB,mBAAmB,GAAG,MAAOC,CAAC,IAAK;MACvCA,CAAC,CAACC,eAAe,CAAC,CAAC;MACnB,MAAMC,WAAW,GAAG,CAACxB,UAAU;MAC/BC,aAAa,CAACuB,WAAW,CAAC;;MAE1B;MACAtD,kBAAkB,CAACsD,WAAW,GAAG,qBAAqB,GAAG,wBAAwB,CAAC;MAClFC,UAAU,CAAC,MAAMvD,kBAAkB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9CiC,UAAU,CAACqB,WAAW,GAAG,qBAAqB,GAAG,wBAAwB,CAAC;MAC1EC,UAAU,CAAC,MAAMtB,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;;MAEtC;MACA,MAAMK,OAAO,GAAGC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;MAC9C,IAAIF,OAAO,EAAE;QACX,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC;QAChC,IAAIO,IAAI,GAAGJ,IAAI,CAACG,SAAS,GACrBH,IAAI,CAACG,SAAS,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACS,CAAC,IAAIA,CAAC,CAACP,IAAI,CAAC,CAAC,CAAC,CAACQ,MAAM,CAACD,CAAC,IAAIA,CAAC,KAAK,EAAE,CAAC,GAClE,EAAE;QACN,IAAIF,WAAW,EAAE;UACf,IAAI,CAACT,IAAI,CAACK,QAAQ,CAAChB,WAAW,CAAC,EAAEW,IAAI,CAACa,IAAI,CAACxB,WAAW,CAAC;QACzD,CAAC,MAAM;UACLW,IAAI,GAAGA,IAAI,CAACY,MAAM,CAACD,CAAC,IAAIA,CAAC,KAAKtB,WAAW,CAAC;QAC5C;QACAO,IAAI,CAACG,SAAS,GAAGC,IAAI,CAACc,IAAI,CAAC,GAAG,CAAC;QAC/BpB,cAAc,CAACqB,OAAO,CAAC,MAAM,EAAElB,IAAI,CAACmB,SAAS,CAACpB,IAAI,CAAC,CAAC;MACtD;;MAEA;MACA,IAAI;QACF,MAAMqB,OAAO,GAAGpB,IAAI,CAACC,KAAK,CAACJ,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC1D,MAAMuB,WAAW,GAAG;UAClBC,MAAM,EAAEF,OAAO,CAACG,OAAO;UAAE;UACzBC,OAAO,EAAEhC,WAAW;UACpBJ,UAAU,EAAEwB;QACd,CAAC;QAEDhC,OAAO,CAAC6C,GAAG,CAAC,+BAA+B,EAAEJ,WAAW,CAAC;QAEzD,MAAMlD,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGnB,MAAM,CAACoB,OAAO,wBAAwB,EAAE;UACtEqD,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAE5B,IAAI,CAACmB,SAAS,CAACE,WAAW;QAClC,CAAC,CAAC;QACF,IAAI,CAAClD,QAAQ,CAACG,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,yCAAyCJ,QAAQ,CAACK,MAAM,GAAG,CAAC;QAC9E;QACA,MAAMqD,YAAY,GAAG,MAAM1D,QAAQ,CAACO,IAAI,CAAC,CAAC;QAC1CE,OAAO,CAAC6C,GAAG,CAAC,0BAA0B,EAAEI,YAAY,CAAC;;QAErD;QACA,MAAMC,mBAAmB,GAAG,MAAM1D,KAAK,CAAC,GAAGnB,MAAM,CAACoB,OAAO,gBAAgB+C,OAAO,CAACG,OAAO,EAAE,CAAC;QAC3F,IAAIO,mBAAmB,CAACxD,EAAE,EAAE;UAC1B,MAAMyD,eAAe,GAAG,MAAMD,mBAAmB,CAACpD,IAAI,CAAC,CAAC;UACxDmB,cAAc,CAACqB,OAAO,CAAC,MAAM,EAAElB,IAAI,CAACmB,SAAS,CAACY,eAAe,CAAC,CAAC;UAC/DC,MAAM,CAACC,aAAa,CAAC,IAAIC,WAAW,CAAC,kBAAkB,CAAC,CAAC;QAC3D,CAAC,MAAM;UACLtD,OAAO,CAACD,KAAK,CAAC,6CAA6C,CAAC;QAC9D;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAED,oBACEvB,OAAA;MACE+E,SAAS,EAAC,cAAc;MACxBC,OAAO,EAAEA,CAAA,KAAMtD,WAAW,CAACU,WAAW,EAAER,IAAI,CAAE;MAAAqD,QAAA,gBAE9CjF,OAAA;QAAK+E,SAAS,EAAC,sBAAsB;QAACG,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAW,CAAE;QAAAF,QAAA,gBACpEjF,OAAA;UAAKoF,GAAG,EAAE,GAAGvF,MAAM,CAACoB,OAAO,GAAGc,IAAI,CAACsD,KAAK,EAAG;UAACC,GAAG,EAAEvD,IAAI,CAACwD;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/D3F,OAAA;UACE+E,SAAS,EAAC,eAAe;UACzBC,OAAO,EAAG1B,CAAC,IAAKD,mBAAmB,CAACC,CAAC,CAAE;UACvC4B,KAAK,EAAE;YACLC,QAAQ,EAAE,UAAU;YACpBS,GAAG,EAAE,MAAM;YACXC,IAAI,EAAE,MAAM;YACZC,MAAM,EAAE;UACV,CAAE;UAAAb,QAAA,gBAEFjF,OAAA;YACE+E,SAAS,EAAE,MAAM/C,UAAU,GAAG,SAAS,GAAG,WAAW,EAAG;YACxDkD,KAAK,EAAE;cAAEa,QAAQ,EAAE,MAAM;cAAEC,KAAK,EAAE;YAAO;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC,EACDzD,OAAO,iBACNlC,OAAA;YACEkF,KAAK,EAAE;cACLC,QAAQ,EAAE,UAAU;cACpBS,GAAG,EAAE,GAAG;cACRC,IAAI,EAAE,MAAM;cACZI,UAAU,EAAE,iBAAiB;cAC7BC,OAAO,EAAE,SAAS;cAClBC,YAAY,EAAE,KAAK;cACnBH,KAAK,EAAE,OAAO;cACdD,QAAQ,EAAE;YACZ,CAAE;YAAAd,QAAA,EAED/C;UAAO;YAAAsD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACN3F,OAAA;QAAAiF,QAAA,EAAIlD,IAAI,CAACwD;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAEV,CAAC;EAACvF,EAAA,CA3HI0B,WAAW;EA6HjB,oBACE9B,OAAA;IAAK+E,SAAS,EAAC,iBAAiB;IAAAE,QAAA,gBAC9BjF,OAAA;MAAAiF,QAAA,EAAI;IAAwB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC3F,OAAA;MAAAiF,QAAA,EAAG;IAAoC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAE3C3F,OAAA;MAAK+E,SAAS,EAAC,iBAAiB;MAAAE,QAAA,gBAC9BjF,OAAA;QAAAiF,QAAA,EAAI;MAAgB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB3F,OAAA;QAAK+E,SAAS,EAAC,kBAAkB;QAAAE,QAAA,EAC9BzE,UAAU,CAACyC,GAAG,CAAEmD,MAAM,iBACrBpG,OAAA,CAAC8B,WAAW;UAAwBC,IAAI,EAAEqE,MAAO;UAACxE,IAAI,EAAC;QAAQ,GAA7CwE,MAAM,CAAC7D,SAAS;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA+B,CAClE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN3F,OAAA;MAAK+E,SAAS,EAAC,iBAAiB;MAAAE,QAAA,gBAC9BjF,OAAA;QAAAiF,QAAA,EAAI;MAAoB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7B3F,OAAA;QAAK+E,SAAS,EAAC,kBAAkB;QAAAE,QAAA,EAC9B3E,UAAU,CAAC2C,GAAG,CAAEoD,KAAK,iBACpBrG,OAAA,CAAC8B,WAAW;UAAsBC,IAAI,EAAEsE,KAAM;UAACzE,IAAI,EAAC;QAAQ,GAA1CyE,KAAK,CAAC/D,QAAQ;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA8B,CAC/D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN3F,OAAA,CAACF,KAAK;MACJwG,MAAM,EAAE1F,WAAY;MACpB2F,OAAO,EAAE1E,UAAW;MACpBR,IAAI,EAAEX,YAAa;MACnBR,kBAAkB,EAAEA;IAAmB;MAAAsF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxF,GAAA,CAhNIF,KAAK;AAAAuG,EAAA,GAALvG,KAAK;AAkNX,eAAeA,KAAK;AAAC,IAAAuG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}