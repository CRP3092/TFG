{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\BlockBuster\\\\frontend\\\\src\\\\pages\\\\Index.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport config from \"../utils/config\";\nimport \"../styles/styles.css\";\nimport Modal from \"../components/Modal\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [moviesList, setMoviesList] = useState([]);\n  const [seriesList, setSeriesList] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Fetch películas y series\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch(`${config.API_URL}/api/movies`);\n        const data = await response.json();\n        setMoviesList(data);\n      } catch (error) {\n        console.error(\"❌ Error al cargar películas:\", error);\n      }\n    };\n    const fetchSeries = async () => {\n      try {\n        const response = await fetch(`${config.API_URL}/api/series`);\n        const data = await response.json();\n        setSeriesList(data);\n      } catch (error) {\n        console.error(\"❌ Error al cargar series:\", error);\n      }\n    };\n    fetchMovies();\n    fetchSeries();\n  }, []);\n\n  // Función para mostrar el modal con detalles (se utiliza al hacer clic en la tarjeta)\n  const handleClick = async (id, type) => {\n    try {\n      const response = await fetch(`${config.API_URL}/api/${type}/${id}`);\n      const data = await response.json();\n      setSelectedItem({\n        ...data,\n        type\n      });\n      setIsModalOpen(true);\n    } catch (error) {\n      console.error(`❌ Error al cargar ${type}:`, error);\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedItem(null);\n  };\n\n  // Componente interno para cada tarjeta de contenido\n  const ContentCard = ({\n    item,\n    type\n  }) => {\n    _s();\n    const [isFavorite, setIsFavorite] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    // Determinar el estado inicial del ítem, según los favoritos del usuario almacenados en sessionStorage\n    useEffect(() => {\n      const userString = sessionStorage.getItem(\"user\");\n      if (userString) {\n        const user = JSON.parse(userString);\n        if (user.Favorites) {\n          const favs = user.Favorites.split(\",\");\n          // Suponemos que el id del ítem viene en item.id, o en item.Id_Movie o item.Id_Series\n          const itemId = item.id || item.Id_Movie || item.Id_Series;\n          setIsFavorite(favs.includes(String(itemId)));\n        }\n      }\n    }, [item]);\n\n    // Maneja el clic sobre el ícono de favorito\n    const handleFavoriteClick = async e => {\n      e.stopPropagation(); // Evita que se active el clic principal de la tarjeta\n      const newFavState = !isFavorite;\n      setIsFavorite(newFavState);\n      setMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\n      setTimeout(() => setMessage(\"\"), 2000);\n      const userString = sessionStorage.getItem(\"user\");\n      if (userString) {\n        const user = JSON.parse(userString);\n        const itemId = item.id || item.Id_Movie || item.Id_Series;\n        try {\n          const response = await fetch(`${config.API_URL}/api/usuario/favorites`, {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              userId: user.id,\n              itemId: itemId,\n              isFavorite: newFavState\n            })\n          });\n          if (!response.ok) {\n            throw new Error(\"Error actualizando favoritos\");\n          }\n          const data = await response.json();\n          // Opcional: aquí se podría actualizar el objeto usuario en sessionStorage si necesitas sincronizar la info.\n        } catch (err) {\n          console.error(\"❌ Error actualizando favoritos:\", err);\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-card\",\n      onClick: () => handleClick(item.id || item.Id_Movie || item.Id_Series, type),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image-container\",\n        style: {\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${config.API_URL}${item.Image}`,\n          alt: item.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favorite-icon\",\n          onClick: handleFavoriteClick,\n          style: {\n            position: \"absolute\",\n            top: \"10px\",\n            left: \"10px\",\n            cursor: \"pointer\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fa ${isFavorite ? \"fa-star\" : \"fa-star-o\"}`,\n            style: {\n              fontSize: \"24px\",\n              color: \"gold\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"favorite-message\",\n            style: {\n              position: \"absolute\",\n              top: \"0\",\n              left: \"40px\",\n              background: \"rgba(0,0,0,0.7)\",\n              padding: \"3px 8px\",\n              borderRadius: \"5px\",\n              color: \"white\",\n              fontSize: \"14px\"\n            },\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  };\n  _s(ContentCard, \"g26eIYp9P9II3H7vq3EXOhzky4g=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"index-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bienvenido a Blockbuster\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Explora nuestras series y pel\\xEDculas.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Series Populares\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-carousel\",\n        children: seriesList.map(series => /*#__PURE__*/_jsxDEV(ContentCard, {\n          item: series,\n          type: \"series\"\n        }, series.Id_Series, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pel\\xEDculas Destacadas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-carousel\",\n        children: moviesList.map(movie => /*#__PURE__*/_jsxDEV(ContentCard, {\n          item: movie,\n          type: \"movies\"\n        }, movie.Id_Movie, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: closeModal,\n      data: selectedItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s2(Index, \"XWB4BXirls9FN76QCgqAHHX5Lwk=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","useEffect","config","Modal","jsxDEV","_jsxDEV","Index","_s2","_s","$RefreshSig$","moviesList","setMoviesList","seriesList","setSeriesList","selectedItem","setSelectedItem","isModalOpen","setIsModalOpen","fetchMovies","response","fetch","API_URL","data","json","error","console","fetchSeries","handleClick","id","type","closeModal","ContentCard","item","isFavorite","setIsFavorite","message","setMessage","userString","sessionStorage","getItem","user","JSON","parse","Favorites","favs","split","itemId","Id_Movie","Id_Series","includes","String","handleFavoriteClick","e","stopPropagation","newFavState","setTimeout","method","headers","body","stringify","userId","ok","Error","err","className","onClick","children","style","position","src","Image","alt","Title","fileName","_jsxFileName","lineNumber","columnNumber","top","left","cursor","fontSize","color","background","padding","borderRadius","map","series","movie","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/wamp64/www/BlockBuster/frontend/src/pages/Index.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport config from \"../utils/config\";\r\nimport \"../styles/styles.css\";\r\nimport Modal from \"../components/Modal\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nconst Index = () => {\r\n  const [moviesList, setMoviesList] = useState([]);\r\n  const [seriesList, setSeriesList] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  // Fetch películas y series\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await fetch(`${config.API_URL}/api/movies`);\r\n        const data = await response.json();\r\n        setMoviesList(data);\r\n      } catch (error) {\r\n        console.error(\"❌ Error al cargar películas:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchSeries = async () => {\r\n      try {\r\n        const response = await fetch(`${config.API_URL}/api/series`);\r\n        const data = await response.json();\r\n        setSeriesList(data);\r\n      } catch (error) {\r\n        console.error(\"❌ Error al cargar series:\", error);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n    fetchSeries();\r\n  }, []);\r\n\r\n  // Función para mostrar el modal con detalles (se utiliza al hacer clic en la tarjeta)\r\n  const handleClick = async (id, type) => {\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/${type}/${id}`);\r\n      const data = await response.json();\r\n      setSelectedItem({ ...data, type });\r\n      setIsModalOpen(true);\r\n    } catch (error) {\r\n      console.error(`❌ Error al cargar ${type}:`, error);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedItem(null);\r\n  };\r\n\r\n  // Componente interno para cada tarjeta de contenido\r\n  const ContentCard = ({ item, type }) => {\r\n    const [isFavorite, setIsFavorite] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    // Determinar el estado inicial del ítem, según los favoritos del usuario almacenados en sessionStorage\r\n    useEffect(() => {\r\n      const userString = sessionStorage.getItem(\"user\");\r\n      if (userString) {\r\n        const user = JSON.parse(userString);\r\n        if (user.Favorites) {\r\n          const favs = user.Favorites.split(\",\");\r\n          // Suponemos que el id del ítem viene en item.id, o en item.Id_Movie o item.Id_Series\r\n          const itemId = item.id || item.Id_Movie || item.Id_Series;\r\n          setIsFavorite(favs.includes(String(itemId)));\r\n        }\r\n      }\r\n    }, [item]);\r\n\r\n    // Maneja el clic sobre el ícono de favorito\r\n    const handleFavoriteClick = async (e) => {\r\n      e.stopPropagation(); // Evita que se active el clic principal de la tarjeta\r\n      const newFavState = !isFavorite;\r\n      setIsFavorite(newFavState);\r\n      setMessage(newFavState ? \"Añadido a favoritos\" : \"Eliminado de favoritos\");\r\n      setTimeout(() => setMessage(\"\"), 2000);\r\n\r\n      const userString = sessionStorage.getItem(\"user\");\r\n      if (userString) {\r\n        const user = JSON.parse(userString);\r\n        const itemId = item.id || item.Id_Movie || item.Id_Series;\r\n        try {\r\n          const response = await fetch(`${config.API_URL}/api/usuario/favorites`, {\r\n            method: \"PUT\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              userId: user.id,\r\n              itemId: itemId,\r\n              isFavorite: newFavState,\r\n            }),\r\n          });\r\n          if (!response.ok) {\r\n            throw new Error(\"Error actualizando favoritos\");\r\n          }\r\n          const data = await response.json();\r\n          // Opcional: aquí se podría actualizar el objeto usuario en sessionStorage si necesitas sincronizar la info.\r\n        } catch (err) {\r\n          console.error(\"❌ Error actualizando favoritos:\", err);\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className=\"content-card\"\r\n        onClick={() =>\r\n          handleClick(item.id || item.Id_Movie || item.Id_Series, type)\r\n        }\r\n      >\r\n        <div className=\"card-image-container\" style={{ position: \"relative\" }}>\r\n          <img src={`${config.API_URL}${item.Image}`} alt={item.Title} />\r\n          <div\r\n            className=\"favorite-icon\"\r\n            onClick={handleFavoriteClick}\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"10px\",\r\n              left: \"10px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <i\r\n              className={`fa ${isFavorite ? \"fa-star\" : \"fa-star-o\"}`}\r\n              style={{ fontSize: \"24px\", color: \"gold\" }}\r\n            />\r\n            {message && (\r\n              <div\r\n                className=\"favorite-message\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"0\",\r\n                  left: \"40px\",\r\n                  background: \"rgba(0,0,0,0.7)\",\r\n                  padding: \"3px 8px\",\r\n                  borderRadius: \"5px\",\r\n                  color: \"white\",\r\n                  fontSize: \"14px\",\r\n                }}\r\n              >\r\n                {message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <p>{item.Title}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"index-container\">\r\n      <h1>Bienvenido a Blockbuster</h1>\r\n      <p>Explora nuestras series y películas.</p>\r\n\r\n      <div className=\"content-section\">\r\n        <h2>Series Populares</h2>\r\n        <div className=\"content-carousel\">\r\n          {seriesList.map((series) => (\r\n            <ContentCard key={series.Id_Series} item={series} type=\"series\" />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content-section\">\r\n        <h2>Películas Destacadas</h2>\r\n        <div className=\"content-carousel\">\r\n          {moviesList.map((movie) => (\r\n            <ContentCard key={movie.Id_Movie} item={movie} type=\"movies\" />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal para mostrar detalles de películas o series */}\r\n      <Modal isOpen={isModalOpen} onClose={closeModal} data={selectedItem} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}